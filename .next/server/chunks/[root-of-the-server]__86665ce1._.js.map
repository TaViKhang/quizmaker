{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const db = globalThis.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prisma = db;\n"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,KAAK,WAAW,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEvD,wCAA2C,WAAW,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth, { AuthOptions } from \"next-auth\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\"\nimport { db } from \"@/lib/db\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport { ROLES, RoleType } from \"@/lib/constants\"\n\n// Domain email được ủy quyền cao hơn\nconst AUTHORIZED_TEACHER_DOMAINS = ['school.edu', 'university.edu', 'teacher.org']\n\n// Fix cho type adapter\nconst prismaAdapter = PrismaAdapter(db) as any\n\n// Cải thiện error handling\nconst handleAuthError = (error: any, context: string) => {\n  console.error(`[Auth Error] ${context}:`, error);\n  return false;\n}\n\nexport const authOptions: AuthOptions = {\n  adapter: prismaAdapter,\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      allowDangerousEmailAccountLinking: true,\n    }),\n  ],\n  session: {\n    strategy: \"jwt\",\n    maxAge: 24 * 60 * 60, // 24 hours\n    updateAge: 4 * 60 * 60, // 4 hours\n  },\n  callbacks: {\n    async jwt({ token, user, account, profile, trigger }) {\n      try {\n        // Trường hợp đăng nhập - Chỉ cập nhật token khi có user từ đăng nhập\n        if (user) {\n          // Đảm bảo role có thể null\n          token.role = user.role as RoleType | null;\n          token.id = user.id;\n          return token;\n        }\n        \n        // Trường hợp trigger update - Cập nhật token khi có sự thay đổi rõ ràng\n        if (trigger === 'update' && token?.sub) {\n          try {\n            const dbUser = await db.user.findUnique({\n              where: { id: token.sub },\n              select: { \n                id: true, \n                name: true, \n                email: true, \n                role: true, \n                image: true \n              }\n            });\n            \n            if (dbUser) {\n              // Cập nhật token với giá trị mới\n              token.role = dbUser.role as RoleType | null;\n              token.name = dbUser.name;\n              token.email = dbUser.email;\n              token.picture = dbUser.image;\n              \n              // Thêm timestamp để đảm bảo không cache token cũ\n              token.updatedAt = Date.now();\n            }\n          } catch (error) {\n            console.error(\"Error updating token:\", error);\n          }\n          return token;\n        }\n        \n        // Trường hợp token từ session: kiểm tra nếu cần cập nhật\n        if (token?.sub && (!token.role || !token.updatedAt || Date.now() - (token.updatedAt as number || 0) > 60 * 1000)) {\n          try {\n            const dbUser = await db.user.findUnique({\n              where: { id: token.sub },\n              select: { role: true }\n            });\n            \n            if (dbUser) {\n              token.role = dbUser.role as RoleType | null;\n              token.updatedAt = Date.now();\n            }\n          } catch (error) {\n            console.error(\"Error refreshing token:\", error);\n          }\n        }\n        \n        return token;\n      } catch (error) {\n        console.error(\"JWT callback error:\", error);\n        return token;\n      }\n    },\n    async session({ session, token }) {\n      try {\n        if (session.user && token) {\n          // Đảm bảo role có thể null\n          session.user.role = token.role as RoleType | null;\n          session.user.id = token.id as string;\n        }\n        return session;\n      } catch (error) {\n        console.error(\"Session callback error:\", error);\n        return session;\n      }\n    },\n    async signIn({ user, account, profile }) {\n      // Nếu user có email\n      if (user?.email) {\n        try {\n          // Kiểm tra user đã tồn tại chưa\n          const existingUser = await db.user.findUnique({\n            where: { email: user.email },\n          })\n          \n          if (!existingUser) {\n            // Tạo user mới không có role (null) để người dùng chọn sau\n            await db.user.create({\n              data: {\n                id: user.id,\n                email: user.email,\n                name: user.name,\n                image: user.image,\n                role: null, // Không thiết lập role mặc định\n              },\n            })\n            \n            // Đánh dấu để redirect tới trang chọn role\n            return true\n          }\n          \n          return true\n        } catch (error) {\n          return handleAuthError(error, \"signIn callback\");\n        }\n      }\n      \n      return true\n    }\n  },\n  pages: {\n    signIn: '/auth/signin',\n    signOut: '/',\n    error: '/auth/error',\n    newUser: '/auth/select-role' // Điều hướng người dùng mới đến trang chọn role\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  debug: process.env.NODE_ENV === \"development\",\n  logger: {\n    error(code, ...message) {\n      console.error(`[NextAuth Error] ${code}:`, ...message);\n    },\n    warn(code, ...message) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.warn(`[NextAuth Warning] ${code}:`, ...message);\n      }\n    },\n    debug(code, ...message) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.debug(`[NextAuth Debug] ${code}:`, ...message);\n      }\n    },\n  },\n}\n\nconst handler = NextAuth(authOptions)\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;AAGA,qCAAqC;AACrC,MAAM,6BAA6B;IAAC;IAAc;IAAkB;CAAc;AAElF,uBAAuB;AACvB,MAAM,gBAAgB,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE,2GAAA,CAAA,KAAE;AAEtC,2BAA2B;AAC3B,MAAM,kBAAkB,CAAC,OAAY;IACnC,QAAQ,KAAK,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,EAAE;IAC1C,OAAO;AACT;AAEO,MAAM,cAA2B;IACtC,SAAS;IACT,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;YAC9C,mCAAmC;QACrC;KACD;IACD,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK;QAClB,WAAW,IAAI,KAAK;IACtB;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE;YAClD,IAAI;gBACF,qEAAqE;gBACrE,IAAI,MAAM;oBACR,2BAA2B;oBAC3B,MAAM,IAAI,GAAG,KAAK,IAAI;oBACtB,MAAM,EAAE,GAAG,KAAK,EAAE;oBAClB,OAAO;gBACT;gBAEA,wEAAwE;gBACxE,IAAI,YAAY,YAAY,OAAO,KAAK;oBACtC,IAAI;wBACF,MAAM,SAAS,MAAM,2GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;4BACtC,OAAO;gCAAE,IAAI,MAAM,GAAG;4BAAC;4BACvB,QAAQ;gCACN,IAAI;gCACJ,MAAM;gCACN,OAAO;gCACP,MAAM;gCACN,OAAO;4BACT;wBACF;wBAEA,IAAI,QAAQ;4BACV,iCAAiC;4BACjC,MAAM,IAAI,GAAG,OAAO,IAAI;4BACxB,MAAM,IAAI,GAAG,OAAO,IAAI;4BACxB,MAAM,KAAK,GAAG,OAAO,KAAK;4BAC1B,MAAM,OAAO,GAAG,OAAO,KAAK;4BAE5B,iDAAiD;4BACjD,MAAM,SAAS,GAAG,KAAK,GAAG;wBAC5B;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,yBAAyB;oBACzC;oBACA,OAAO;gBACT;gBAEA,yDAAyD;gBACzD,IAAI,OAAO,OAAO,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,SAAS,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,SAAS,IAAc,CAAC,IAAI,KAAK,IAAI,GAAG;oBAChH,IAAI;wBACF,MAAM,SAAS,MAAM,2GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;4BACtC,OAAO;gCAAE,IAAI,MAAM,GAAG;4BAAC;4BACvB,QAAQ;gCAAE,MAAM;4BAAK;wBACvB;wBAEA,IAAI,QAAQ;4BACV,MAAM,IAAI,GAAG,OAAO,IAAI;4BACxB,MAAM,SAAS,GAAG,KAAK,GAAG;wBAC5B;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,2BAA2B;oBAC3C;gBACF;gBAEA,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,OAAO;YACT;QACF;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI;gBACF,IAAI,QAAQ,IAAI,IAAI,OAAO;oBACzB,2BAA2B;oBAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;oBAC9B,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC5B;gBACA,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;gBACzC,OAAO;YACT;QACF;QACA,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACrC,oBAAoB;YACpB,IAAI,MAAM,OAAO;gBACf,IAAI;oBACF,gCAAgC;oBAChC,MAAM,eAAe,MAAM,2GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;wBAC5C,OAAO;4BAAE,OAAO,KAAK,KAAK;wBAAC;oBAC7B;oBAEA,IAAI,CAAC,cAAc;wBACjB,2DAA2D;wBAC3D,MAAM,2GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;4BACnB,MAAM;gCACJ,IAAI,KAAK,EAAE;gCACX,OAAO,KAAK,KAAK;gCACjB,MAAM,KAAK,IAAI;gCACf,OAAO,KAAK,KAAK;gCACjB,MAAM;4BACR;wBACF;wBAEA,2CAA2C;wBAC3C,OAAO;oBACT;oBAEA,OAAO;gBACT,EAAE,OAAO,OAAO;oBACd,OAAO,gBAAgB,OAAO;gBAChC;YACF;YAEA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;QACR,SAAS;QACT,OAAO;QACP,SAAS,oBAAoB,gDAAgD;IAC/E;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,OAAO,oDAAyB;IAChC,QAAQ;QACN,OAAM,IAAI,EAAE,GAAG,OAAO;YACpB,QAAQ,KAAK,CAAC,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,KAAK;QAChD;QACA,MAAK,IAAI,EAAE,GAAG,OAAO;YACnB,wCAA4C;gBAC1C,QAAQ,IAAI,CAAC,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,KAAK;YACjD;QACF;QACA,OAAM,IAAI,EAAE,GAAG,OAAO;YACpB,wCAA4C;gBAC1C,QAAQ,KAAK,CAAC,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,KAAK;YAChD;QACF;IACF;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/constants.ts"],"sourcesContent":["import { LucideIcon } from \"lucide-react\";\nimport { Role } from \"@prisma/client\";\nimport {\n  BarChart,\n  BookOpen,\n  ClipboardCheck,\n  FileText,\n  Home,\n  ListChecks,\n  Settings,\n  Users,\n  LineChart,\n  Plus,\n  PlusCircle,\n  Eye,\n  School,\n} from \"lucide-react\";\n\n/**\n * Role definitions in the system\n */\nexport const ROLES = {\n  TEACHER: \"TEACHER\",\n  STUDENT: \"STUDENT\"\n} as const;\n\n/**\n * Type definition for Role\n */\nexport type RoleType = typeof ROLES[keyof typeof ROLES] | null;\n\n/**\n * Interface for navigation items in dashboard\n */\nexport interface DashboardNavItem {\n  /**\n   * Display title\n   */\n  title: string;\n  /**\n   * Route path\n   */\n  href: string;\n  /**\n   * Icon component\n   */\n  icon: LucideIcon;\n  /**\n   * Roles that can access this item\n   */\n  roles: Role[];\n  /**\n   * Whether to hide this item in the top navigation\n   * @default false\n   */\n  hideInTopNav?: boolean;\n}\n\n/**\n * Dashboard navigation links\n */\nexport const DASHBOARD_NAV_LINKS: DashboardNavItem[] = [\n  {\n    title: \"Home\",\n    href: \"/dashboard\",\n    icon: Home,\n    roles: [Role.TEACHER, Role.STUDENT],\n    hideInTopNav: false,\n  },\n  // TEACHER links\n  {\n    title: \"Create Class\",\n    href: \"/dashboard/teacher/classes/create\",\n    icon: PlusCircle,\n    roles: [Role.TEACHER],\n    hideInTopNav: false,\n  },\n  {\n    title: \"Create Quiz\",\n    href: \"/dashboard/teacher/quizzes/create\",\n    icon: Plus,\n    roles: [Role.TEACHER],\n    hideInTopNav: false,\n  },\n  {\n    title: \"View Classes\",\n    href: \"/dashboard/teacher/classes\",\n    icon: School,\n    roles: [Role.TEACHER],\n    hideInTopNav: false,\n  },\n  {\n    title: \"All Quizzes\",\n    href: \"/dashboard/teacher/quizzes\",\n    icon: FileText,\n    roles: [Role.TEACHER],\n    hideInTopNav: false,\n  },\n  {\n    title: \"View Students\",\n    href: \"/dashboard/teacher/students\",\n    icon: Users,\n    roles: [Role.TEACHER],\n    hideInTopNav: false,\n  },\n  // STUDENT links\n  {\n    title: \"My Quizzes\",\n    href: \"/dashboard/student/quizzes\",\n    icon: BookOpen,\n    roles: [Role.STUDENT],\n    hideInTopNav: false,\n  },\n  {\n    title: \"My Classes\",\n    href: \"/dashboard/student/classes\",\n    icon: Users,\n    roles: [Role.STUDENT],\n    hideInTopNav: false,\n  },\n  {\n    title: \"My Results\",\n    href: \"/dashboard/student/results\",\n    icon: ClipboardCheck,\n    roles: [Role.STUDENT],\n    hideInTopNav: false,\n  },\n  {\n    title: \"Analytics\",\n    href: \"/dashboard/student/analytics/class-participation\",\n    icon: LineChart,\n    roles: [Role.STUDENT],\n    hideInTopNav: false,\n  },\n  // Shared links\n  {\n    title: \"Settings\",\n    href: \"/dashboard/settings\",\n    icon: Settings,\n    roles: [Role.TEACHER, Role.STUDENT],\n    hideInTopNav: true,\n  },\n  // Links without role requirements\n  {\n    title: \"Settings\",\n    href: \"/dashboard/settings\",\n    icon: Settings,\n    roles: [],\n    hideInTopNav: true,\n  },\n]; "],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAmBO,MAAM,QAAQ;IACnB,SAAS;IACT,SAAS;AACX;AAqCO,MAAM,sBAA0C;IACrD;QACE,OAAO;QACP,MAAM;QACN,MAAM,oMAAA,CAAA,OAAI;QACV,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;YAAE,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACnC,cAAc;IAChB;IACA,gBAAgB;IAChB;QACE,OAAO;QACP,MAAM;QACN,MAAM,oNAAA,CAAA,aAAU;QAChB,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,oMAAA,CAAA,OAAI;QACV,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,wMAAA,CAAA,SAAM;QACZ,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,gNAAA,CAAA,WAAQ;QACd,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,sMAAA,CAAA,QAAK;QACX,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA,gBAAgB;IAChB;QACE,OAAO;QACP,MAAM;QACN,MAAM,gNAAA,CAAA,WAAQ;QACd,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,sMAAA,CAAA,QAAK;QACX,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,4NAAA,CAAA,iBAAc;QACpB,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA;QACE,OAAO;QACP,MAAM;QACN,MAAM,kNAAA,CAAA,YAAS;QACf,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACrB,cAAc;IAChB;IACA,eAAe;IACf;QACE,OAAO;QACP,MAAM;QACN,MAAM,4MAAA,CAAA,WAAQ;QACd,OAAO;YAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;YAAE,6HAAA,CAAA,OAAI,CAAC,OAAO;SAAC;QACnC,cAAc;IAChB;IACA,kCAAkC;IAClC;QACE,OAAO;QACP,MAAM;QACN,MAAM,4MAAA,CAAA,WAAQ;QACd,OAAO,EAAE;QACT,cAAc;IAChB;CACD","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/api/auth/select-role/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { db } from \"@/lib/db\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\nimport { z } from \"zod\";\nimport { ROLES } from \"@/lib/constants\";\n\n// Increase authentication speed by using runtime config\nexport const dynamic = 'force-dynamic';\n// Remove edge runtime because it's not compatible with Prisma\n\n// Schema validation for the request\nconst selectRoleSchema = z.object({\n  role: z.enum([ROLES.TEACHER, ROLES.STUDENT], {\n    message: \"Role must be either TEACHER or STUDENT\",\n  }),\n});\n\nexport async function POST(req: Request) {\n  try {\n    // Check if user is authenticated\n    const session = await getServerSession(authOptions);\n\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: \"You must be logged in to select a role\" }, \n        { status: 401 }\n      );\n    }\n\n    // Parse and validate the request body - only get necessary fields\n    let body;\n    try {\n      body = await req.json();\n    } catch (jsonError) {\n      return NextResponse.json(\n        { error: \"Invalid JSON in request body\" },\n        { status: 400 }\n      );\n    }\n\n    const validationResult = selectRoleSchema.safeParse(body);\n    \n    if (!validationResult.success) {\n      return NextResponse.json(\n        { error: \"Invalid data\", details: validationResult.error.flatten() }, \n        { status: 400 }\n      );\n    }\n\n    const { role } = validationResult.data;\n\n    try {\n      // Check if user exists before updating\n      const existingUser = await db.user.findUnique({\n        where: { id: session.user.id },\n      });\n      \n      if (!existingUser) {\n        return NextResponse.json(\n          { error: \"User not found\" },\n          { status: 404 }\n        );\n      }\n      \n      // Update role in database\n      const updatedUser = await db.user.update({\n        where: { id: session.user.id },\n        data: { role },\n        select: {\n          id: true,\n          role: true,\n        }\n      });\n      \n      // Force session refresh\n      const timestamp = Date.now();\n      \n      // Create protection variable to prevent infinite loops\n      const redirectToken = Math.random().toString(36).substring(2, 15);\n      \n      // Create special cookie to mark role selection\n      const response = NextResponse.json(\n        {\n          success: true,\n          user: updatedUser,\n          timestamp\n        },\n        {\n          status: 200,\n          headers: {\n            'Content-Type': 'application/json',\n            'Cache-Control': 'no-store, max-age=0',\n          }\n        }\n      );\n      \n      // Set cookie to mark that user has selected a role\n      response.cookies.set('role-selected', 'true', {\n        httpOnly: true,\n        maxAge: 60 * 60, // 1 hour\n        path: '/',\n      });\n      \n      // Set protection cookie to prevent loops\n      response.cookies.set('redirect-protection', redirectToken, {\n        httpOnly: true,\n        maxAge: 30, // 30 seconds\n        path: '/',\n      });\n      \n      return response;\n      \n    } catch (dbError) {\n      console.error(\"Database error during role selection:\", dbError);\n      return NextResponse.json(\n        { error: \"Failed to update role in database. Please try again.\" },\n        { status: 500 }\n      );\n    }\n  } catch (error) {\n    console.error(\"Unexpected error in role selection:\", error);\n    return NextResponse.json(\n      { error: \"An unexpected error occurred. Please try again.\" }, \n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}
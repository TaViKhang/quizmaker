{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const db = globalThis.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prisma = db;\n"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,KAAK,WAAW,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEvD,wCAA2C,WAAW,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth, { AuthOptions } from \"next-auth\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\"\nimport { db } from \"@/lib/db\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport { ROLES, RoleType } from \"@/lib/constants\"\n\n// Domain email được ủy quyền cao hơn\nconst AUTHORIZED_TEACHER_DOMAINS = ['school.edu', 'university.edu', 'teacher.org']\n\n// Fix cho type adapter\nconst prismaAdapter = PrismaAdapter(db) as any\n\n// Cải thiện error handling\nconst handleAuthError = (error: any, context: string) => {\n  console.error(`[Auth Error] ${context}:`, error);\n  return false;\n}\n\nexport const authOptions: AuthOptions = {\n  adapter: prismaAdapter,\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      allowDangerousEmailAccountLinking: true,\n    }),\n  ],\n  session: {\n    strategy: \"jwt\",\n    maxAge: 24 * 60 * 60, // 24 hours\n    updateAge: 4 * 60 * 60, // 4 hours\n  },\n  callbacks: {\n    async jwt({ token, user, account, profile, trigger }) {\n      try {\n        // Trường hợp đăng nhập - Chỉ cập nhật token khi có user từ đăng nhập\n        if (user) {\n          // Đảm bảo role có thể null\n          token.role = user.role as RoleType | null;\n          token.id = user.id;\n          return token;\n        }\n        \n        // Trường hợp trigger update - Cập nhật token khi có sự thay đổi rõ ràng\n        if (trigger === 'update' && token?.sub) {\n          try {\n            const dbUser = await db.user.findUnique({\n              where: { id: token.sub },\n              select: { \n                id: true, \n                name: true, \n                email: true, \n                role: true, \n                image: true \n              }\n            });\n            \n            if (dbUser) {\n              // Cập nhật token với giá trị mới\n              token.role = dbUser.role as RoleType | null;\n              token.name = dbUser.name;\n              token.email = dbUser.email;\n              token.picture = dbUser.image;\n              \n              // Thêm timestamp để đảm bảo không cache token cũ\n              token.updatedAt = Date.now();\n            }\n          } catch (error) {\n            console.error(\"Error updating token:\", error);\n          }\n          return token;\n        }\n        \n        // Trường hợp token từ session: kiểm tra nếu cần cập nhật\n        if (token?.sub && (!token.role || !token.updatedAt || Date.now() - (token.updatedAt as number || 0) > 60 * 1000)) {\n          try {\n            const dbUser = await db.user.findUnique({\n              where: { id: token.sub },\n              select: { role: true }\n            });\n            \n            if (dbUser) {\n              token.role = dbUser.role as RoleType | null;\n              token.updatedAt = Date.now();\n            }\n          } catch (error) {\n            console.error(\"Error refreshing token:\", error);\n          }\n        }\n        \n        return token;\n      } catch (error) {\n        console.error(\"JWT callback error:\", error);\n        return token;\n      }\n    },\n    async session({ session, token }) {\n      try {\n        if (session.user && token) {\n          // Đảm bảo role có thể null\n          session.user.role = token.role as RoleType | null;\n          session.user.id = token.id as string;\n        }\n        return session;\n      } catch (error) {\n        console.error(\"Session callback error:\", error);\n        return session;\n      }\n    },\n    async signIn({ user, account, profile }) {\n      // Nếu user có email\n      if (user?.email) {\n        try {\n          // Kiểm tra user đã tồn tại chưa\n          const existingUser = await db.user.findUnique({\n            where: { email: user.email },\n          })\n          \n          if (!existingUser) {\n            // Tạo user mới không có role (null) để người dùng chọn sau\n            await db.user.create({\n              data: {\n                id: user.id,\n                email: user.email,\n                name: user.name,\n                image: user.image,\n                role: null, // Không thiết lập role mặc định\n              },\n            })\n            \n            // Đánh dấu để redirect tới trang chọn role\n            return true\n          }\n          \n          return true\n        } catch (error) {\n          return handleAuthError(error, \"signIn callback\");\n        }\n      }\n      \n      return true\n    }\n  },\n  pages: {\n    signIn: '/auth/signin',\n    signOut: '/',\n    error: '/auth/error',\n    newUser: '/auth/select-role' // Điều hướng người dùng mới đến trang chọn role\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  debug: process.env.NODE_ENV === \"development\",\n  logger: {\n    error(code, ...message) {\n      console.error(`[NextAuth Error] ${code}:`, ...message);\n    },\n    warn(code, ...message) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.warn(`[NextAuth Warning] ${code}:`, ...message);\n      }\n    },\n    debug(code, ...message) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.debug(`[NextAuth Debug] ${code}:`, ...message);\n      }\n    },\n  },\n}\n\nconst handler = NextAuth(authOptions)\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/api-response.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { ZodError } from \"zod\";\n\n/**\n * Standard response structure for paginated data\n */\nexport interface PaginatedResponseData<T> {\n  success: boolean;\n  data: {\n    items: T[];\n    pagination: {\n      total: number;\n      page: number;\n      limit: number;\n      totalPages: number;\n    };\n  };\n  meta?: Record<string, any>;\n}\n\n/**\n * Standard response structure for single item data\n */\nexport interface SingleResponseData<T> {\n  success: boolean;\n  data: T;\n  meta?: Record<string, any>;\n}\n\n/**\n * Standard error response structure\n */\nexport interface ErrorResponseData {\n  success: boolean;\n  error: {\n    code: string;\n    message: string;\n    details?: any;\n  };\n}\n\n/**\n * Create a successful response with pagination\n */\nexport function createPaginatedResponse<T>(\n  data: T[],\n  total: number,\n  page: number,\n  limit: number,\n  meta?: Record<string, any>,\n  headers?: HeadersInit\n): NextResponse {\n  const response: PaginatedResponseData<T> = {\n    success: true,\n    data: {\n      items: data,\n      pagination: {\n        total,\n        page,\n        limit,\n        totalPages: Math.ceil(total / limit)\n      }\n    }\n  };\n\n  if (meta) {\n    response.meta = meta;\n  }\n\n  return NextResponse.json(response, { headers });\n}\n\n/**\n * Create a successful response for a single item\n */\nexport function createSuccessResponse<T>(\n  data: T,\n  status: number = 200,\n  meta?: Record<string, any>,\n  headers?: HeadersInit\n): NextResponse {\n  const response: SingleResponseData<T> = { \n    success: true,\n    data \n  };\n  \n  if (meta) {\n    response.meta = meta;\n  }\n  \n  return NextResponse.json(response, { status, headers });\n}\n\n/**\n * Create an error response\n */\nexport function createErrorResponse(\n  code: string,\n  message: string,\n  details?: any,\n  status: number = 400\n): NextResponse {\n  const response: ErrorResponseData = {\n    success: false,\n    error: {\n      code,\n      message\n    }\n  };\n  \n  if (details) {\n    response.error.details = details;\n  }\n  \n  return NextResponse.json(response, { status });\n}\n\n/**\n * Format Zod validation errors\n */\nexport function formatZodError(error: ZodError) {\n  return {\n    code: \"VALIDATION_ERROR\",\n    message: \"Invalid input data\",\n    details: error.errors.map(err => ({\n      path: err.path.join('.'),\n      message: err.message\n    }))\n  };\n}\n\n/**\n * Create an authenticated error response (401)\n */\nexport function createAuthenticationError(): NextResponse {\n  return createErrorResponse(\n    \"UNAUTHENTICATED\",\n    \"You must be logged in to access this resource\",\n    undefined,\n    401\n  );\n}\n\n/**\n * Create a permission error response (403)\n */\nexport function createPermissionError(message: string = \"You don't have permission to access this resource\"): NextResponse {\n  return createErrorResponse(\n    \"UNAUTHORIZED\", \n    message,\n    undefined,\n    403\n  );\n}\n\n/**\n * Create a not found error response (404)\n */\nexport function createNotFoundError(resource: string = \"Resource\"): NextResponse {\n  return createErrorResponse(\n    \"NOT_FOUND\",\n    `${resource} not found`,\n    undefined,\n    404\n  );\n}\n\n/**\n * Create a server error response (500)\n */\nexport function createServerError(error?: Error): NextResponse {\n  console.error(\"Server error:\", error);\n  \n  return createErrorResponse(\n    \"SERVER_ERROR\",\n    \"An unexpected error occurred\",\n    process.env.NODE_ENV === 'development' ? error?.message : undefined,\n    500\n  );\n}\n\n/**\n * Create a validation error response (400)\n */\nexport function createValidationError(details?: any): NextResponse {\n  return createErrorResponse(\n    \"VALIDATION_ERROR\",\n    \"Invalid input data\",\n    details,\n    400\n  );\n} "],"names":[],"mappings":";;;;;;;;;;;AAAA;;AA4CO,SAAS,wBACd,IAAS,EACT,KAAa,EACb,IAAY,EACZ,KAAa,EACb,IAA0B,EAC1B,OAAqB;IAErB,MAAM,WAAqC;QACzC,SAAS;QACT,MAAM;YACJ,OAAO;YACP,YAAY;gBACV;gBACA;gBACA;gBACA,YAAY,KAAK,IAAI,CAAC,QAAQ;YAChC;QACF;IACF;IAEA,IAAI,MAAM;QACR,SAAS,IAAI,GAAG;IAClB;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE;IAAQ;AAC/C;AAKO,SAAS,sBACd,IAAO,EACP,SAAiB,GAAG,EACpB,IAA0B,EAC1B,OAAqB;IAErB,MAAM,WAAkC;QACtC,SAAS;QACT;IACF;IAEA,IAAI,MAAM;QACR,SAAS,IAAI,GAAG;IAClB;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE;QAAQ;IAAQ;AACvD;AAKO,SAAS,oBACd,IAAY,EACZ,OAAe,EACf,OAAa,EACb,SAAiB,GAAG;IAEpB,MAAM,WAA8B;QAClC,SAAS;QACT,OAAO;YACL;YACA;QACF;IACF;IAEA,IAAI,SAAS;QACX,SAAS,KAAK,CAAC,OAAO,GAAG;IAC3B;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE;IAAO;AAC9C;AAKO,SAAS,eAAe,KAAe;IAC5C,OAAO;QACL,MAAM;QACN,SAAS;QACT,SAAS,MAAM,MAAM,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;gBAChC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;gBACpB,SAAS,IAAI,OAAO;YACtB,CAAC;IACH;AACF;AAKO,SAAS;IACd,OAAO,oBACL,mBACA,iDACA,WACA;AAEJ;AAKO,SAAS,sBAAsB,UAAkB,mDAAmD;IACzG,OAAO,oBACL,gBACA,SACA,WACA;AAEJ;AAKO,SAAS,oBAAoB,WAAmB,UAAU;IAC/D,OAAO,oBACL,aACA,GAAG,SAAS,UAAU,CAAC,EACvB,WACA;AAEJ;AAKO,SAAS,kBAAkB,KAAa;IAC7C,QAAQ,KAAK,CAAC,iBAAiB;IAE/B,OAAO,oBACL,gBACA,gCACA,uCAAyC,OAAO,gDAChD;AAEJ;AAKO,SAAS,sBAAsB,OAAa;IACjD,OAAO,oBACL,oBACA,sBACA,SACA;AAEJ","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/api/classes/%5Bid%5D/announcements/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\nimport { db } from \"@/lib/db\";\r\nimport { z } from \"zod\";\r\nimport { Role, ClassType } from \"@prisma/client\";\r\nimport { \r\n  createPaginatedResponse,\r\n  createSuccessResponse, \r\n  createErrorResponse, \r\n  createAuthenticationError,\r\n  createPermissionError,\r\n  createNotFoundError,\r\n  createServerError\r\n} from \"@/lib/api-response\";\r\n\r\n// Schema validation for creating an announcement\r\nconst createAnnouncementSchema = z.object({\r\n  title: z.string().min(1, \"Title is required\").max(100, \"Title too long\"),\r\n  content: z.string().min(1, \"Content is required\").max(5000, \"Content too long\"),\r\n});\r\n\r\n// GET handler for retrieving class announcements\r\nexport async function GET(\r\n  request: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    \r\n    if (!session?.user) {\r\n      return createAuthenticationError();\r\n    }\r\n    \r\n    const classId = params.id;\r\n    \r\n    // Parse query parameters\r\n    const { searchParams } = new URL(request.url);\r\n    const page = parseInt(searchParams.get(\"page\") || \"1\", 10);\r\n    const limit = parseInt(searchParams.get(\"limit\") || \"10\", 10);\r\n    const search = searchParams.get(\"search\") || \"\";\r\n    \r\n    // Skip calculation for pagination\r\n    const skip = (page - 1) * limit;\r\n    \r\n    // Check if class exists and user has access\r\n    const classAccess = await db.class.findFirst({\r\n      where: {\r\n        id: classId,\r\n        OR: [\r\n          // Teacher access\r\n          { teacherId: session.user.id },\r\n          // Student access (must be enrolled)\r\n          {\r\n            students: {\r\n              some: {\r\n                studentId: session.user.id\r\n              }\r\n            }\r\n          },\r\n          // Public class\r\n          { type: ClassType.PUBLIC }\r\n        ]\r\n      },\r\n      select: { \r\n        id: true,\r\n        name: true,\r\n        teacherId: true\r\n      }\r\n    });\r\n    \r\n    if (!classAccess) {\r\n      return createPermissionError(\"You don't have access to this class\");\r\n    }\r\n    \r\n    // Build where conditions\r\n    let where: any = { classId };\r\n    \r\n    // Add search condition if provided\r\n    if (search) {\r\n      where.OR = [\r\n        { title: { contains: search, mode: 'insensitive' } },\r\n        { content: { contains: search, mode: 'insensitive' } }\r\n      ];\r\n    }\r\n    \r\n    // Count total for pagination\r\n    const total = await db.classAnnouncement.count({ where });\r\n    \r\n    // Fetch announcements with pagination\r\n    const announcements = await db.classAnnouncement.findMany({\r\n      where,\r\n      orderBy: {\r\n        createdAt: 'desc'\r\n      },\r\n      skip,\r\n      take: limit\r\n    });\r\n    \r\n    // Return paginated response\r\n    return createPaginatedResponse(\r\n      announcements,\r\n      total,\r\n      page,\r\n      limit,\r\n      {\r\n        filters: { search },\r\n        className: classAccess.name\r\n      }\r\n    );\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error fetching class announcements:\", error);\r\n    return createServerError(error instanceof Error ? error : new Error(\"Unknown error\"));\r\n  }\r\n}\r\n\r\n// POST handler for creating a new announcement\r\nexport async function POST(\r\n  request: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    \r\n    if (!session?.user) {\r\n      return createAuthenticationError();\r\n    }\r\n    \r\n    // Only teachers can create announcements\r\n    if (session.user.role !== Role.TEACHER) {\r\n      return createPermissionError(\"Only teachers can create announcements\");\r\n    }\r\n    \r\n    const classId = params.id;\r\n    \r\n    // Check if class exists and teacher owns it\r\n    const classItem = await db.class.findFirst({\r\n      where: {\r\n        id: classId,\r\n        teacherId: session.user.id\r\n      }\r\n    });\r\n    \r\n    if (!classItem) {\r\n      return createNotFoundError(\"Class not found or you don't have permission to create announcements\");\r\n    }\r\n    \r\n    const body = await request.json();\r\n    \r\n    // Validate input\r\n    const validationResult = createAnnouncementSchema.safeParse(body);\r\n    \r\n    if (!validationResult.success) {\r\n      return createErrorResponse(\r\n        \"VALIDATION_ERROR\",\r\n        \"Invalid announcement data\",\r\n        validationResult.error.errors\r\n      );\r\n    }\r\n    \r\n    const { title, content } = validationResult.data;\r\n    \r\n    // Create new announcement\r\n    const newAnnouncement = await db.classAnnouncement.create({\r\n      data: {\r\n        title,\r\n        content,\r\n        class: {\r\n          connect: {\r\n            id: classId\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Trigger notifications for all students in the class\r\n    // Import the trigger function dynamically to avoid circular dependencies\r\n    const { triggerClassAnnouncementNotification } = await import('@/lib/service-trigger');\r\n    \r\n    // Trigger notification with announcement details - đảm bảo gửi ngay lập tức\r\n    const notifiedCount = await triggerClassAnnouncementNotification({\r\n      classId,\r\n      announcementId: newAnnouncement.id,\r\n      title: newAnnouncement.title,\r\n      content: newAnnouncement.content,\r\n      teacherId: session.user.id\r\n    });\r\n    \r\n    console.log(`Sent announcement notifications to ${notifiedCount} students`);\r\n    \r\n    return createSuccessResponse({\r\n      id: newAnnouncement.id,\r\n      title: newAnnouncement.title,\r\n      createdAt: newAnnouncement.createdAt\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error creating announcement:\", error);\r\n    return createServerError(error instanceof Error ? error : new Error(\"Unknown error\"));\r\n  }\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}
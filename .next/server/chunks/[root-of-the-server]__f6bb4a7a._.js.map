{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const db = globalThis.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prisma = db;\n"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,KAAK,WAAW,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEvD,wCAA2C,WAAW,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth, { AuthOptions } from \"next-auth\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\"\nimport { db } from \"@/lib/db\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport { ROLES, RoleType } from \"@/lib/constants\"\n\n// Domain email được ủy quyền cao hơn\nconst AUTHORIZED_TEACHER_DOMAINS = ['school.edu', 'university.edu', 'teacher.org']\n\n// Fix cho type adapter\nconst prismaAdapter = PrismaAdapter(db) as any\n\n// Cải thiện error handling\nconst handleAuthError = (error: any, context: string) => {\n  console.error(`[Auth Error] ${context}:`, error);\n  return false;\n}\n\nexport const authOptions: AuthOptions = {\n  adapter: prismaAdapter,\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      allowDangerousEmailAccountLinking: true,\n    }),\n  ],\n  session: {\n    strategy: \"jwt\",\n    maxAge: 24 * 60 * 60, // 24 hours\n    updateAge: 4 * 60 * 60, // 4 hours\n  },\n  callbacks: {\n    async jwt({ token, user, account, profile, trigger }) {\n      try {\n        // Trường hợp đăng nhập - Chỉ cập nhật token khi có user từ đăng nhập\n        if (user) {\n          // Đảm bảo role có thể null\n          token.role = user.role as RoleType | null;\n          token.id = user.id;\n          return token;\n        }\n        \n        // Trường hợp trigger update - Cập nhật token khi có sự thay đổi rõ ràng\n        if (trigger === 'update' && token?.sub) {\n          try {\n            const dbUser = await db.user.findUnique({\n              where: { id: token.sub },\n              select: { \n                id: true, \n                name: true, \n                email: true, \n                role: true, \n                image: true \n              }\n            });\n            \n            if (dbUser) {\n              // Cập nhật token với giá trị mới\n              token.role = dbUser.role as RoleType | null;\n              token.name = dbUser.name;\n              token.email = dbUser.email;\n              token.picture = dbUser.image;\n              \n              // Thêm timestamp để đảm bảo không cache token cũ\n              token.updatedAt = Date.now();\n            }\n          } catch (error) {\n            console.error(\"Error updating token:\", error);\n          }\n          return token;\n        }\n        \n        // Trường hợp token từ session: kiểm tra nếu cần cập nhật\n        if (token?.sub && (!token.role || !token.updatedAt || Date.now() - (token.updatedAt as number || 0) > 60 * 1000)) {\n          try {\n            const dbUser = await db.user.findUnique({\n              where: { id: token.sub },\n              select: { role: true }\n            });\n            \n            if (dbUser) {\n              token.role = dbUser.role as RoleType | null;\n              token.updatedAt = Date.now();\n            }\n          } catch (error) {\n            console.error(\"Error refreshing token:\", error);\n          }\n        }\n        \n        return token;\n      } catch (error) {\n        console.error(\"JWT callback error:\", error);\n        return token;\n      }\n    },\n    async session({ session, token }) {\n      try {\n        if (session.user && token) {\n          // Đảm bảo role có thể null\n          session.user.role = token.role as RoleType | null;\n          session.user.id = token.id as string;\n        }\n        return session;\n      } catch (error) {\n        console.error(\"Session callback error:\", error);\n        return session;\n      }\n    },\n    async signIn({ user, account, profile }) {\n      // Nếu user có email\n      if (user?.email) {\n        try {\n          // Kiểm tra user đã tồn tại chưa\n          const existingUser = await db.user.findUnique({\n            where: { email: user.email },\n          })\n          \n          if (!existingUser) {\n            // Tạo user mới không có role (null) để người dùng chọn sau\n            await db.user.create({\n              data: {\n                id: user.id,\n                email: user.email,\n                name: user.name,\n                image: user.image,\n                role: null, // Không thiết lập role mặc định\n              },\n            })\n            \n            // Đánh dấu để redirect tới trang chọn role\n            return true\n          }\n          \n          return true\n        } catch (error) {\n          return handleAuthError(error, \"signIn callback\");\n        }\n      }\n      \n      return true\n    }\n  },\n  pages: {\n    signIn: '/auth/signin',\n    signOut: '/',\n    error: '/auth/error',\n    newUser: '/auth/select-role' // Điều hướng người dùng mới đến trang chọn role\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  debug: process.env.NODE_ENV === \"development\",\n  logger: {\n    error(code, ...message) {\n      console.error(`[NextAuth Error] ${code}:`, ...message);\n    },\n    warn(code, ...message) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.warn(`[NextAuth Warning] ${code}:`, ...message);\n      }\n    },\n    debug(code, ...message) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.debug(`[NextAuth Debug] ${code}:`, ...message);\n      }\n    },\n  },\n}\n\nconst handler = NextAuth(authOptions)\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/api-response.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { ZodError } from \"zod\";\n\n/**\n * Standard response structure for paginated data\n */\nexport interface PaginatedResponseData<T> {\n  success: boolean;\n  data: {\n    items: T[];\n    pagination: {\n      total: number;\n      page: number;\n      limit: number;\n      totalPages: number;\n    };\n  };\n  meta?: Record<string, any>;\n}\n\n/**\n * Standard response structure for single item data\n */\nexport interface SingleResponseData<T> {\n  success: boolean;\n  data: T;\n  meta?: Record<string, any>;\n}\n\n/**\n * Standard error response structure\n */\nexport interface ErrorResponseData {\n  success: boolean;\n  error: {\n    code: string;\n    message: string;\n    details?: any;\n  };\n}\n\n/**\n * Create a successful response with pagination\n */\nexport function createPaginatedResponse<T>(\n  data: T[],\n  total: number,\n  page: number,\n  limit: number,\n  meta?: Record<string, any>,\n  headers?: HeadersInit\n): NextResponse {\n  const response: PaginatedResponseData<T> = {\n    success: true,\n    data: {\n      items: data,\n      pagination: {\n        total,\n        page,\n        limit,\n        totalPages: Math.ceil(total / limit)\n      }\n    }\n  };\n\n  if (meta) {\n    response.meta = meta;\n  }\n\n  return NextResponse.json(response, { headers });\n}\n\n/**\n * Create a successful response for a single item\n */\nexport function createSuccessResponse<T>(\n  data: T,\n  status: number = 200,\n  meta?: Record<string, any>,\n  headers?: HeadersInit\n): NextResponse {\n  const response: SingleResponseData<T> = { \n    success: true,\n    data \n  };\n  \n  if (meta) {\n    response.meta = meta;\n  }\n  \n  return NextResponse.json(response, { status, headers });\n}\n\n/**\n * Create an error response\n */\nexport function createErrorResponse(\n  code: string,\n  message: string,\n  details?: any,\n  status: number = 400\n): NextResponse {\n  const response: ErrorResponseData = {\n    success: false,\n    error: {\n      code,\n      message\n    }\n  };\n  \n  if (details) {\n    response.error.details = details;\n  }\n  \n  return NextResponse.json(response, { status });\n}\n\n/**\n * Format Zod validation errors\n */\nexport function formatZodError(error: ZodError) {\n  return {\n    code: \"VALIDATION_ERROR\",\n    message: \"Invalid input data\",\n    details: error.errors.map(err => ({\n      path: err.path.join('.'),\n      message: err.message\n    }))\n  };\n}\n\n/**\n * Create an authenticated error response (401)\n */\nexport function createAuthenticationError(): NextResponse {\n  return createErrorResponse(\n    \"UNAUTHENTICATED\",\n    \"You must be logged in to access this resource\",\n    undefined,\n    401\n  );\n}\n\n/**\n * Create a permission error response (403)\n */\nexport function createPermissionError(message: string = \"You don't have permission to access this resource\"): NextResponse {\n  return createErrorResponse(\n    \"UNAUTHORIZED\", \n    message,\n    undefined,\n    403\n  );\n}\n\n/**\n * Create a not found error response (404)\n */\nexport function createNotFoundError(resource: string = \"Resource\"): NextResponse {\n  return createErrorResponse(\n    \"NOT_FOUND\",\n    `${resource} not found`,\n    undefined,\n    404\n  );\n}\n\n/**\n * Create a server error response (500)\n */\nexport function createServerError(error?: Error): NextResponse {\n  console.error(\"Server error:\", error);\n  \n  return createErrorResponse(\n    \"SERVER_ERROR\",\n    \"An unexpected error occurred\",\n    process.env.NODE_ENV === 'development' ? error?.message : undefined,\n    500\n  );\n}\n\n/**\n * Create a validation error response (400)\n */\nexport function createValidationError(details?: any): NextResponse {\n  return createErrorResponse(\n    \"VALIDATION_ERROR\",\n    \"Invalid input data\",\n    details,\n    400\n  );\n} "],"names":[],"mappings":";;;;;;;;;;;AAAA;;AA4CO,SAAS,wBACd,IAAS,EACT,KAAa,EACb,IAAY,EACZ,KAAa,EACb,IAA0B,EAC1B,OAAqB;IAErB,MAAM,WAAqC;QACzC,SAAS;QACT,MAAM;YACJ,OAAO;YACP,YAAY;gBACV;gBACA;gBACA;gBACA,YAAY,KAAK,IAAI,CAAC,QAAQ;YAChC;QACF;IACF;IAEA,IAAI,MAAM;QACR,SAAS,IAAI,GAAG;IAClB;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE;IAAQ;AAC/C;AAKO,SAAS,sBACd,IAAO,EACP,SAAiB,GAAG,EACpB,IAA0B,EAC1B,OAAqB;IAErB,MAAM,WAAkC;QACtC,SAAS;QACT;IACF;IAEA,IAAI,MAAM;QACR,SAAS,IAAI,GAAG;IAClB;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE;QAAQ;IAAQ;AACvD;AAKO,SAAS,oBACd,IAAY,EACZ,OAAe,EACf,OAAa,EACb,SAAiB,GAAG;IAEpB,MAAM,WAA8B;QAClC,SAAS;QACT,OAAO;YACL;YACA;QACF;IACF;IAEA,IAAI,SAAS;QACX,SAAS,KAAK,CAAC,OAAO,GAAG;IAC3B;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE;IAAO;AAC9C;AAKO,SAAS,eAAe,KAAe;IAC5C,OAAO;QACL,MAAM;QACN,SAAS;QACT,SAAS,MAAM,MAAM,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;gBAChC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;gBACpB,SAAS,IAAI,OAAO;YACtB,CAAC;IACH;AACF;AAKO,SAAS;IACd,OAAO,oBACL,mBACA,iDACA,WACA;AAEJ;AAKO,SAAS,sBAAsB,UAAkB,mDAAmD;IACzG,OAAO,oBACL,gBACA,SACA,WACA;AAEJ;AAKO,SAAS,oBAAoB,WAAmB,UAAU;IAC/D,OAAO,oBACL,aACA,GAAG,SAAS,UAAU,CAAC,EACvB,WACA;AAEJ;AAKO,SAAS,kBAAkB,KAAa;IAC7C,QAAQ,KAAK,CAAC,iBAAiB;IAE/B,OAAO,oBACL,gBACA,gCACA,uCAAyC,OAAO,gDAChD;AAEJ;AAKO,SAAS,sBAAsB,OAAa;IACjD,OAAO,oBACL,oBACA,sBACA,SACA;AAEJ","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/api/classes/%5Bid%5D/materials/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\nimport { db } from \"@/lib/db\";\r\nimport { Role, MaterialType, Prisma } from \"@prisma/client\";\r\nimport { \r\n  createSuccessResponse, \r\n  createErrorResponse, \r\n  createAuthenticationError,\r\n  createPermissionError,\r\n  createNotFoundError,\r\n  createServerError\r\n} from \"@/lib/api-response\";\r\nimport { z } from \"zod\";\r\n\r\n// GET handler for retrieving materials for a class\r\nexport async function GET(\r\n  request: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    \r\n    if (!session?.user) {\r\n      return createAuthenticationError();\r\n    }\r\n    \r\n    const classId = params.id;\r\n    const { searchParams } = new URL(request.url);\r\n    \r\n    // Parse query parameters\r\n    const page = parseInt(searchParams.get(\"page\") || \"1\", 10);\r\n    const limit = parseInt(searchParams.get(\"limit\") || \"20\", 10);\r\n    const typeParam = searchParams.get(\"type\");\r\n    const search = searchParams.get(\"search\") || \"\";\r\n    \r\n    // Type validation for MaterialType\r\n    let materialType: MaterialType | undefined;\r\n    if (typeParam && Object.values(MaterialType).includes(typeParam as MaterialType)) {\r\n      materialType = typeParam as MaterialType;\r\n    }\r\n    \r\n    // Skip calculation for pagination\r\n    const skip = (page - 1) * limit;\r\n    \r\n    // Check if class exists and user has access\r\n    // For teachers: must be the class teacher\r\n    // For students: must be enrolled in the class or class must be public\r\n    const classAccess = await db.class.findFirst({\r\n      where: {\r\n        id: classId,\r\n        OR: [\r\n          // Teacher access\r\n          { teacherId: session.user.id },\r\n          // Student access (must be enrolled)\r\n          {\r\n            students: {\r\n              some: {\r\n                studentId: session.user.id\r\n              }\r\n            }\r\n          },\r\n          // Public class\r\n          { type: \"PUBLIC\" }\r\n        ]\r\n      },\r\n      select: { \r\n        id: true,\r\n        name: true\r\n      }\r\n    });\r\n    \r\n    if (!classAccess) {\r\n      return createPermissionError(\"You don't have access to this class\");\r\n    }\r\n    \r\n    // Build where conditions\r\n    const where: Prisma.MaterialWhereInput = {\r\n      classId,\r\n      ...(materialType && { type: materialType }),\r\n    };\r\n    \r\n    // Add search condition if provided\r\n    if (search) {\r\n      where.OR = [\r\n        { title: { contains: search, mode: 'insensitive' } },\r\n        { description: { contains: search, mode: 'insensitive' } },\r\n        { fileName: { contains: search, mode: 'insensitive' } }\r\n      ];\r\n    }\r\n    \r\n    // Count total for pagination\r\n    const total = await db.material.count({ where });\r\n    \r\n    // Fetch materials with pagination\r\n    const materials = await db.material.findMany({\r\n      where,\r\n      select: {\r\n        id: true,\r\n        title: true,\r\n        description: true,\r\n        type: true,\r\n        url: true,\r\n        fileName: true,\r\n        fileSize: true,\r\n        mimeType: true,\r\n        createdAt: true,\r\n        updatedAt: true,\r\n        uploader: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            image: true\r\n          }\r\n        }\r\n      },\r\n      orderBy: {\r\n        createdAt: 'desc'\r\n      },\r\n      skip,\r\n      take: limit\r\n    });\r\n    \r\n    // Format file size to human-readable format if available\r\n    const formattedMaterials = materials.map(material => ({\r\n      ...material,\r\n      fileSizeFormatted: material.fileSize ? formatFileSize(material.fileSize) : null,\r\n      // Add download URL if needed\r\n      downloadUrl: material.fileName && !material.url ? \r\n        `/api/classes/${classId}/materials/${material.id}/download` : null\r\n    }));\r\n    \r\n    // Return response with pagination\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: formattedMaterials,\r\n      meta: {\r\n        page,\r\n        limit,\r\n        total,\r\n        totalPages: Math.ceil(total / limit),\r\n        className: classAccess.name\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error fetching class materials:\", error);\r\n    return createServerError(error instanceof Error ? error : new Error(\"Unknown error\"));\r\n  }\r\n}\r\n\r\n// Helper function to format file size\r\nfunction formatFileSize(bytes: number): string {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n  \r\n  return parseFloat((bytes / Math.pow(1024, i)).toFixed(2)) + ' ' + sizes[i];\r\n}\r\n\r\n// Schema validation for creating a material\r\nconst createMaterialSchema = z.object({\r\n  title: z.string().min(1, \"Title is required\").max(100, \"Title too long\"),\r\n  description: z.string().max(1000, \"Description too long\").optional(),\r\n  type: z.enum([\r\n    MaterialType.FILE, \r\n    MaterialType.LINK, \r\n    MaterialType.VIDEO_EMBED, \r\n    MaterialType.DOCUMENT\r\n  ]),\r\n  url: z.string().url(\"Invalid URL\").optional(),\r\n  fileName: z.string().optional(),\r\n  fileSize: z.number().optional(),\r\n  mimeType: z.string().optional(),\r\n});\r\n\r\n// POST handler for creating a new material\r\nexport async function POST(\r\n  request: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    \r\n    if (!session?.user) {\r\n      return createAuthenticationError();\r\n    }\r\n    \r\n    const classId = params.id;\r\n    \r\n    // Check if class exists and user has access\r\n    const classCheck = await db.class.findUnique({\r\n      where: {\r\n        id: classId,\r\n      },\r\n      select: {\r\n        id: true,\r\n        teacherId: true,\r\n        type: true,\r\n        students: {\r\n          where: {\r\n            studentId: session.user.id\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    if (!classCheck) {\r\n      return createNotFoundError(\"Class not found\");\r\n    }\r\n    \r\n    // Check permissions - only teachers can add materials\r\n    const isTeacher = session.user.role === Role.TEACHER;\r\n    \r\n    if (!isTeacher || (isTeacher && classCheck.teacherId !== session.user.id)) {\r\n      return createPermissionError(\"You don't have permission to add materials to this class\");\r\n    }\r\n    \r\n    const body = await request.json();\r\n    \r\n    // Validate input\r\n    const validationResult = createMaterialSchema.safeParse(body);\r\n    \r\n    if (!validationResult.success) {\r\n      return createErrorResponse(\r\n        \"VALIDATION_ERROR\",\r\n        \"Invalid material data\",\r\n        validationResult.error.errors\r\n      );\r\n    }\r\n    \r\n    const materialData = validationResult.data;\r\n    \r\n    // Create new material\r\n    const newMaterial = await db.material.create({\r\n      data: {\r\n        title: materialData.title,\r\n        description: materialData.description,\r\n        type: materialData.type,\r\n        url: materialData.url,\r\n        fileName: materialData.fileName,\r\n        fileSize: materialData.fileSize,\r\n        mimeType: materialData.mimeType,\r\n        class: {\r\n          connect: {\r\n            id: classId\r\n          }\r\n        },\r\n        uploader: {\r\n          connect: {\r\n            id: session.user.id\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    return createSuccessResponse({\r\n      id: newMaterial.id,\r\n      title: newMaterial.title,\r\n      type: newMaterial.type,\r\n      createdAt: newMaterial.createdAt\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error adding material:\", error);\r\n    return createServerError(error instanceof Error ? error : new Error(\"Unknown error\"));\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}
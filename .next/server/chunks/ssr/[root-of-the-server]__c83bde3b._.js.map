{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/providers/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/providers/theme-provider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/providers/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/providers/theme-provider.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/accessible-toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccessibleToaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccessibleToaster() from the server but AccessibleToaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accessible-toaster.tsx <module evaluation>\",\n    \"AccessibleToaster\",\n);\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accessible-toaster.tsx <module evaluation>\",\n    \"toast\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accessible-toaster.tsx <module evaluation>\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,sEACA;AAEG,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,sEACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,sEACA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/accessible-toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccessibleToaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccessibleToaster() from the server but AccessibleToaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accessible-toaster.tsx\",\n    \"AccessibleToaster\",\n);\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accessible-toaster.tsx\",\n    \"toast\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accessible-toaster.tsx\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kDACA;AAEG,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,kDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kDACA","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/auth/session-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SessionProvider() from the server but SessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/auth/session-provider.tsx <module evaluation>\",\n    \"SessionProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sEACA","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/auth/session-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SessionProvider() from the server but SessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/auth/session-provider.tsx\",\n    \"SessionProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kDACA","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n/**\r\n * Safely access theme state to avoid hydration errors\r\n * This is useful for conditionally rendering theme-dependent UI\r\n * \r\n * @param theme Current theme from useTheme hook\r\n * @param mounted Boolean indicating if component is mounted\r\n * @returns Safe theme value or null if not mounted\r\n */\r\nexport function getSafeTheme(\r\n  theme: string | undefined, \r\n  mounted: boolean\r\n): \"light\" | \"dark\" | \"system\" | null {\r\n  if (!mounted) return null\r\n  return (theme as \"light\" | \"dark\" | \"system\") || null\r\n}\r\n\r\n/**\r\n * Generate a random alphanumeric code of specified length\r\n * @param length Length of the code to generate\r\n * @returns Random alphanumeric string\r\n */\r\nexport function generateRandomCode(length: number): string {\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  let code = '';\r\n  \r\n  for (let i = 0; i < length; i++) {\r\n    code += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  \r\n  return code;\r\n}\r\n\r\n/**\r\n * Format duration in milliseconds to a human-readable string\r\n * @param ms Duration in milliseconds\r\n * @returns Formatted duration string (e.g., \"1h 30m\" or \"45m\")\r\n */\r\nexport function formatDuration(ms: number): string {\r\n  if (!ms || ms <= 0) return \"0 minutes\";\r\n  \r\n  const seconds = Math.floor((ms / 1000) % 60);\r\n  const minutes = Math.floor((ms / (1000 * 60)) % 60);\r\n  const hours = Math.floor((ms / (1000 * 60 * 60)));\r\n  \r\n  const parts = [];\r\n  \r\n  if (hours > 0) {\r\n    parts.push(`${hours} ${hours === 1 ? 'hour' : 'hours'}`);\r\n  }\r\n  \r\n  if (minutes > 0) {\r\n    parts.push(`${minutes} ${minutes === 1 ? 'minute' : 'minutes'}`);\r\n  }\r\n  \r\n  if (seconds > 0 && hours === 0) {\r\n    parts.push(`${seconds} ${seconds === 1 ? 'second' : 'seconds'}`);\r\n  }\r\n  \r\n  return parts.join(' ');\r\n}\r\n\r\n/**\r\n * Normalize metadata to ensure correct format\r\n * @param metadata Metadata object or string to normalize\r\n * @returns Normalized object or null if invalid\r\n */\r\nexport function normalizeMetadata<T extends Record<string, any> = Record<string, any>>(metadata: unknown): T | null {\r\n  // Return null for falsy values (undefined, null, empty string, etc.)\r\n  if (!metadata) return null;\r\n  \r\n  try {\r\n    // If metadata is already an object, return it directly with type assertion\r\n    if (typeof metadata === 'object' && metadata !== null && !Array.isArray(metadata)) {\r\n      // Remove null/undefined values for consistency\r\n      const cleanedMetadata = Object.fromEntries(\r\n        Object.entries(metadata as Record<string, any>).filter(([_, v]) => v !== null && v !== undefined)\r\n      );\r\n      \r\n      return cleanedMetadata as T;\r\n    }\r\n    \r\n    // If metadata is a string, try to parse it as JSON\r\n    if (typeof metadata === 'string') {\r\n      try {\r\n        const parsed = JSON.parse(metadata);\r\n        \r\n        // Ensure the parsed result is actually an object\r\n        if (typeof parsed === 'object' && parsed !== null && !Array.isArray(parsed)) {\r\n          // Clean up null/undefined values\r\n          const cleanedMetadata = Object.fromEntries(\r\n            Object.entries(parsed).filter(([_, v]) => v !== null && v !== undefined)\r\n          );\r\n          \r\n          return cleanedMetadata as T;\r\n        }\r\n        \r\n        // If parsed but not an object, return null\r\n        return null;\r\n      } catch (parseError) {\r\n        console.warn(\"Failed to parse metadata string:\", parseError);\r\n        return null;\r\n    }\r\n    }\r\n    \r\n    // For all other types (number, boolean, etc.), return null\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Failed to normalize metadata:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Prepare metadata for database storage\r\n * @param metadata Metadata object to prepare\r\n * @returns Stringified metadata or null\r\n */\r\nexport function prepareMetadataForDB(metadata: Record<string, any> | null): string | null {\r\n  if (!metadata) return null;\r\n  \r\n  try {\r\n    // Remove null/undefined properties\r\n    const cleanMetadata = Object.fromEntries(\r\n      Object.entries(metadata).filter(([_, v]) => v !== null && v !== undefined)\r\n    );\r\n    \r\n    // Check if any properties remain\r\n    if (Object.keys(cleanMetadata).length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    return JSON.stringify(cleanMetadata);\r\n  } catch (error) {\r\n    console.error(\"Failed to prepare metadata for DB:\", error);\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/providers/index.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/index.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gEACA","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/providers/index.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/index.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4CACA","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_a7fa3478.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_a7fa3478-module__qZiZZW__className\",\n  \"variable\": \"inter_a7fa3478-module__qZiZZW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_a7fa3478.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Inter%22,%22arguments%22:[{%22weight%22:[%22300%22,%22400%22,%22500%22,%22600%22,%22700%22],%22subsets%22:[%22latin%22],%22variable%22:%22--font-sans%22,%22display%22:%22swap%22}],%22variableName%22:%22interFont%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_mono_cfee8c0f.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"roboto_mono_cfee8c0f-module__Oo9WpW__className\",\n  \"variable\": \"roboto_mono_cfee8c0f-module__Oo9WpW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_mono_cfee8c0f.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Roboto_Mono%22,%22arguments%22:[{%22weight%22:[%22400%22,%22500%22,%22700%22],%22subsets%22:[%22latin%22],%22variable%22:%22--font-mono%22,%22display%22:%22swap%22}],%22variableName%22:%22robotoMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto Mono', 'Roboto Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,2JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,2JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,2JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/fonts.ts"],"sourcesContent":["import { Inter, Roboto_Mono } from \"next/font/google\";\r\n\r\n/**\r\n * Inter - Main font for content\r\n * Modern, clear, readable sans-serif font\r\n */\r\nexport const interFont = Inter({\r\n  // Only load necessary font weights for performance\r\n  weight: [\"300\", \"400\", \"500\", \"600\", \"700\"],\r\n  // Only load necessary subsets\r\n  subsets: [\"latin\"],\r\n  // Convert to CSS variable for use throughout the app\r\n  variable: \"--font-sans\",\r\n  // Show fallback font while main font is loading\r\n  display: \"swap\",\r\n});\r\n\r\n/**\r\n * Roboto Mono - Font for code blocks\r\n * Monospace font with good readability\r\n */\r\nexport const robotoMono = Roboto_Mono({\r\n  // Only load necessary font weights\r\n  weight: [\"400\", \"500\", \"700\"],\r\n  // Only load necessary subsets\r\n  subsets: [\"latin\"],\r\n  // Convert to CSS variable for use\r\n  variable: \"--font-mono\",\r\n  // Show fallback font while main font is loading\r\n  display: \"swap\",\r\n});\r\n\r\n// For backward compatibility\r\nexport const geistSans = interFont;\r\nexport const geistMono = robotoMono;"],"names":[],"mappings":";;;;;;;;AAiCO,MAAM,YAAY,yIAAA,CAAA,UAAS;AAC3B,MAAM,YAAY,+IAAA,CAAA,UAAU","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/layout.tsx"],"sourcesContent":["import type { Metadata, Viewport } from \"next\";\r\nimport { ThemeProvider } from \"@/providers/theme-provider\";\r\nimport { AccessibleToaster } from \"@/components/ui/accessible-toaster\";\r\nimport { SessionProvider } from \"@/components/auth/session-provider\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { NuqsAdapter } from \"nuqs/adapters/next/app\";\r\nimport { Providers } from '@/components/providers';\r\nimport \"./globals.css\";\r\n\r\n// Import fonts from app/fonts.ts\r\nimport { interFont, robotoMono } from \"./fonts\";\r\n\r\n// Metadata for the site\r\nexport const metadata: Metadata = {\r\n  title: {\r\n    template: '%s | OnTest',\r\n    default: 'OnTest - Online Assessment Platform',\r\n  },\r\n  description: \"Educational assessment platform for tests and quizzes\",\r\n  keywords: [\r\n    \"education\", \r\n    \"assessment\", \r\n    \"quiz\", \r\n    \"test\", \r\n    \"exam\", \r\n    \"learning\", \r\n    \"online education\"\r\n  ],\r\n  authors: [\r\n    {\r\n      name: \"OnTest Team\",\r\n    },\r\n  ],\r\n};\r\n\r\n// Viewport configuration for responsive design\r\nexport const viewport: Viewport = {\r\n  width: \"device-width\",\r\n  initialScale: 1,\r\n  maximumScale: 5,\r\n  minimumScale: 1,\r\n  viewportFit: \"cover\",\r\n  // Highlight mobile taps\r\n  themeColor: [\r\n    { media: \"(prefers-color-scheme: light)\", color: \"white\" },\r\n    { media: \"(prefers-color-scheme: dark)\", color: \"#020817\" },\r\n  ],\r\n};\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  return (\r\n    <html \r\n      lang=\"en\" \r\n      suppressHydrationWarning \r\n      className={cn(\r\n        interFont.variable, \r\n        robotoMono.variable\r\n      )}\r\n    >\r\n      <body \r\n        className={cn(\r\n        \"min-h-screen bg-background font-sans antialiased\",\r\n          // Better mobile tap highlights\r\n        \"selection:bg-primary selection:text-primary-foreground\",\r\n        // Better text rendering\r\n        \"text-foreground subpixel-antialiased\"\r\n        )}\r\n      >\r\n        <SessionProvider>\r\n        <Providers>\r\n              <ThemeProvider>\r\n                {/* Skip to content link for accessibility */}\r\n                <a \r\n                  href=\"#main-content\" \r\n                  className=\"sr-only focus:not-sr-only focus:absolute focus:z-50 focus:p-4 focus:bg-background focus:text-foreground\"\r\n                >\r\n                  Skip to content\r\n                </a>\r\n                \r\n                {/* Main content wrapper with min height to push footer down */}\r\n                <div id=\"main-content\" className=\"relative flex min-h-screen flex-col\">\r\n                  <NuqsAdapter>\r\n                    {children}\r\n                  </NuqsAdapter>\r\n                </div>\r\n\r\n                {/* Accessible toast notifications */}\r\n                <AccessibleToaster />\r\n              </ThemeProvider>\r\n          </Providers>\r\n            </SessionProvider>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,iCAAiC;AACjC;AAAA;AAAA;;;;;;;;;;AAGO,MAAM,WAAqB;IAChC,OAAO;QACL,UAAU;QACV,SAAS;IACX;IACA,aAAa;IACb,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,SAAS;QACP;YACE,MAAM;QACR;KACD;AACH;AAGO,MAAM,WAAqB;IAChC,OAAO;IACP,cAAc;IACd,cAAc;IACd,cAAc;IACd,aAAa;IACb,wBAAwB;IACxB,YAAY;QACV;YAAE,OAAO;YAAiC,OAAO;QAAQ;QACzD;YAAE,OAAO;YAAgC,OAAO;QAAU;KAC3D;AACH;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QACC,MAAK;QACL,wBAAwB;QACxB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iLAAA,CAAA,YAAS,CAAC,QAAQ,EAClB,wLAAA,CAAA,aAAU,CAAC,QAAQ;kBAGrB,cAAA,8OAAC;YACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACZ,oDACE,+BAA+B;YACjC,0DACA,wBAAwB;YACxB;sBAGA,cAAA,8OAAC,0IAAA,CAAA,kBAAe;0BAChB,cAAA,8OAAC,iIAAA,CAAA,YAAS;8BACJ,cAAA,8OAAC,+HAAA,CAAA,gBAAa;;0CAEZ,8OAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;0CAKD,8OAAC;gCAAI,IAAG;gCAAe,WAAU;0CAC/B,cAAA,8OAAC,uJAAA,CAAA,cAAW;8CACT;;;;;;;;;;;0CAKL,8OAAC,0IAAA,CAAA,oBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlC","debugId":null}}]
}
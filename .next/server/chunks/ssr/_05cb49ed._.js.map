{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/hooks/use-local-storage.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * Hook sử dụng localStorage để lưu trữ dữ liệu và đồng bộ giữa các tab\r\n * @param key Khóa lưu trữ trong localStorage\r\n * @param initialValue Giá trị mặc định khi chưa có dữ liệu\r\n */\r\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, (value: T | ((val: T) => T)) => void] {\r\n  // Kiểm tra xem đang ở phía client hay server\r\n  const isClient = typeof window !== 'undefined';\r\n\r\n  // State để lưu trữ giá trị của chúng ta\r\n  // Truyền vào hàm khởi tạo để useState chỉ chạy một lần\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      // Lấy từ local storage theo key\r\n      if (isClient) {\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse dữ liệu lưu trữ hoặc trả về initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      }\r\n      return initialValue;\r\n    } catch (error) {\r\n      // Nếu có lỗi, trả về initialValue\r\n      console.error(`Error reading localStorage key \"${key}\":`, error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Hàm để cập nhật cả state và localStorage\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // Cho phép value là một function như trong useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      \r\n      // Lưu state\r\n      setStoredValue(valueToStore);\r\n      \r\n      // Lưu vào localStorage\r\n      if (isClient) {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error setting localStorage key \"${key}\":`, error);\r\n    }\r\n  };\r\n\r\n  // Listen for changes to this localStorage key in other tabs\r\n  useEffect(() => {\r\n    if (!isClient) return;\r\n    \r\n    const handleStorageChange = (e: StorageEvent) => {\r\n      if (e.key === key && e.newValue) {\r\n        try {\r\n          setStoredValue(JSON.parse(e.newValue));\r\n        } catch (error) {\r\n          console.error(`Error parsing localStorage change for key \"${key}\":`, error);\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Listen for storage events\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [key, isClient]);\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage; "],"names":[],"mappings":";;;;AAAA;;AAOO,SAAS,gBAAmB,GAAW,EAAE,YAAe;IAC7D,6CAA6C;IAC7C,MAAM,WAAW,gBAAkB;IAEnC,wCAAwC;IACxC,uDAAuD;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAK;QAChD,IAAI;YACF,gCAAgC;YAChC,uCAAc;;YAId;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,kCAAkC;YAClC,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;YAC1D,OAAO;QACT;IACF;IAEA,2CAA2C;IAC3C,MAAM,WAAW,CAAC;QAChB,IAAI;YACF,oDAAoD;YACpD,MAAM,eACJ,iBAAiB,WAAW,MAAM,eAAe;YAEnD,YAAY;YACZ,eAAe;YAEf,uBAAuB;YACvB,uCAAc;;YAEd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;QAC5D;IACF;IAEA,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAe;;QAEf,MAAM;IAaR,GAAG;QAAC;QAAK;KAAS;IAElB,OAAO;QAAC;QAAa;KAAS;AAChC;uCAEe","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,8OAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,8OAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface DialogProps extends DialogPrimitive.DialogProps {\n  /**\n   * If true, interaction with outside elements will be disabled and\n   * only dialog content will be accessible via keyboard navigation.\n   * @default true\n   */\n  modal?: boolean;\n}\n\nconst Dialog = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Root>,\n  DialogProps\n>(({ modal = true, ...props }, ref) => (\n  <DialogPrimitive.Root modal={modal} {...props} />\n))\nDialog.displayName = DialogPrimitive.Root.displayName\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 backdrop-blur-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {\n    size?: \"default\" | \"sm\" | \"lg\" | \"xl\" | \"full\";\n    hideClose?: boolean;\n    closeLabel?: string;\n  }\n>(({ className, children, size = \"default\", hideClose = false, closeLabel = \"Close\", ...props }, ref) => {\n  // Ref cho nút close để focus vào đó khi dialog mở\n  const closeButtonRef = React.useRef<HTMLButtonElement>(null);\n  \n  // Xử lý focus khi mở dialog\n  const handleOpenAutoFocus = React.useCallback((event: Event) => {\n    // Ngăn chặn hành vi focus mặc định\n    event.preventDefault();\n    \n    // Focus vào nút đóng dialog (hoặc có thể là phần tử khác trong dialog)\n    if (!hideClose && closeButtonRef.current) {\n      setTimeout(() => {\n        closeButtonRef.current?.focus();\n      }, 0);\n    }\n  }, [hideClose]);\n\n  // Xử lý focus khi đóng dialog\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Ngăn chặn hành vi focus trả về mặc định\n    event.preventDefault();\n  }, []);\n\n  return (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full translate-x-[-50%] translate-y-[-50%] gap-5 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\",\n        size === \"sm\" && \"max-w-sm rounded-lg\",\n        size === \"default\" && \"max-w-md rounded-lg\", \n        size === \"lg\" && \"max-w-xl rounded-lg\",\n        size === \"xl\" && \"max-w-3xl rounded-lg\",\n        size === \"full\" && \"max-w-[calc(100%-2rem)] h-[calc(100%-2rem)] rounded-lg\",\n        className\n      )}\n      onOpenAutoFocus={handleOpenAutoFocus}\n      onCloseAutoFocus={handleCloseAutoFocus}\n      {...props}\n    >\n      {children}\n      {!hideClose && (\n        <DialogPrimitive.Close\n          ref={closeButtonRef}\n          className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n          aria-label={closeLabel}\n        >\n        <X className=\"h-4 w-4\" />\n          <span className=\"sr-only\">{closeLabel}</span>\n      </DialogPrimitive.Close>\n      )}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n  );\n})\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {\n    variant?: \"default\" | \"info\" | \"success\" | \"warning\" | \"destructive\"\n  }\n>(({ className, variant = \"default\", sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md px-3 py-1.5 text-xs font-medium shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        variant === \"default\" && \"bg-primary text-primary-foreground\",\n        variant === \"info\" && \"bg-info text-info-foreground\",\n        variant === \"success\" && \"bg-success text-success-foreground\",\n        variant === \"warning\" && \"bg-warning text-warning-foreground\",\n        variant === \"destructive\" && \"bg-destructive text-destructive-foreground\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipProvider\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKpC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC/D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wWACA,YAAY,aAAa,sCACzB,YAAY,UAAU,gCACtB,YAAY,aAAa,sCACzB,YAAY,aAAa,sCACzB,YAAY,iBAAiB,8CAC7B;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/question-utils.ts"],"sourcesContent":["import { QuestionType } from \"@prisma/client\";\r\nimport { \r\n  MultipleChoiceMetadata,\r\n  EssayMetadata,\r\n  ShortAnswerMetadata,\r\n  FillBlankMetadata,\r\n  CodeMetadata,\r\n  MatchingMetadata,\r\n} from \"@/app/api/schemas/question-metadata-schemas\";\r\n\r\n/**\r\n * Interface for Question data structure\r\n */\r\nexport interface Question {\r\n  id: string;\r\n  content: string;\r\n  type: QuestionType;\r\n  points: number;\r\n  order: number;\r\n  explanation?: string | null;\r\n  metadata?: any | null;\r\n  mediaType?: string | null;\r\n  mediaUrl?: string | null;\r\n  options?: Option[];\r\n}\r\n\r\n/**\r\n * Interface for Option data structure\r\n */\r\nexport interface Option {\r\n  id: string;\r\n  content: string;\r\n  isCorrect: boolean;\r\n  order: number;\r\n  group?: string | null;\r\n  matchId?: string | null;\r\n  position?: number | null;\r\n}\r\n\r\n/**\r\n * Interface for Answer data structure\r\n */\r\nexport interface Answer {\r\n  questionId: string;\r\n  selectedOptions: string[];  // IDs of selected options\r\n  textAnswer: string;         // Text answer for essay/short answer/code\r\n  jsonData: Record<string, any> | null; // Complex data for matching/fill-blank\r\n}\r\n\r\n/**\r\n * Normalize metadata from string or object format\r\n */\r\nexport function normalizeMetadata<T = any>(metadata: any): T | null {\r\n  if (!metadata) return null;\r\n  \r\n  // If metadata is already an object, return it\r\n  if (typeof metadata === 'object' && !Array.isArray(metadata) && metadata !== null) {\r\n    return metadata as T;\r\n  }\r\n  \r\n  // If metadata is a string, try to parse it\r\n  if (typeof metadata === 'string') {\r\n    try {\r\n      // Check if the string is valid JSON\r\n      if (metadata.trim().startsWith('{') || metadata.trim().startsWith('[')) {\r\n        return JSON.parse(metadata) as T;\r\n      } else {\r\n        console.warn(\"Metadata string is not valid JSON:\", metadata);\r\n        return null;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error parsing metadata string:\", e);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  // For unexpected types, log and return null\r\n  console.warn(\"Unexpected metadata type:\", typeof metadata);\r\n  return null;\r\n}\r\n\r\n/**\r\n * Get default metadata structure based on question type\r\n */\r\nexport function getDefaultMetadata(questionType: QuestionType): any {\r\n  switch (questionType) {\r\n    case QuestionType.MULTIPLE_CHOICE:\r\n      return { allowMultiple: false, shuffleOptions: false };\r\n    \r\n    case QuestionType.ESSAY:\r\n      return { minWords: null, maxWords: null, placeholder: \"\", richText: false };\r\n    \r\n    case QuestionType.SHORT_ANSWER:\r\n      return { caseSensitive: false, placeholder: \"\" };\r\n    \r\n    case QuestionType.FILL_BLANK:\r\n      return { text: \"\", caseSensitive: false };\r\n    \r\n    case QuestionType.CODE:\r\n      return { language: \"javascript\", initialCode: \"\", testCases: [] };\r\n    \r\n    case QuestionType.MATCHING:\r\n      return { shuffleOptions: false };\r\n    \r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\n/**\r\n * Normalize question data ensuring it has the correct metadata structure\r\n */\r\nexport function normalizeQuestion(question: Question): Question {\r\n  // Clone question to avoid mutating the original\r\n  const normalizedQuestion = { ...question };\r\n  \r\n  // Normalize metadata\r\n  const normalizedMetadata = normalizeMetadata(question.metadata) || \r\n    getDefaultMetadata(question.type);\r\n  \r\n  return {\r\n    ...normalizedQuestion,\r\n    metadata: normalizedMetadata\r\n  };\r\n}\r\n\r\n/**\r\n * Get type-specific metadata from a normalized question\r\n */\r\nexport function getTypedMetadata<T>(question: Question): T | null {\r\n  if (!question.metadata) return null;\r\n  \r\n  try {\r\n    const normalizedMetadata = normalizeMetadata<T>(question.metadata);\r\n    return normalizedMetadata;\r\n  } catch (e) {\r\n    console.error(\"Error getting typed metadata:\", e);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get multiple choice specific metadata\r\n */\r\nexport function getMultipleChoiceMetadata(question: Question): MultipleChoiceMetadata {\r\n  return getTypedMetadata<MultipleChoiceMetadata>(question) || \r\n    { allowMultiple: false, shuffleOptions: false, allowPartialCredit: true };\r\n}\r\n\r\n/**\r\n * Get essay specific metadata\r\n */\r\nexport function getEssayMetadata(question: Question): EssayMetadata {\r\n  return getTypedMetadata<EssayMetadata>(question) || \r\n    { minWords: undefined, maxWords: undefined, placeholder: undefined, richText: false };\r\n}\r\n\r\n/**\r\n * Get short answer specific metadata\r\n */\r\nexport function getShortAnswerMetadata(question: Question): ShortAnswerMetadata {\r\n  return getTypedMetadata<ShortAnswerMetadata>(question) || \r\n    { caseSensitive: false, placeholder: undefined };\r\n}\r\n\r\n/**\r\n * Get fill-blank specific metadata\r\n */\r\nexport function getFillBlankMetadata(question: Question): FillBlankMetadata {\r\n  return getTypedMetadata<FillBlankMetadata>(question) || \r\n    { text: \"\", caseSensitive: false };\r\n}\r\n\r\n/**\r\n * Get code specific metadata\r\n */\r\nexport function getCodeMetadata(question: Question): CodeMetadata {\r\n  return getTypedMetadata<CodeMetadata>(question) || \r\n    { language: \"javascript\", initialCode: undefined, testCases: undefined };\r\n}\r\n\r\n/**\r\n * Get matching specific metadata\r\n */\r\nexport function getMatchingMetadata(question: Question): MatchingMetadata {\r\n  return getTypedMetadata<MatchingMetadata>(question) || \r\n    { shuffleOptions: false };\r\n}\r\n\r\n/**\r\n * Get the display label for a question type\r\n */\r\nexport function getQuestionTypeLabel(type: QuestionType): string {\r\n  switch (type) {\r\n    case QuestionType.MULTIPLE_CHOICE: return \"Multiple Choice\";\r\n    case QuestionType.TRUE_FALSE: return \"True/False\";\r\n    case QuestionType.ESSAY: return \"Essay\";\r\n    case QuestionType.SHORT_ANSWER: return \"Short Answer\";\r\n    case QuestionType.MATCHING: return \"Matching\";\r\n    case QuestionType.FILL_BLANK: return \"Fill in the Blanks\";\r\n    case QuestionType.CODE: return \"Code\";\r\n    case QuestionType.FILE_UPLOAD: return \"File Upload\";\r\n    default: return type;\r\n  }\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/multiple-choice-question.tsx"],"sourcesContent":["'use client';\n\nimport { Option } from '@/lib/question-utils';\n\ninterface MultipleChoiceQuestionProps {\n  question: {\n    options?: Option[];\n  };\n  selectedOptions: string[];\n  onChange: (selection: string[]) => void;\n  allowMultiple?: boolean;\n  disabled?: boolean;\n}\n\nexport function MultipleChoiceQuestion({ \n  question, \n  selectedOptions = [],\n  onChange,\n  allowMultiple = false,\n  disabled = false\n}: MultipleChoiceQuestionProps) {\n  // For single selection\n  const handleRadioChange = (optionId: string) => {\n    onChange([optionId]);\n  };\n  \n  // For multiple selection\n  const handleCheckboxChange = (optionId: string) => {\n    if (allowMultiple) {\n      const newSelection = selectedOptions.includes(optionId)\n        ? selectedOptions.filter(id => id !== optionId)\n        : [...selectedOptions, optionId];\n        \n      onChange(newSelection);\n    } else {\n      // Ensure single selection even with checkbox\n      onChange([optionId]);\n    }\n  };\n  \n  // Sort options by order\n  const sortedOptions = [...(question.options || [])].sort((a, b) => a.order - b.order);\n  \n  if (allowMultiple) {\n    // Multiple selection version\n    return (\n      <div className=\"space-y-3\">\n        {sortedOptions.map(option => (\n          <div key={option.id} className=\"flex items-start space-x-2\">\n            <input \n              type=\"checkbox\" \n              id={option.id} \n              name=\"answer\"\n              value={option.id}\n              checked={selectedOptions.includes(option.id)}\n              onChange={() => handleCheckboxChange(option.id)}\n              className=\"mt-1\"\n              disabled={disabled}\n            />\n            <label \n              htmlFor={option.id} \n              className={`flex-1 cursor-pointer ${disabled ? 'cursor-not-allowed opacity-70' : ''}`}\n              dangerouslySetInnerHTML={{ __html: option.content }}\n            />\n          </div>\n        ))}\n        <p className=\"text-sm text-muted-foreground mt-2\">\n          Select all that apply.\n        </p>\n      </div>\n    );\n  }\n  \n  // Single selection version\n  return (\n    <div className=\"space-y-3\">\n      {sortedOptions.map(option => (\n        <div key={option.id} className=\"flex items-start space-x-2\">\n          <input \n            type=\"radio\" \n            id={option.id} \n            name=\"answer\"\n            value={option.id}\n            checked={selectedOptions.length > 0 && selectedOptions[0] === option.id}\n            onChange={() => handleRadioChange(option.id)}\n            className=\"mt-1\"\n            disabled={disabled}\n          />\n          <label \n            htmlFor={option.id} \n            className={`flex-1 cursor-pointer ${disabled ? 'cursor-not-allowed opacity-70' : ''}`}\n            dangerouslySetInnerHTML={{ __html: option.content }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;AAcO,SAAS,uBAAuB,EACrC,QAAQ,EACR,kBAAkB,EAAE,EACpB,QAAQ,EACR,gBAAgB,KAAK,EACrB,WAAW,KAAK,EACY;IAC5B,uBAAuB;IACvB,MAAM,oBAAoB,CAAC;QACzB,SAAS;YAAC;SAAS;IACrB;IAEA,yBAAyB;IACzB,MAAM,uBAAuB,CAAC;QAC5B,IAAI,eAAe;YACjB,MAAM,eAAe,gBAAgB,QAAQ,CAAC,YAC1C,gBAAgB,MAAM,CAAC,CAAA,KAAM,OAAO,YACpC;mBAAI;gBAAiB;aAAS;YAElC,SAAS;QACX,OAAO;YACL,6CAA6C;YAC7C,SAAS;gBAAC;aAAS;QACrB;IACF;IAEA,wBAAwB;IACxB,MAAM,gBAAgB;WAAK,SAAS,OAAO,IAAI,EAAE;KAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IAEpF,IAAI,eAAe;QACjB,6BAA6B;QAC7B,qBACE,8OAAC;YAAI,WAAU;;gBACZ,cAAc,GAAG,CAAC,CAAA,uBACjB,8OAAC;wBAAoB,WAAU;;0CAC7B,8OAAC;gCACC,MAAK;gCACL,IAAI,OAAO,EAAE;gCACb,MAAK;gCACL,OAAO,OAAO,EAAE;gCAChB,SAAS,gBAAgB,QAAQ,CAAC,OAAO,EAAE;gCAC3C,UAAU,IAAM,qBAAqB,OAAO,EAAE;gCAC9C,WAAU;gCACV,UAAU;;;;;;0CAEZ,8OAAC;gCACC,SAAS,OAAO,EAAE;gCAClB,WAAW,CAAC,sBAAsB,EAAE,WAAW,kCAAkC,IAAI;gCACrF,yBAAyB;oCAAE,QAAQ,OAAO,OAAO;gCAAC;;;;;;;uBAd5C,OAAO,EAAE;;;;;8BAkBrB,8OAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;IAKxD;IAEA,2BAA2B;IAC3B,qBACE,8OAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAA,uBACjB,8OAAC;gBAAoB,WAAU;;kCAC7B,8OAAC;wBACC,MAAK;wBACL,IAAI,OAAO,EAAE;wBACb,MAAK;wBACL,OAAO,OAAO,EAAE;wBAChB,SAAS,gBAAgB,MAAM,GAAG,KAAK,eAAe,CAAC,EAAE,KAAK,OAAO,EAAE;wBACvE,UAAU,IAAM,kBAAkB,OAAO,EAAE;wBAC3C,WAAU;wBACV,UAAU;;;;;;kCAEZ,8OAAC;wBACC,SAAS,OAAO,EAAE;wBAClB,WAAW,CAAC,sBAAsB,EAAE,WAAW,kCAAkC,IAAI;wBACrF,yBAAyB;4BAAE,QAAQ,OAAO,OAAO;wBAAC;;;;;;;eAd5C,OAAO,EAAE;;;;;;;;;;AAoB3B","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/essay-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { AlertCircle } from 'lucide-react';\n\ninterface EssayQuestionProps {\n  value: string;\n  onChange: (text: string) => void;\n  minWords?: number;\n  maxWords?: number;\n  placeholder?: string;\n  richText?: boolean;\n  disabled?: boolean;\n}\n\nexport function EssayQuestion({\n  value,\n  onChange,\n  minWords,\n  maxWords,\n  placeholder = 'Enter your answer here...',\n  richText = false,\n  disabled = false\n}: EssayQuestionProps) {\n  const [wordCount, setWordCount] = useState(0);\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Count words when text changes\n  useEffect(() => {\n    if (!value) {\n      setWordCount(0);\n      return;\n    }\n    \n    // Split by whitespace to count words\n    const words = value.trim().split(/\\s+/);\n    const count = value.trim() ? words.length : 0;\n    setWordCount(count);\n    \n    // Check word limits\n    if (maxWords && count > maxWords) {\n      setIsError(true);\n      setErrorMessage(`Your answer exceeds the maximum ${maxWords} words limit.`);\n    } else if (minWords && count < minWords) {\n      setIsError(true);\n      setErrorMessage(`Your answer must contain at least ${minWords} words.`);\n    } else {\n      setIsError(false);\n      setErrorMessage('');\n    }\n  }, [value, minWords, maxWords]);\n\n  return (\n    <div className=\"space-y-2\">\n      {richText ? (\n        // Rich text input could be implemented with a rich text editor component\n        <div className=\"border rounded-md\">\n          <textarea\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            placeholder={placeholder}\n            className=\"w-full p-3 min-h-[200px] focus:outline-none focus:ring-2 focus:ring-primary rounded-md resize-y\"\n            disabled={disabled}\n          />\n        </div>\n      ) : (\n        // Simple textarea for plain text\n        <textarea\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          placeholder={placeholder}\n          className=\"w-full p-3 min-h-[150px] border rounded-md focus:outline-none focus:ring-2 focus:ring-primary resize-y\"\n          disabled={disabled}\n        />\n      )}\n      \n      <div className=\"flex justify-between text-sm\">\n        <div className=\"flex items-center\">\n          {isError && (\n            <div className=\"flex items-center text-red-500\">\n              <AlertCircle className=\"h-4 w-4 mr-1\" />\n              <span>{errorMessage}</span>\n            </div>\n          )}\n        </div>\n        \n        <div className={`${isError ? 'text-red-500' : 'text-muted-foreground'}`}>\n          {wordCount} word{wordCount !== 1 ? 's' : ''} \n          {maxWords && ` / ${maxWords} max`}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAeO,SAAS,cAAc,EAC5B,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,cAAc,2BAA2B,EACzC,WAAW,KAAK,EAChB,WAAW,KAAK,EACG;IACnB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,gCAAgC;IAChC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;YACV,aAAa;YACb;QACF;QAEA,qCAAqC;QACrC,MAAM,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC;QACjC,MAAM,QAAQ,MAAM,IAAI,KAAK,MAAM,MAAM,GAAG;QAC5C,aAAa;QAEb,oBAAoB;QACpB,IAAI,YAAY,QAAQ,UAAU;YAChC,WAAW;YACX,gBAAgB,CAAC,gCAAgC,EAAE,SAAS,aAAa,CAAC;QAC5E,OAAO,IAAI,YAAY,QAAQ,UAAU;YACvC,WAAW;YACX,gBAAgB,CAAC,kCAAkC,EAAE,SAAS,OAAO,CAAC;QACxE,OAAO;YACL,WAAW;YACX,gBAAgB;QAClB;IACF,GAAG;QAAC;QAAO;QAAU;KAAS;IAE9B,qBACE,8OAAC;QAAI,WAAU;;YACZ,WACC,yEAAyE;0BACzE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,aAAa;oBACb,WAAU;oBACV,UAAU;;;;;;;;;;uBAId,iCAAiC;0BACjC,8OAAC;gBACC,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,aAAa;gBACb,WAAU;gBACV,UAAU;;;;;;0BAId,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACZ,yBACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,oNAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;8CACvB,8OAAC;8CAAM;;;;;;;;;;;;;;;;;kCAKb,8OAAC;wBAAI,WAAW,GAAG,UAAU,iBAAiB,yBAAyB;;4BACpE;4BAAU;4BAAM,cAAc,IAAI,MAAM;4BACxC,YAAY,CAAC,GAAG,EAAE,SAAS,IAAI,CAAC;;;;;;;;;;;;;;;;;;;AAK3C","debugId":null}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/fill-blank-question.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Option } from '@/lib/question-utils';\n\nexport interface FillBlankQuestionProps {\n  text: string;\n  options: Option[];\n  caseSensitive?: boolean;\n  existingAnswer?: Record<string, string>;\n  onChange: (answers: Record<string, string>) => void;\n  disabled?: boolean;\n  showAnswers?: boolean;\n}\n\nexport function FillBlankQuestion({\n  text,\n  options,\n  caseSensitive = false,\n  existingAnswer,\n  onChange,\n  disabled = false,\n  showAnswers = false,\n}: FillBlankQuestionProps) {\n  const [answers, setAnswers] = useState<Record<string, string>>(existingAnswer || {});\n  \n  useEffect(() => {\n    if (existingAnswer) {\n      setAnswers(existingAnswer);\n    } else {\n      // Initialize with empty strings for each blank\n      const initialAnswers: Record<string, string> = {};\n      options.forEach(option => {\n        if (option.position !== undefined && option.position !== null) {\n          initialAnswers[option.position.toString()] = '';\n        }\n      });\n      setAnswers(initialAnswers);\n    }\n  }, [existingAnswer, options]);\n  \n  const handleInputChange = (position: string, value: string) => {\n    const newAnswers = { ...answers, [position]: value };\n    setAnswers(newAnswers);\n    onChange(newAnswers);\n  };\n  \n  // Function to check if the answer for a blank is correct\n  const isCorrectAnswer = (position: string, userAnswer: string) => {\n    const option = options.find(opt => \n      opt.position !== undefined && opt.position.toString() === position\n    );\n    \n    if (!option) return false;\n    \n    if (caseSensitive) {\n      return option.content.trim() === userAnswer.trim();\n    } else {\n      return option.content.trim().toLowerCase() === userAnswer.trim().toLowerCase();\n    }\n  };\n  \n  const getCorrectAnswer = (position: string) => {\n    const option = options.find(opt => \n      opt.position !== undefined && opt.position.toString() === position\n    );\n    return option?.content || '';\n  };\n  \n  const renderTextWithBlanks = () => {\n    let result = [];\n    let currentText = text;\n    let match;\n    const blankRegex = /\\[blank_(\\d+)\\]/g;\n    let lastIndex = 0;\n    \n    while ((match = blankRegex.exec(currentText)) !== null) {\n      // Add text before the blank\n      result.push(currentText.substring(lastIndex, match.index));\n      \n      // Get the blank position\n      const position = match[1];\n      const userAnswer = answers[position] || '';\n      const isCorrect = isCorrectAnswer(position, userAnswer);\n      const correctAnswer = getCorrectAnswer(position);\n      \n      // Add the input field for the blank\n      result.push(\n        <span key={`blank-${position}`} className=\"inline-block\">\n          <input\n            type=\"text\"\n            value={userAnswer}\n            onChange={(e) => handleInputChange(position, e.target.value)}\n            className={`border px-2 py-1 rounded w-32 text-center inline-block \n              ${disabled ? 'bg-muted' : ''} \n              ${showAnswers && userAnswer \n                ? (isCorrect ? 'border-green-500 bg-green-50' : 'border-red-500 bg-red-50') \n                : 'border-input'\n              }`}\n            placeholder={`Blank ${position}`}\n            disabled={disabled}\n          />\n          {showAnswers && userAnswer && !isCorrect && (\n            <div className=\"text-xs mt-1 text-red-600\">\n              Correct: {correctAnswer}\n            </div>\n          )}\n        </span>\n      );\n      \n      lastIndex = match.index + match[0].length;\n    }\n    \n    // Add any remaining text\n    if (lastIndex < currentText.length) {\n      result.push(currentText.substring(lastIndex));\n    }\n    \n    return result;\n  };\n  \n  return (\n    <div className=\"space-y-4\">\n      <div className=\"whitespace-pre-wrap\">\n        {renderTextWithBlanks()}\n      </div>\n      {caseSensitive && (\n        <div className=\"text-xs italic text-muted-foreground mt-1\">\n          Note: This question is case-sensitive.\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1078, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1286, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/matching-question.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Option } from '@/lib/question-utils';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { ArrowRight } from 'lucide-react';\n\nexport interface MatchingQuestionProps {\n  options: Option[];\n  existingAnswer?: Record<string, string>;\n  onChange: (matches: Record<string, string>) => void;\n  disabled?: boolean;\n  showCorrect?: boolean;\n}\n\nexport function MatchingQuestion({\n  options,\n  existingAnswer,\n  onChange,\n  disabled = false,\n  showCorrect = false,\n}: MatchingQuestionProps) {\n  const [matches, setMatches] = useState<Record<string, string>>(existingAnswer || {});\n  \n  // Separate options into left and right groups\n  const leftOptions = options\n    .filter(opt => opt.group === 'left')\n    .sort((a, b) => a.order - b.order);\n  \n  const rightOptions = options\n    .filter(opt => opt.group === 'right')\n    .sort((a, b) => a.order - b.order);\n  \n  useEffect(() => {\n    if (existingAnswer) {\n      setMatches(existingAnswer);\n    } else {\n      // Initialize with empty matches for each left option\n      const initialMatches: Record<string, string> = {};\n      leftOptions.forEach(opt => {\n        initialMatches[opt.id] = '';\n      });\n      setMatches(initialMatches);\n    }\n  }, [existingAnswer, leftOptions]);\n  \n  const handleMatchChange = (leftId: string, rightId: string) => {\n    const newMatches = { ...matches, [leftId]: rightId };\n    setMatches(newMatches);\n    onChange(newMatches);\n  };\n  \n  // Function to check if a match is correct\n  const isCorrectMatch = (leftOption: Option) => {\n    const selectedRightId = matches[leftOption.id];\n    return leftOption.matchId === selectedRightId;\n  };\n  \n  // Get the correct right option for a left option\n  const getCorrectRightOption = (leftOption: Option) => {\n    return rightOptions.find(opt => opt.id === leftOption.matchId);\n  };\n  \n  return (\n    <div className=\"space-y-4\">\n      {leftOptions.map((leftOption) => {\n        const userSelectedRight = rightOptions.find(opt => opt.id === matches[leftOption.id]);\n        const isCorrect = isCorrectMatch(leftOption);\n        const correctRight = getCorrectRightOption(leftOption);\n        \n        return (\n          <div\n            key={leftOption.id}\n            className={`flex items-center gap-2 p-2 rounded-md ${\n              showCorrect && matches[leftOption.id]\n                ? (isCorrect ? 'bg-green-50 dark:bg-green-900/10' : 'bg-red-50 dark:bg-red-900/10')\n                : ''\n            }`}\n          >\n            <div className=\"font-medium min-w-40\">{leftOption.content}</div>\n            <ArrowRight className=\"h-4 w-4 text-muted-foreground\" />\n            <div className=\"flex-1\">\n              <Select\n                value={matches[leftOption.id] || ''}\n                onValueChange={(value) => handleMatchChange(leftOption.id, value)}\n                disabled={disabled}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a match...\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {!disabled && (\n                    <SelectItem value=\"\">\n                      -- Select --\n                    </SelectItem>\n                  )}\n                  {rightOptions.map((rightOption) => (\n                    <SelectItem key={rightOption.id} value={rightOption.id}>\n                      {rightOption.content}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            \n            {showCorrect && matches[leftOption.id] && !isCorrect && correctRight && (\n              <div className=\"text-xs text-red-600\">\n                Correct: {correctRight.content}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AALA;;;;;AAeO,SAAS,iBAAiB,EAC/B,OAAO,EACP,cAAc,EACd,QAAQ,EACR,WAAW,KAAK,EAChB,cAAc,KAAK,EACG;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,kBAAkB,CAAC;IAElF,8CAA8C;IAC9C,MAAM,cAAc,QACjB,MAAM,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK,QAC5B,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IAEnC,MAAM,eAAe,QAClB,MAAM,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK,SAC5B,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAgB;YAClB,WAAW;QACb,OAAO;YACL,qDAAqD;YACrD,MAAM,iBAAyC,CAAC;YAChD,YAAY,OAAO,CAAC,CAAA;gBAClB,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG;YAC3B;YACA,WAAW;QACb;IACF,GAAG;QAAC;QAAgB;KAAY;IAEhC,MAAM,oBAAoB,CAAC,QAAgB;QACzC,MAAM,aAAa;YAAE,GAAG,OAAO;YAAE,CAAC,OAAO,EAAE;QAAQ;QACnD,WAAW;QACX,SAAS;IACX;IAEA,0CAA0C;IAC1C,MAAM,iBAAiB,CAAC;QACtB,MAAM,kBAAkB,OAAO,CAAC,WAAW,EAAE,CAAC;QAC9C,OAAO,WAAW,OAAO,KAAK;IAChC;IAEA,iDAAiD;IACjD,MAAM,wBAAwB,CAAC;QAC7B,OAAO,aAAa,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,WAAW,OAAO;IAC/D;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,YAAY,GAAG,CAAC,CAAC;YAChB,MAAM,oBAAoB,aAAa,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC;YACpF,MAAM,YAAY,eAAe;YACjC,MAAM,eAAe,sBAAsB;YAE3C,qBACE,8OAAC;gBAEC,WAAW,CAAC,uCAAuC,EACjD,eAAe,OAAO,CAAC,WAAW,EAAE,CAAC,GAChC,YAAY,qCAAqC,iCAClD,IACJ;;kCAEF,8OAAC;wBAAI,WAAU;kCAAwB,WAAW,OAAO;;;;;;kCACzD,8OAAC,kNAAA,CAAA,aAAU;wBAAC,WAAU;;;;;;kCACtB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,2HAAA,CAAA,SAAM;4BACL,OAAO,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI;4BACjC,eAAe,CAAC,QAAU,kBAAkB,WAAW,EAAE,EAAE;4BAC3D,UAAU;;8CAEV,8OAAC,2HAAA,CAAA,gBAAa;8CACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;wCAAC,aAAY;;;;;;;;;;;8CAE3B,8OAAC,2HAAA,CAAA,gBAAa;;wCACX,CAAC,0BACA,8OAAC,2HAAA,CAAA,aAAU;4CAAC,OAAM;sDAAG;;;;;;wCAItB,aAAa,GAAG,CAAC,CAAC,4BACjB,8OAAC,2HAAA,CAAA,aAAU;gDAAsB,OAAO,YAAY,EAAE;0DACnD,YAAY,OAAO;+CADL,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;oBAQtC,eAAe,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,aAAa,8BACtD,8OAAC;wBAAI,WAAU;;4BAAuB;4BAC1B,aAAa,OAAO;;;;;;;;eAnC7B,WAAW,EAAE;;;;;QAwCxB;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 1444, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/code-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\ninterface CodeQuestionProps {\n  language: string;\n  initialCode?: string;\n  value: string;\n  onChange: (code: string) => void;\n  placeholder?: string;\n  disabled?: boolean;\n}\n\nexport function CodeQuestion({\n  language = 'javascript',\n  initialCode = '',\n  value,\n  onChange,\n  placeholder = '// Write your code here...',\n  disabled = false\n}: CodeQuestionProps) {\n  const [code, setCode] = useState(value || initialCode || '');\n\n  // Update code when the value prop changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setCode(value);\n    }\n  }, [value]);\n\n  // Handle code changes\n  const handleCodeChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newCode = e.target.value;\n    setCode(newCode);\n    onChange(newCode);\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-xs text-muted-foreground\">\n          Language: <span className=\"font-mono\">{language}</span>\n        </div>\n      </div>\n      \n      <div className=\"relative border rounded-md\">\n        <textarea\n          value={code}\n          onChange={handleCodeChange}\n          placeholder={placeholder}\n          className=\"w-full h-64 p-3 font-mono bg-slate-950 text-slate-50 rounded-md resize-y\"\n          disabled={disabled}\n          spellCheck={false}\n          aria-label={`Code editor for ${language}`}\n        />\n      </div>\n      \n      <div className=\"text-xs text-muted-foreground\">\n        <span>Press Tab to indent</span>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAaO,SAAS,aAAa,EAC3B,WAAW,YAAY,EACvB,cAAc,EAAE,EAChB,KAAK,EACL,QAAQ,EACR,cAAc,4BAA4B,EAC1C,WAAW,KAAK,EACE;IAClB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,eAAe;IAEzD,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU,WAAW;YACvB,QAAQ;QACV;IACF,GAAG;QAAC;KAAM;IAEV,sBAAsB;IACtB,MAAM,mBAAmB,CAAC;QACxB,MAAM,UAAU,EAAE,MAAM,CAAC,KAAK;QAC9B,QAAQ;QACR,SAAS;IACX;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;wBAAgC;sCACnC,8OAAC;4BAAK,WAAU;sCAAa;;;;;;;;;;;;;;;;;0BAI3C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,OAAO;oBACP,UAAU;oBACV,aAAa;oBACb,WAAU;oBACV,UAAU;oBACV,YAAY;oBACZ,cAAY,CAAC,gBAAgB,EAAE,UAAU;;;;;;;;;;;0BAI7C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;8BAAK;;;;;;;;;;;;;;;;;AAId","debugId":null}},
    {"offset": {"line": 1543, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/question-renderer.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { \n  normalizeQuestion, \n  getMultipleChoiceMetadata,\n  getEssayMetadata,\n  getShortAnswerMetadata,\n  getFillBlankMetadata,\n  getCodeMetadata,\n  getMatchingMetadata,\n  Question as ImportedQuestion,\n  Option as OptionType,\n  Answer as AnswerType\n} from '@/lib/question-utils';\nimport { MultipleChoiceQuestion } from '../multiple-choice-question';\nimport { EssayQuestion } from '../essay-question';\nimport { FillBlankQuestion } from '../fill-blank-question';\nimport { MatchingQuestion } from '../matching-question';\nimport { CodeQuestion } from '../code-question';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { HelpCircle, AlertCircle } from 'lucide-react';\nimport { normalizeMetadata } from '@/lib/utils';\n\n// Định nghĩa kiểu câu hỏi từ schema\nexport type QuestionType = \n  | 'MULTIPLE_CHOICE' \n  | 'ESSAY' \n  | 'TRUE_FALSE' \n  | 'SHORT_ANSWER' \n  | 'MATCHING' \n  | 'FILL_BLANK' \n  | 'CODE' \n  | 'FILE_UPLOAD';\n\n// Định nghĩa interface cho câu hỏi\nexport interface Question {\n  id: string;\n  content: string;\n  type: QuestionType;\n  options?: Option[];\n  metadata?: Record<string, any> | null | string; // Có thể là string hoặc object\n  mediaType?: string;\n  mediaUrl?: string;\n  explanation?: string;\n}\n\n// Interface cho lựa chọn trong câu hỏi\nexport interface Option {\n  id: string;\n  content: string;\n  order: number;\n  isCorrect?: boolean;  // Chỉ hiện ở phía giáo viên\n  group?: string;       // For MATCHING questions\n  position?: number;    // For FILL_BLANK questions\n}\n\n// Metadata cho các loại câu hỏi khác nhau\nexport interface QuestionMetadata {\n  // Multiple choice\n  allowMultiple?: boolean;\n  shuffleOptions?: boolean;\n  \n  // Essay\n  minWords?: number;\n  maxWords?: number;\n  placeholder?: string;\n  richText?: boolean;\n  \n  // Short answer\n  caseSensitive?: boolean;\n  \n  // Fill-in-the-blank\n  text?: string;\n  blankPositions?: Array<{ id: string, position: number }>;\n  \n  // Matching\n  leftGroup?: Option[];\n  rightGroup?: Option[];\n  \n  // Code\n  language?: string;\n  initialCode?: string;\n  testCases?: string[];\n}\n\n// Interface cho câu trả lời\nexport interface Answer {\n  questionId: string;\n  selectedOptions: string[];\n  textAnswer?: string;\n  jsonData?: Record<string, any> | null;\n}\n\ninterface QuestionRendererProps {\n  question: ImportedQuestion;\n  answer?: AnswerType | null;\n  onAnswerChange: (answer: AnswerType) => void;\n  isReview?: boolean;\n}\n\n/**\n * Main component to render a question based on its type\n */\nexport default function QuestionRenderer({\n  question,\n  answer,\n  onAnswerChange,\n  isReview = false\n}: QuestionRendererProps) {\n  // Normalize question to ensure metadata is properly structured\n  const [normalizedQuestion, setNormalizedQuestion] = useState<ImportedQuestion>({...question});\n  const [error, setError] = useState<string | null>(null);\n\n  // Effect to normalize question metadata\n  useEffect(() => {\n    try {\n      setNormalizedQuestion(normalizeQuestion(question));\n      setError(null);\n    } catch (err) {\n      console.error(\"Error normalizing question:\", err);\n      setError(\"Error processing question data. Please contact your teacher.\");\n    }\n  }, [question]);\n\n  // Initialize answer if not provided\n  const [currentAnswer, setCurrentAnswer] = useState<AnswerType>({\n    questionId: question.id,\n    selectedOptions: [],\n    textAnswer: '',\n    jsonData: null\n  });\n\n  // Update local answer when props change\n  useEffect(() => {\n    if (answer) {\n      setCurrentAnswer(answer);\n    } else {\n      // Reset answer when question changes and no answer exists\n      setCurrentAnswer({\n        questionId: question.id,\n        selectedOptions: [],\n        textAnswer: '',\n        jsonData: null\n      });\n    }\n  }, [question.id, answer]);\n\n  // Handle answer change and propagate to parent\n  const handleAnswerChange = (updatedAnswer: Partial<AnswerType>) => {\n    const newAnswer = {\n      ...currentAnswer,\n      ...updatedAnswer\n    };\n    \n    setCurrentAnswer(newAnswer);\n    onAnswerChange(newAnswer);\n  };\n\n  // Display error if we couldn't process the question\n  if (error) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Error</AlertTitle>\n        <AlertDescription>{error}</AlertDescription>\n      </Alert>\n    );\n  }\n\n  // Render the appropriate question component based on question type\n  const renderQuestionByType = () => {\n    if (!normalizedQuestion) return null;\n    \n    try {\n      switch (normalizedQuestion.type) {\n        case 'MULTIPLE_CHOICE':\n          const mcMetadata = getMultipleChoiceMetadata(normalizedQuestion);\n          return (\n            <MultipleChoiceQuestion\n              question={normalizedQuestion}\n              selectedOptions={currentAnswer.selectedOptions}\n              onChange={(selection) => handleAnswerChange({ selectedOptions: selection })}\n              allowMultiple={mcMetadata?.allowMultiple || false}\n              disabled={isReview}\n            />\n          );\n\n        case 'TRUE_FALSE':\n          // True/False is essentially a multiple choice with 2 options\n          return (\n            <MultipleChoiceQuestion\n              question={normalizedQuestion}\n              selectedOptions={currentAnswer.selectedOptions}\n              onChange={(selection) => handleAnswerChange({ selectedOptions: selection })}\n              allowMultiple={false}\n              disabled={isReview}\n            />\n          );\n\n        case 'ESSAY':\n          const essayMetadata = getEssayMetadata(normalizedQuestion);\n          return (\n            <EssayQuestion\n              value={currentAnswer.textAnswer || ''}\n              onChange={(text) => handleAnswerChange({ textAnswer: text })}\n              minWords={essayMetadata.minWords}\n              maxWords={essayMetadata.maxWords}\n              placeholder={essayMetadata.placeholder}\n              richText={essayMetadata.richText}\n              disabled={isReview}\n            />\n          );\n\n        case 'SHORT_ANSWER':\n          const saMetadata = getShortAnswerMetadata(normalizedQuestion);\n          return (\n            <input\n              type=\"text\"\n              value={currentAnswer.textAnswer || ''}\n              onChange={(e) => handleAnswerChange({ textAnswer: e.target.value })}\n              placeholder={saMetadata.placeholder || 'Enter your answer here...'}\n              className=\"w-full p-2 border rounded-md\"\n              disabled={isReview}\n            />\n          );\n\n        case 'FILL_BLANK':\n          const fbMetadata = getFillBlankMetadata(normalizedQuestion);\n          return (\n            <FillBlankQuestion\n              text={fbMetadata.text}\n              options={normalizedQuestion.options || []}\n              caseSensitive={fbMetadata.caseSensitive}\n              existingAnswer={currentAnswer.jsonData as Record<string, string> | undefined}\n              onChange={(data) => handleAnswerChange({ jsonData: data })}\n              disabled={isReview}\n            />\n          );\n\n        case 'CODE':\n          const codeMetadata = getCodeMetadata(normalizedQuestion);\n          return (\n            <CodeQuestion\n              language={codeMetadata.language}\n              initialCode={codeMetadata.initialCode || ''}\n              value={currentAnswer.textAnswer || ''}\n              onChange={(code) => handleAnswerChange({ textAnswer: code })}\n              disabled={isReview}\n            />\n          );\n\n        case 'MATCHING':\n          return (\n            <MatchingQuestion\n              options={normalizedQuestion.options || []}\n              existingAnswer={currentAnswer.jsonData as Record<string, string> | undefined}\n              onChange={(data) => handleAnswerChange({ jsonData: data })}\n              disabled={isReview}\n            />\n          );\n\n        default:\n          return (\n            <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n              <p className=\"text-yellow-600\">\n                This question type ({normalizedQuestion.type}) is not supported yet.\n              </p>\n            </div>\n          );\n      }\n    } catch (err) {\n      console.error(\"Error rendering question:\", err);\n      return (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n          <p className=\"text-red-600\">\n            Error rendering question. Please contact your teacher.\n          </p>\n        </div>\n      );\n    }\n  };\n\n  // Render question media (if available)\n  const renderQuestionMedia = () => {\n    if (!normalizedQuestion.mediaUrl) return null;\n    \n    return (\n      <div className=\"mb-4\">\n        {normalizedQuestion.mediaType === 'IMAGE' && (\n          <img \n            src={normalizedQuestion.mediaUrl} \n            alt=\"Question media\" \n            className=\"max-w-full rounded-md\"\n          />\n        )}\n        {normalizedQuestion.mediaType === 'VIDEO' && (\n          <video \n            src={normalizedQuestion.mediaUrl} \n            controls \n            className=\"max-w-full rounded-md\"\n          />\n        )}\n        {normalizedQuestion.mediaType === 'AUDIO' && (\n          <audio \n            src={normalizedQuestion.mediaUrl} \n            controls \n            className=\"w-full\"\n          />\n        )}\n      </div>\n    );\n  };\n\n  // Media rendering for questions with attached media\n  const renderMedia = () => {\n    if (!normalizedQuestion.mediaUrl) return null;\n    \n    switch (normalizedQuestion.mediaType) {\n      case 'IMAGE':\n        return (\n          <div className=\"my-4\">\n            <img\n              src={normalizedQuestion.mediaUrl}\n              alt=\"Question illustration\"\n              className=\"max-w-full rounded-md\"\n            />\n          </div>\n        );\n      case 'VIDEO':\n        return (\n          <div className=\"my-4\">\n            <video\n              src={normalizedQuestion.mediaUrl}\n              controls\n              className=\"max-w-full rounded-md\"\n            />\n          </div>\n        );\n      case 'AUDIO':\n        return (\n          <div className=\"my-4\">\n            <audio\n              src={normalizedQuestion.mediaUrl}\n              controls\n              className=\"w-full\"\n            />\n          </div>\n        );\n      case 'DOCUMENT':\n        return (\n          <div className=\"my-4\">\n            <a\n              href={normalizedQuestion.mediaUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-500 hover:underline flex items-center\"\n            >\n              <HelpCircle className=\"h-4 w-4 mr-2\" />\n              Xem tài liệu đính kèm\n            </a>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Question media */}\n      {renderQuestionMedia()}\n      \n      {/* Question content */}\n      <div className=\"prose dark:prose-invert max-w-none\">\n        <div dangerouslySetInnerHTML={{ __html: normalizedQuestion.content }} />\n      </div>\n      \n      {/* Question input based on type */}\n      <div className=\"mt-4\">\n        {renderQuestionByType()}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1972, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2025, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> & {\n    variant?: \"default\" | \"muted\" | \"accent\" | \"gradient\"\n  }\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, variant = \"default\", ...props },\n    ref\n  ) => {\n    const variantClasses = {\n      default: \"bg-border\",\n      muted: \"bg-muted\",\n      accent: \"bg-accent/30\",\n      gradient: \"bg-gradient-to-r from-transparent via-border/70 to-transparent\"\n    }\n\n    return (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n          \"shrink-0\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n          variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  )\n  }\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAM/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAC3F;IAEA,MAAM,iBAAiB;QACrB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IAEA,qBACA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,YACF,gBAAgB,eAAe,mBAAmB,kBAChD,cAAc,CAAC,QAAQ,EACzB;QAED,GAAG,KAAK;;;;;;AAGb;AAEF,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2064, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/question-navigation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { \r\n  Tooltip, \r\n  TooltipContent, \r\n  TooltipProvider, \r\n  TooltipTrigger \r\n} from '@/components/ui/tooltip';\r\nimport { \r\n  CheckCircle2, \r\n  Flag, \r\n  HelpCircle, \r\n  XCircle \r\n} from 'lucide-react';\r\nimport { \r\n  Question, \r\n  Answer \r\n} from './question-renderer';\r\n\r\ninterface QuestionNavigationProps {\r\n  questions: Question[];\r\n  answers: Answer[];\r\n  currentQuestionIndex: number;\r\n  flaggedQuestions: Set<string>;\r\n  onQuestionSelect: (index: number) => void;\r\n  isSubmitting: boolean;\r\n}\r\n\r\nexport default function QuestionNavigation({\r\n  questions,\r\n  answers,\r\n  currentQuestionIndex,\r\n  flaggedQuestions,\r\n  onQuestionSelect,\r\n  isSubmitting\r\n}: QuestionNavigationProps) {\r\n  const [filter, setFilter] = useState<'all' | 'answered' | 'unanswered' | 'flagged'>('all');\r\n\r\n  // Calculate question stats\r\n  const stats = useMemo(() => {\r\n    const answered = questions.filter(q => \r\n      answers.some(a => \r\n        a.questionId === q.id && \r\n        (a.selectedOptions.length > 0 || a.textAnswer || a.jsonData)\r\n      )\r\n    ).length;\r\n    \r\n    return {\r\n      total: questions.length,\r\n      answered,\r\n      unanswered: questions.length - answered,\r\n      flagged: flaggedQuestions.size\r\n    };\r\n  }, [questions, answers, flaggedQuestions]);\r\n\r\n  // Filter questions based on current filter\r\n  const filteredQuestions = useMemo(() => {\r\n    return questions.map((question, index) => {\r\n      const answer = answers.find(a => a.questionId === question.id);\r\n      const isAnswered = answer && (\r\n        answer.selectedOptions.length > 0 || \r\n        answer.textAnswer || \r\n        answer.jsonData\r\n      );\r\n      const isFlagged = flaggedQuestions.has(question.id);\r\n      \r\n      let visible = true;\r\n      if (filter === 'answered') visible = !!isAnswered;\r\n      if (filter === 'unanswered') visible = !isAnswered;\r\n      if (filter === 'flagged') visible = isFlagged;\r\n      \r\n      return { question, index, isAnswered, isFlagged, visible };\r\n    });\r\n  }, [questions, answers, filter, flaggedQuestions]);\r\n\r\n  return (\r\n    <Card className=\"h-full\">\r\n      <CardHeader className=\"pb-2\">\r\n        <CardTitle className=\"text-lg flex justify-between items-center\">\r\n          <span>Câu hỏi</span>\r\n          <div className=\"flex items-center gap-2 text-sm\">\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-1 text-emerald-600\">\r\n                    <CheckCircle2 className=\"h-4 w-4\" />\r\n                    <span>{stats.answered}</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  Đã trả lời\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            \r\n            <Separator orientation=\"vertical\" className=\"h-4 mx-1\" />\r\n            \r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-1 text-slate-500\">\r\n                    <XCircle className=\"h-4 w-4\" />\r\n                    <span>{stats.unanswered}</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  Chưa trả lời\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            \r\n            <Separator orientation=\"vertical\" className=\"h-4 mx-1\" />\r\n            \r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-1 text-yellow-500\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    <span>{stats.flagged}</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  Đã đánh dấu\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      \r\n      <CardContent className=\"space-y-4\">\r\n        {/* Filter tabs */}\r\n        <Tabs defaultValue=\"all\" value={filter} onValueChange={(v) => setFilter(v as any)}>\r\n          <TabsList className=\"grid grid-cols-4 w-full\">\r\n            <TabsTrigger value=\"all\">Tất cả</TabsTrigger>\r\n            <TabsTrigger value=\"answered\">Đã làm</TabsTrigger>\r\n            <TabsTrigger value=\"unanswered\">Chưa làm</TabsTrigger>\r\n            <TabsTrigger value=\"flagged\">Đánh dấu</TabsTrigger>\r\n          </TabsList>\r\n        </Tabs>\r\n        \r\n        {/* Question number grid */}\r\n        <div className=\"grid grid-cols-5 gap-2\">\r\n          {filteredQuestions.map(({ question, index, isAnswered, isFlagged, visible }) => (\r\n            visible && (\r\n              <QuestionButton\r\n                key={question.id}\r\n                number={index + 1}\r\n                isActive={index === currentQuestionIndex}\r\n                isAnswered={!!isAnswered}\r\n                isFlagged={isFlagged}\r\n                onClick={() => onQuestionSelect(index)}\r\n                disabled={isSubmitting}\r\n              />\r\n            )\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Show message if no questions match filter */}\r\n        {filteredQuestions.filter(q => q.visible).length === 0 && (\r\n          <div className=\"text-center py-4 text-sm text-muted-foreground\">\r\n            <HelpCircle className=\"mx-auto h-5 w-5 mb-2\" />\r\n            Không có câu hỏi nào phù hợp với bộ lọc\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Individual question button component\r\ninterface QuestionButtonProps {\r\n  number: number;\r\n  isActive: boolean;\r\n  isAnswered: boolean;\r\n  isFlagged: boolean;\r\n  onClick: () => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nfunction QuestionButton({\r\n  number,\r\n  isActive,\r\n  isAnswered,\r\n  isFlagged,\r\n  onClick,\r\n  disabled\r\n}: QuestionButtonProps) {\r\n  let className = \"flex items-center justify-center h-10 rounded-md font-medium relative\";\r\n  \r\n  // Determine button styling based on state\r\n  if (isActive) {\r\n    className += \" bg-primary text-primary-foreground\";\r\n  } else if (isAnswered) {\r\n    className += \" bg-emerald-100 border border-emerald-500 text-emerald-700\";\r\n  } else {\r\n    className += \" bg-slate-100 border border-slate-300 text-slate-700\";\r\n  }\r\n  \r\n  if (disabled) {\r\n    className += \" opacity-50 cursor-not-allowed\";\r\n  } else {\r\n    className += \" hover:bg-slate-200 cursor-pointer\";\r\n  }\r\n  \r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>\r\n          <div \r\n            className={className}\r\n            onClick={disabled ? undefined : onClick}\r\n          >\r\n            {number}\r\n            \r\n            {/* Flag indicator */}\r\n            {isFlagged && (\r\n              <div className=\"absolute -top-1 -right-1\">\r\n                <Flag className=\"h-3 w-3 text-yellow-500 fill-yellow-500\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </TooltipTrigger>\r\n        <TooltipContent>\r\n          <div className=\"text-sm\">\r\n            Câu {number}\r\n            {isAnswered ? ' - Đã trả lời' : ' - Chưa trả lời'}\r\n            {isFlagged && ' - Đã đánh dấu'}\r\n          </div>\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2518, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/time-display.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Clock, AlertTriangle } from 'lucide-react';\r\n\r\ninterface TimeDisplayProps {\r\n  remainingTime: number | null;\r\n  isSubmitting: boolean;\r\n}\r\n\r\nexport default function TimeDisplay({ \r\n  remainingTime,\r\n  isSubmitting\r\n}: TimeDisplayProps) {\r\n  // Format time as HH:MM:SS\r\n  const formatTime = (seconds: number | null): string => {\r\n    if (seconds === null) return '--:--:--';\r\n    \r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    \r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Get appropriate styling for time display\r\n  const getTimeStyle = (): string => {\r\n    if (remainingTime === null) return 'text-slate-500';\r\n    if (isSubmitting) return 'text-slate-500';\r\n    \r\n    // Red when less than 5 minutes\r\n    if (remainingTime < 300) return 'text-red-500';\r\n    \r\n    // Orange when less than 10 minutes\r\n    if (remainingTime < 600) return 'text-orange-500';\r\n    \r\n    return 'text-slate-700';\r\n  };\r\n  \r\n  // Render clock icon with appropriate color\r\n  const renderClockIcon = () => {\r\n    if (remainingTime === null) return <Clock className=\"h-5 w-5 text-slate-500\" />;\r\n    if (isSubmitting) return <Clock className=\"h-5 w-5 text-slate-500\" />;\r\n    \r\n    if (remainingTime < 300) {\r\n      return <AlertTriangle className=\"h-5 w-5 text-red-500\" />;\r\n    }\r\n    \r\n    if (remainingTime < 600) {\r\n      return <Clock className=\"h-5 w-5 text-orange-500\" />;\r\n    }\r\n    \r\n    return <Clock className=\"h-5 w-5 text-slate-700\" />;\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"flex items-center gap-2 px-3 py-2 bg-slate-50 border\">\r\n      {renderClockIcon()}\r\n      <span className={`font-mono font-medium ${getTimeStyle()}`}>\r\n        {formatTime(remainingTime)}\r\n      </span>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAJA;;;;AAWe,SAAS,YAAY,EAClC,aAAa,EACb,YAAY,EACK;IACjB,0BAA0B;IAC1B,MAAM,aAAa,CAAC;QAClB,IAAI,YAAY,MAAM,OAAO;QAE7B,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;QACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;QAC9C,MAAM,OAAO,UAAU;QAEvB,OAAO,GAAG,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IAC1H;IAEA,2CAA2C;IAC3C,MAAM,eAAe;QACnB,IAAI,kBAAkB,MAAM,OAAO;QACnC,IAAI,cAAc,OAAO;QAEzB,+BAA+B;QAC/B,IAAI,gBAAgB,KAAK,OAAO;QAEhC,mCAAmC;QACnC,IAAI,gBAAgB,KAAK,OAAO;QAEhC,OAAO;IACT;IAEA,2CAA2C;IAC3C,MAAM,kBAAkB;QACtB,IAAI,kBAAkB,MAAM,qBAAO,8OAAC,oMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;QACpD,IAAI,cAAc,qBAAO,8OAAC,oMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;QAE1C,IAAI,gBAAgB,KAAK;YACvB,qBAAO,8OAAC,wNAAA,CAAA,gBAAa;gBAAC,WAAU;;;;;;QAClC;QAEA,IAAI,gBAAgB,KAAK;YACvB,qBAAO,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;QAC1B;QAEA,qBAAO,8OAAC,oMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;IAC1B;IAEA,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAU;;YACb;0BACD,8OAAC;gBAAK,WAAW,CAAC,sBAAsB,EAAE,gBAAgB;0BACvD,WAAW;;;;;;;;;;;;AAIpB","debugId":null}},
    {"offset": {"line": 2615, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/offline-indicator.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Wifi, WifiOff } from 'lucide-react';\n\ninterface OfflineIndicatorProps {\n  lastSavedTimestamp: Date | null;\n}\n\nexport default function OfflineIndicator({ lastSavedTimestamp }: OfflineIndicatorProps) {\n  // Format time for display\n  const formatTime = (date: Date): string => {\n    return date.toLocaleTimeString(undefined, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  return (\n    <Alert className=\"border-yellow-500 bg-yellow-50\">\n      <WifiOff className=\"h-4 w-4 text-yellow-600\" />\n      <AlertTitle className=\"text-yellow-800\">Mất kết nối internet</AlertTitle>\n      <AlertDescription className=\"text-yellow-700\">\n        Bạn đang ở chế độ ngoại tuyến. Câu trả lời của bạn đang được lưu trên thiết bị này và sẽ được\n        đồng bộ khi bạn kết nối lại.\n        {lastSavedTimestamp && (\n          <div className=\"mt-1 text-sm\">\n            Lần lưu gần nhất: {formatTime(lastSavedTimestamp)}\n          </div>\n        )}\n      </AlertDescription>\n    </Alert>\n  );\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAUe,SAAS,iBAAiB,EAAE,kBAAkB,EAAyB;IACpF,0BAA0B;IAC1B,MAAM,aAAa,CAAC;QAClB,OAAO,KAAK,kBAAkB,CAAC,WAAW;YACxC,MAAM;YACN,QAAQ;YACR,QAAQ;QACV;IACF;IAEA,qBACE,8OAAC,0HAAA,CAAA,QAAK;QAAC,WAAU;;0BACf,8OAAC,4MAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;0BACnB,8OAAC,0HAAA,CAAA,aAAU;gBAAC,WAAU;0BAAkB;;;;;;0BACxC,8OAAC,0HAAA,CAAA,mBAAgB;gBAAC,WAAU;;oBAAkB;oBAG3C,oCACC,8OAAC;wBAAI,WAAU;;4BAAe;4BACT,WAAW;;;;;;;;;;;;;;;;;;;AAM1C","debugId":null}},
    {"offset": {"line": 2686, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2725, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/submit-confirmation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { \r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter\r\n} from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { AlertTriangle, CheckCircle2, FileCheck, Loader2 } from 'lucide-react';\r\n\r\ninterface SubmitConfirmationProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  answeredCount: number;\r\n  totalQuestions: number;\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport default function SubmitConfirmation({\r\n  open,\r\n  onOpenChange,\r\n  answeredCount,\r\n  totalQuestions,\r\n  onSubmit\r\n}: SubmitConfirmationProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Calculate completion percentage\r\n  const completionPercentage = totalQuestions ? Math.round((answeredCount / totalQuestions) * 100) : 0;\r\n  \r\n  // Reset loading state when dialog is closed\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [open]);\r\n  \r\n  // Handle submit with loading state\r\n  const handleSubmit = () => {\r\n    setIsLoading(true);\r\n    onSubmit();\r\n  };\r\n  \r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-xl\">Xác nhận nộp bài</DialogTitle>\r\n          <DialogDescription>\r\n            Bạn có chắc muốn nộp bài làm? Sau khi nộp, bạn sẽ không thể sửa lại bài làm.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"my-4 space-y-4\">\r\n          {/* Completion progress */}\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm font-medium\">\r\n                Tiến độ làm bài: {answeredCount}/{totalQuestions} câu\r\n              </span>\r\n              <span className=\"text-sm\">{completionPercentage}%</span>\r\n            </div>\r\n            <Progress value={completionPercentage} />\r\n          </div>\r\n          \r\n          {/* Status message */}\r\n          {completionPercentage < 100 ? (\r\n            <div className=\"flex items-center gap-2 text-yellow-600 bg-yellow-50 border border-yellow-200 rounded-md p-3\">\r\n              <AlertTriangle className=\"h-5 w-5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"font-medium\">Bạn chưa hoàn thành tất cả các câu hỏi</p>\r\n                <p className=\"text-sm\">\r\n                  Còn {totalQuestions - answeredCount} câu hỏi chưa được trả lời.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex items-center gap-2 text-emerald-600 bg-emerald-50 border border-emerald-200 rounded-md p-3\">\r\n              <CheckCircle2 className=\"h-5 w-5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"font-medium\">Bạn đã hoàn thành tất cả các câu hỏi</p>\r\n                <p className=\"text-sm\">\r\n                  Tất cả {totalQuestions} câu hỏi đã được trả lời.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n          \r\n        <DialogFooter className=\"flex flex-col-reverse sm:flex-row sm:justify-between gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => onOpenChange(false)}\r\n            disabled={isLoading}\r\n          >\r\n            Quay lại làm bài\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                Đang nộp bài...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FileCheck className=\"mr-2 h-4 w-4\" />\r\n                Nộp bài\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAbA;;;;;;;AAuBe,SAAS,mBAAmB,EACzC,IAAI,EACJ,YAAY,EACZ,aAAa,EACb,cAAc,EACd,QAAQ,EACgB;IACxB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,kCAAkC;IAClC,MAAM,uBAAuB,iBAAiB,KAAK,KAAK,CAAC,AAAC,gBAAgB,iBAAkB,OAAO;IAEnG,4CAA4C;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,MAAM;YACT,aAAa;QACf;IACF,GAAG;QAAC;KAAK;IAET,mCAAmC;IACnC,MAAM,eAAe;QACnB,aAAa;QACb;IACF;IAEA,qBACE,8OAAC,2HAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,8OAAC,2HAAA,CAAA,gBAAa;;8BACZ,8OAAC,2HAAA,CAAA,eAAY;;sCACX,8OAAC,2HAAA,CAAA,cAAW;4BAAC,WAAU;sCAAU;;;;;;sCACjC,8OAAC,2HAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAKrB,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;;gDAAsB;gDAClB;gDAAc;gDAAE;gDAAe;;;;;;;sDAEnD,8OAAC;4CAAK,WAAU;;gDAAW;gDAAqB;;;;;;;;;;;;;8CAElD,8OAAC,6HAAA,CAAA,WAAQ;oCAAC,OAAO;;;;;;;;;;;;wBAIlB,uBAAuB,oBACtB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,wNAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;8CACzB,8OAAC;;sDACC,8OAAC;4CAAE,WAAU;sDAAc;;;;;;sDAC3B,8OAAC;4CAAE,WAAU;;gDAAU;gDAChB,iBAAiB;gDAAc;;;;;;;;;;;;;;;;;;iDAK1C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,0NAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;8CACxB,8OAAC;;sDACC,8OAAC;4CAAE,WAAU;sDAAc;;;;;;sDAC3B,8OAAC;4CAAE,WAAU;;gDAAU;gDACb;gDAAe;;;;;;;;;;;;;;;;;;;;;;;;;8BAOjC,8OAAC,2HAAA,CAAA,eAAY;oBAAC,WAAU;;sCACtB,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,SAAS,IAAM,aAAa;4BAC5B,UAAU;sCACX;;;;;;sCAGD,8OAAC,2HAAA,CAAA,SAAM;4BACL,SAAS;4BACT,UAAU;sCAET,0BACC;;kDACE,8OAAC,4MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;oCAA8B;;6DAInD;;kDACE,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;AAStD","debugId":null}},
    {"offset": {"line": 3003, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/quiz-take.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useLocalStorage } from '@/hooks/use-local-storage';\nimport { useOnlineStatus } from '@/hooks/use-online-status';\nimport { useToast } from '@/components/ui/use-toast';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  AlertCircle, \n  CheckCircle2, \n  Clock, \n  Flag, \n  HelpCircle, \n  Loader2, \n  XCircle \n} from 'lucide-react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle, \n  DialogDescription, \n  DialogFooter \n} from '@/components/ui/dialog';\nimport { \n  Sheet, \n  SheetContent, \n  SheetHeader, \n  SheetTitle, \n  SheetTrigger \n} from '@/components/ui/sheet';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  Tooltip, \n  TooltipContent, \n  TooltipProvider, \n  TooltipTrigger \n} from '@/components/ui/tooltip';\n\n// Components for different question types\nimport QuestionRenderer from './components/question-renderer';\nimport QuestionNavigation from './components/question-navigation';\nimport TimeDisplay from './components/time-display';\nimport OfflineIndicator from './components/offline-indicator';\nimport SubmitConfirmation from './components/submit-confirmation';\n\n// Types\nimport { \n  Quiz, \n  Question, \n  Answer, \n  QuizAttempt \n} from '@/app/dashboard/student/types/quiz-types';\n\ninterface QuizTakeProps {\n  quizId: string;\n}\n\nexport function QuizTake({ quizId }: QuizTakeProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const isOnline = useOnlineStatus();\n  const saveAnswerTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [quiz, setQuiz] = useState<Quiz | null>(null);\n  const [attemptId, setAttemptId] = useState<string | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState<Answer[]>([]);\n  const [flaggedQuestions, setFlaggedQuestions] = useState<Set<string>>(new Set());\n  const [remainingTime, setRemainingTime] = useState<number | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showSubmitConfirmation, setShowSubmitConfirmation] = useState(false);\n  const [lastSavedTimestamp, setLastSavedTimestamp] = useState<Date | null>(null);\n  const [showTimeWarning, setShowTimeWarning] = useState(false);\n\n  // Store answers in local storage as backup\n  const [localAnswers, setLocalAnswers] = useLocalStorage<Record<string, any>>(\n    `quiz-answers-${quizId}`,\n    {}\n  );\n\n  // Initialize attempt\n  useEffect(() => {\n    const startAttempt = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`/api/attempts/start`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            quizId,\n          }),\n        });\n\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.message || 'Failed to start attempt');\n        }\n\n        const data = await response.json();\n        \n        if (data.success) {\n          setAttemptId(data.data.attemptId);\n          \n          // If continuing an attempt, load saved answers\n          if (!data.data.isNew) {\n            loadSavedAnswers(data.data.attemptId);\n          }\n          \n          // Load quiz details\n          fetchQuizDetails(quizId);\n        } else {\n          throw new Error(data.message || 'Failed to start attempt');\n        }\n      } catch (err) {\n        console.error('Error starting attempt:', err);\n        setError((err as Error).message);\n        toast({\n          title: 'Lỗi',\n          description: (err as Error).message,\n          variant: 'destructive',\n        });\n      }\n    };\n\n    startAttempt();\n  }, [quizId, toast]);\n\n  // Load quiz details\n  const fetchQuizDetails = async (quizId: string) => {\n    try {\n      const response = await fetch(`/api/quizzes/${quizId}/details`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to load quiz details');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setQuiz(data.data);\n        \n        // Initialize time limit if applicable\n        if (data.data.timeLimit) {\n          // Convert time limit from minutes to seconds\n          setRemainingTime(data.data.timeLimit * 60);\n        }\n        \n        setIsLoading(false);\n      } else {\n        throw new Error(data.message || 'Failed to load quiz details');\n      }\n    } catch (err) {\n      console.error('Error loading quiz details:', err);\n      setError((err as Error).message);\n      toast({\n        title: 'Lỗi',\n        description: (err as Error).message,\n        variant: 'destructive',\n      });\n      setIsLoading(false);\n    }\n  };\n\n  // Load saved answers for a continuing attempt\n  const loadSavedAnswers = async (attemptId: string) => {\n    try {\n      const response = await fetch(`/api/attempts/${attemptId}/answers`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to load saved answers');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success && data.data.length > 0) {\n        // Transform API data into Answer objects\n        const loadedAnswers: Answer[] = data.data.map((item: any) => ({\n          questionId: item.questionId,\n          selectedOptions: item.selectedOption ? [item.selectedOption] : [],\n          textAnswer: item.textAnswer || '',\n          jsonData: item.jsonData ? JSON.parse(item.jsonData) : null,\n        }));\n        \n        setAnswers(loadedAnswers);\n        \n        // Also save to local storage as backup\n        const answersMap: Record<string, any> = {};\n        loadedAnswers.forEach(answer => {\n          answersMap[answer.questionId] = {\n            selectedOptions: answer.selectedOptions,\n            textAnswer: answer.textAnswer,\n            jsonData: answer.jsonData,\n          };\n        });\n        \n        setLocalAnswers(answersMap);\n      }\n    } catch (err) {\n      console.error('Error loading saved answers:', err);\n      // Try to recover from local storage\n      recoverFromLocalStorage();\n    }\n  };\n\n  // Attempt to recover answers from local storage if server fetch fails\n  const recoverFromLocalStorage = () => {\n    if (Object.keys(localAnswers).length > 0 && quiz) {\n      const recoveredAnswers: Answer[] = [];\n      \n      quiz.questions.forEach(question => {\n        if (localAnswers[question.id]) {\n          recoveredAnswers.push({\n            questionId: question.id,\n            selectedOptions: localAnswers[question.id].selectedOptions || [],\n            textAnswer: localAnswers[question.id].textAnswer || '',\n            jsonData: localAnswers[question.id].jsonData || null,\n          });\n        }\n      });\n      \n      if (recoveredAnswers.length > 0) {\n        setAnswers(recoveredAnswers);\n        toast({\n          title: 'Khôi phục câu trả lời',\n          description: 'Đã khôi phục câu trả lời từ bộ nhớ cục bộ.',\n        });\n      }\n    }\n  };\n\n  // Save answer with debounce to prevent excessive API calls\n  const saveAnswer = useCallback(async (answer: Answer) => {\n    if (!attemptId || !isOnline) {\n      // Save to local storage if offline\n      setLocalAnswers(prev => ({\n        ...prev,\n        [answer.questionId]: {\n          selectedOptions: answer.selectedOptions,\n          textAnswer: answer.textAnswer,\n          jsonData: answer.jsonData,\n        },\n      }));\n      \n      if (!isOnline) {\n        return; // Don't try to make API call if offline\n      }\n    }\n\n    // Clear existing timeout\n    if (saveAnswerTimeoutRef.current) {\n      clearTimeout(saveAnswerTimeoutRef.current);\n    }\n\n    // Set new timeout (500ms debounce)\n    saveAnswerTimeoutRef.current = setTimeout(async () => {\n      try {\n        const response = await fetch(`/api/attempts/${attemptId}/answers`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            questionId: answer.questionId,\n            selectedOption: answer.selectedOptions.length === 1 ? answer.selectedOptions[0] : null,\n            selectedOptions: answer.selectedOptions.length > 1 ? answer.selectedOptions : null,\n            textAnswer: answer.textAnswer || null,\n            jsonData: answer.jsonData || null,\n          }),\n        });\n\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.message || 'Failed to save answer');\n        }\n\n        const data = await response.json();\n        \n        if (data.success) {\n          // Update last saved timestamp\n          setLastSavedTimestamp(new Date());\n        } else {\n          throw new Error(data.message || 'Failed to save answer');\n        }\n      } catch (err) {\n        console.error('Error saving answer:', err);\n        // Still maintain local storage copy\n        setLocalAnswers(prev => ({\n          ...prev,\n          [answer.questionId]: {\n            selectedOptions: answer.selectedOptions,\n            textAnswer: answer.textAnswer,\n            jsonData: answer.jsonData,\n          },\n        }));\n      }\n    }, 500);\n  }, [attemptId, isOnline, setLocalAnswers]);\n\n  // Handle timer countdown\n  useEffect(() => {\n    if (remainingTime === null || remainingTime <= 0 || isSubmitting) return;\n\n    const timer = setInterval(() => {\n      setRemainingTime(prev => {\n        if (prev === null) return null;\n        \n        // Show warning when 5 minutes remaining\n        if (prev === 300 && !showTimeWarning) {\n          setShowTimeWarning(true);\n          toast({\n            title: 'Cảnh báo',\n            description: 'Chỉ còn 5 phút nữa là hết giờ làm bài!',\n            variant: 'destructive',\n          });\n        }\n        \n        // Show warning when 1 minute remaining\n        if (prev === 60) {\n          toast({\n            title: 'Cảnh báo',\n            description: 'Chỉ còn 1 phút nữa là hết giờ làm bài!',\n            variant: 'destructive',\n          });\n        }\n        \n        // Auto-submit when time runs out\n        if (prev <= 1) {\n          submitQuiz('auto');\n          return 0;\n        }\n        \n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [remainingTime, isSubmitting, showTimeWarning]);\n\n  // Handle offline synchronization when coming back online\n  useEffect(() => {\n    if (isOnline && Object.keys(localAnswers).length > 0 && attemptId) {\n      // Try to sync each answer stored locally\n      Object.entries(localAnswers).forEach(([questionId, answerData]) => {\n        const answer: Answer = {\n          questionId,\n          selectedOptions: answerData.selectedOptions || [],\n          textAnswer: answerData.textAnswer || '',\n          jsonData: answerData.jsonData || null,\n        };\n        \n        saveAnswer(answer);\n      });\n      \n      toast({\n        title: 'Đã kết nối lại',\n        description: 'Đã đồng bộ hóa câu trả lời với máy chủ.',\n      });\n    }\n  }, [isOnline, localAnswers, attemptId, saveAnswer]);\n\n  // Update answer when changed by student\n  const handleAnswerChange = useCallback((answer: Answer) => {\n    setAnswers(prev => {\n      const existingIndex = prev.findIndex(a => a.questionId === answer.questionId);\n      \n      if (existingIndex >= 0) {\n        // Update existing answer\n        const updated = [...prev];\n        updated[existingIndex] = answer;\n        return updated;\n      } else {\n        // Add new answer\n        return [...prev, answer];\n      }\n    });\n    \n    // Save answer to server\n    saveAnswer(answer);\n  }, [saveAnswer]);\n\n  // Toggle flag status on a question\n  const handleToggleFlag = useCallback((questionId: string) => {\n    setFlaggedQuestions(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(questionId)) {\n        newSet.delete(questionId);\n      } else {\n        newSet.add(questionId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Navigate to next question\n  const handleNextQuestion = useCallback(() => {\n    if (!quiz) return;\n    \n    setCurrentQuestionIndex(prev => {\n      if (prev < quiz.questions.length - 1) {\n        return prev + 1;\n      }\n      return prev;\n    });\n  }, [quiz]);\n\n  // Navigate to previous question\n  const handlePrevQuestion = useCallback(() => {\n    setCurrentQuestionIndex(prev => {\n      if (prev > 0) {\n        return prev - 1;\n      }\n      return prev;\n    });\n  }, []);\n\n  // Submit quiz\n  const submitQuiz = async (type: 'manual' | 'auto' = 'manual') => {\n    if (!attemptId || isSubmitting) return;\n    \n    try {\n      setIsSubmitting(true);\n      \n      // Try to save any pending answers first\n      await Promise.all(\n        answers.map(answer => \n          fetch(`/api/attempts/${attemptId}/answers`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              questionId: answer.questionId,\n              selectedOption: answer.selectedOptions.length === 1 ? answer.selectedOptions[0] : null,\n              selectedOptions: answer.selectedOptions.length > 1 ? answer.selectedOptions : null,\n              textAnswer: answer.textAnswer || null,\n              jsonData: answer.jsonData || null,\n            }),\n          })\n        )\n      );\n      \n      // Complete the attempt\n      const response = await fetch(`/api/attempts/${attemptId}/complete`, {\n        method: 'POST',\n      });\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to submit quiz');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Clear local storage\n        setLocalAnswers({});\n        \n        toast({\n          title: type === 'auto' ? 'Tự động nộp bài' : 'Nộp bài thành công',\n          description: 'Bài làm của bạn đã được nộp.',\n        });\n        \n        // Redirect to results page\n        router.push(`/dashboard/student/results/${attemptId}`);\n      } else {\n        throw new Error(data.message || 'Failed to submit quiz');\n      }\n    } catch (err) {\n      console.error('Error submitting quiz:', err);\n      toast({\n        title: 'Lỗi',\n        description: (err as Error).message,\n        variant: 'destructive',\n      });\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show confirmation dialog before manually submitting\n  const handleSubmitConfirmation = () => {\n    if (!quiz) return;\n    \n    // Check for unanswered questions\n    const answeredCount = answers.filter(a => \n      a.selectedOptions.length > 0 || a.textAnswer || a.jsonData\n    ).length;\n    \n    const unansweredCount = quiz.questions.length - answeredCount;\n    \n    // Show different content based on answer status\n    setShowSubmitConfirmation(true);\n  };\n\n  // If still loading, show skeleton\n  if (isLoading) {\n    return <QuizTakeSkeleton />;\n  }\n\n  // If error, show error message\n  if (error || !quiz) {\n    return (\n      <div className=\"max-w-screen-xl mx-auto px-4 py-6\">\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>Lỗi</AlertTitle>\n          <AlertDescription>\n            {error || 'Không thể tải bài kiểm tra. Vui lòng thử lại sau.'}\n          </AlertDescription>\n          <Button className=\"mt-4\" onClick={() => router.push('/dashboard/student/quizzes')}>\n            Quay lại danh sách bài kiểm tra\n          </Button>\n        </Alert>\n      </div>\n    );\n  }\n\n  // Get current question\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n\n  // Check if current question has been answered\n  const currentAnswer = answers.find(a => a.questionId === currentQuestion.id);\n\n  return (\n    <div className=\"max-w-screen-xl mx-auto px-4 py-6 space-y-6\">\n      {/* Offline indicator */}\n      {!isOnline && <OfflineIndicator lastSavedTimestamp={lastSavedTimestamp} />}\n\n      {/* Time warning dialog */}\n      <Dialog open={showTimeWarning} onOpenChange={setShowTimeWarning}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle className=\"text-destructive\">Cảnh báo thời gian</DialogTitle>\n            <DialogDescription>\n              Chỉ còn 5 phút nữa là hết giờ làm bài. Hãy kiểm tra lại bài làm của bạn và nộp bài kịp thời!\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button onClick={() => setShowTimeWarning(false)}>Đã hiểu</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Submit confirmation dialog */}\n      <SubmitConfirmation\n        open={showSubmitConfirmation}\n        onOpenChange={setShowSubmitConfirmation}\n        answeredCount={answers.filter(a => a.selectedOptions.length > 0 || a.textAnswer || a.jsonData).length}\n        totalQuestions={quiz.questions.length}\n        onSubmit={() => submitQuiz('manual')}\n      />\n\n      {/* Header section */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">{quiz.title}</h1>\n          {quiz.description && <p className=\"text-muted-foreground\">{quiz.description}</p>}\n        </div>\n        \n        {/* Timer */}\n        <TimeDisplay remainingTime={remainingTime} isSubmitting={isSubmitting} />\n      </div>\n\n      {/* Main quiz content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n        {/* Question area - 2/3 width on larger screens */}\n        <div className=\"lg:col-span-8 space-y-6\">\n          <Card className=\"h-full\">\n            <CardHeader className=\"flex flex-row justify-between items-center space-y-0 pb-2 border-b\">\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"outline\" className=\"text-sm\">\n                  Câu {currentQuestionIndex + 1}/{quiz.questions.length}\n                </Badge>\n                \n                {flaggedQuestions.has(currentQuestion.id) && (\n                  <Badge className=\"bg-yellow-500 text-white\">\n                    <Flag className=\"h-3 w-3 mr-1\" />\n                    Đánh dấu\n                  </Badge>\n                )}\n              </div>\n              \n              <TooltipProvider>\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => handleToggleFlag(currentQuestion.id)}\n                    >\n                      <Flag \n                        className={flaggedQuestions.has(currentQuestion.id) \n                          ? \"h-4 w-4 text-yellow-500\" \n                          : \"h-4 w-4\"\n                        } \n                      />\n                    </Button>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    {flaggedQuestions.has(currentQuestion.id) ? 'Bỏ đánh dấu' : 'Đánh dấu'} câu hỏi này\n                  </TooltipContent>\n                </Tooltip>\n              </TooltipProvider>\n            </CardHeader>\n            \n            <CardContent className=\"pt-6\">\n              <ScrollArea className=\"h-[calc(100vh-350px)]\">\n                <QuestionRenderer\n                  question={currentQuestion}\n                  answer={currentAnswer}\n                  onAnswerChange={handleAnswerChange}\n                />\n              </ScrollArea>\n            </CardContent>\n            \n            <CardFooter className=\"flex justify-between border-t pt-4\">\n              <Button\n                variant=\"outline\"\n                onClick={handlePrevQuestion}\n                disabled={currentQuestionIndex === 0 || isSubmitting}\n              >\n                Câu trước\n              </Button>\n              \n              {currentQuestionIndex === quiz.questions.length - 1 ? (\n                <Button\n                  onClick={handleSubmitConfirmation}\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Đang nộp bài...\n                    </>\n                  ) : (\n                    'Nộp bài'\n                  )}\n                </Button>\n              ) : (\n                <Button\n                  onClick={handleNextQuestion}\n                  disabled={isSubmitting}\n                >\n                  Câu tiếp theo\n                </Button>\n              )}\n            </CardFooter>\n          </Card>\n        </div>\n        \n        {/* Navigation sidebar - 1/3 width on larger screens */}\n        <div className=\"lg:col-span-4\">\n          {/* Show on mobile as a sheet */}\n          <div className=\"block lg:hidden w-full\">\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full\">\n                  Điều hướng câu hỏi\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-full sm:max-w-md\">\n                <SheetHeader>\n                  <SheetTitle>Câu hỏi</SheetTitle>\n                </SheetHeader>\n                <div className=\"py-4\">\n                  <QuestionNavigation\n                    questions={quiz.questions}\n                    answers={answers}\n                    currentQuestionIndex={currentQuestionIndex}\n                    flaggedQuestions={flaggedQuestions}\n                    onQuestionSelect={setCurrentQuestionIndex}\n                    isSubmitting={isSubmitting}\n                  />\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n          \n          {/* Show directly on desktop */}\n          <div className=\"hidden lg:block\">\n            <QuestionNavigation\n              questions={quiz.questions}\n              answers={answers}\n              currentQuestionIndex={currentQuestionIndex}\n              flaggedQuestions={flaggedQuestions}\n              onQuestionSelect={setCurrentQuestionIndex}\n              isSubmitting={isSubmitting}\n            />\n          </div>\n          \n          {/* Submit button at bottom of navigation */}\n          <Button \n            className=\"w-full mt-4\"\n            onClick={handleSubmitConfirmation}\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Đang nộp bài...\n              </>\n            ) : (\n              'Nộp bài'\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Loading skeleton component\nfunction QuizTakeSkeleton() {\n  return (\n    <div className=\"max-w-screen-xl mx-auto px-4 py-6 space-y-6\">\n      {/* Header skeleton */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-64 bg-slate-200 rounded-md animate-pulse\" />\n          <div className=\"h-4 w-96 bg-slate-200 rounded-md animate-pulse\" />\n        </div>\n        <div className=\"h-10 w-32 bg-slate-200 rounded-md animate-pulse\" />\n      </div>\n\n      {/* Main content skeleton */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n        <div className=\"lg:col-span-8\">\n          <div className=\"h-[60vh] bg-slate-200 rounded-lg animate-pulse\" />\n        </div>\n        <div className=\"lg:col-span-4\">\n          <div className=\"h-[50vh] bg-slate-200 rounded-lg animate-pulse\" />\n          <div className=\"h-10 w-full bg-slate-200 rounded-md animate-pulse mt-4\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuizTake; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4053, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/page.tsx"],"sourcesContent":["\"use client\";\n\nimport QuizTake from './quiz-take';\n\ninterface QuizAttemptPageProps {\n  params: {\n    quizId: string;\n  };\n}\n\nexport default function QuizAttemptPage({ params }: QuizAttemptPageProps) {\n  return <QuizTake quizId={params.quizId} />;\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUe,SAAS,gBAAgB,EAAE,MAAM,EAAwB;IACtE,qBAAO,8OAAC,gLAAA,CAAA,UAAQ;QAAC,QAAQ,OAAO,MAAM;;;;;;AACxC","debugId":null}}]
}
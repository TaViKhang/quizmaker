{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2TACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,kKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,gNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;AAGzB,qBAAqB,WAAW,GAAG,kKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;AAG3B,uBAAuB,WAAW,GAChC,kKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE;IACzD,2FAA2F;IAC3F,MAAM,uBAAuB,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EAAE,CAAC;QAC9C,oEAAoE;QACpE,MAAM,cAAc;QAEpB,uEAAuE;QACvE,MAAM,eAAe;IACvB,GAAG,EAAE;IAEL,qBACA,8OAAC,kKAAA,CAAA,SAAsB;kBACrB,cAAA,8OAAC,kKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACR,kBAAkB;YAClB,iBAAiB;YACjB,kBAAkB;YACnB,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,kKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIP;AACA,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAEF,SAAS,CAAC;YACR,0DAA0D;YAC1D,EAAE,eAAe;QACnB;QACC,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,kKAAA,CAAA,gBAA6B;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGrB,8OAAC,kKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG,kKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> & {\n    variant?: \"default\" | \"muted\" | \"accent\" | \"gradient\"\n  }\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, variant = \"default\", ...props },\n    ref\n  ) => {\n    const variantClasses = {\n      default: \"bg-border\",\n      muted: \"bg-muted\",\n      accent: \"bg-accent/30\",\n      gradient: \"bg-gradient-to-r from-transparent via-border/70 to-transparent\"\n    }\n\n    return (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n          \"shrink-0\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n          variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  )\n  }\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAM/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAC3F;IAEA,MAAM,iBAAiB;QACrB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IAEA,qBACA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,YACF,gBAAgB,eAAe,mBAAmB,kBAChD,cAAc,CAAC,QAAQ,EACzB;QAED,GAAG,KAAK;;;;;;AAGb;AAEF,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/components/EssayGrading.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport RichTextEditor from \"@/components/ui/rich-text-editor\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { toast } from \"sonner\";\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { AlertCircle, Copy, BookOpen, RotateCcw, Star, Sparkles } from \"lucide-react\";\r\n\r\ntype ScoreByLevel = {\r\n  [criterionId: string]: string; // Level ID selected for each criterion\r\n};\r\n\r\ninterface RubricLevel {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  points: number;\r\n}\r\n\r\ninterface EssayGradingProps {\r\n  quizId: string;\r\n  attemptId: string;\r\n  answerId: string;\r\n  questionContent: string;\r\n  studentAnswer: string;\r\n  questionPoints: number;\r\n  existingScore?: number | null;\r\n  existingFeedback?: string | null;\r\n  rubric?: RubricCriterion[];\r\n  onSaveGrade: (score: number, feedback: string) => Promise<void>;\r\n  isRichText?: boolean;\r\n}\r\n\r\nexport function EssayGrading({\r\n  quizId,\r\n  attemptId,\r\n  answerId,\r\n  questionContent,\r\n  studentAnswer,\r\n  questionPoints,\r\n  existingScore,\r\n  existingFeedback = \"\",\r\n  rubric = [],\r\n  onSaveGrade,\r\n  isRichText = false\r\n}: EssayGradingProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [feedback, setFeedback] = useState(existingFeedback || \"\");\r\n  const [score, setScore] = useState<number>(existingScore || 0);\r\n  const [selectedLevels, setSelectedLevels] = useState<ScoreByLevel>({});\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [activeTab, setActiveTab] = useState(rubric.length > 0 ? \"rubric\" : \"manual\");\r\n\r\n  // Count words in student answer\r\n  useEffect(() => {\r\n    if (studentAnswer) {\r\n      // Strip HTML tags if richText is true\r\n      const textOnly = isRichText \r\n        ? studentAnswer.replace(/<[^>]*>/g, ' ') \r\n        : studentAnswer;\r\n      \r\n      const words = textOnly.trim().split(/\\s+/);\r\n      setWordCount(words.length);\r\n    } else {\r\n      setWordCount(0);\r\n    }\r\n  }, [studentAnswer, isRichText]);\r\n\r\n  // Update score when a rubric level is selected\r\n  useEffect(() => {\r\n    if (rubric.length > 0 && Object.keys(selectedLevels).length > 0) {\r\n      let calculatedScore = 0;\r\n      \r\n      rubric.forEach(criterion => {\r\n        const selectedLevelId = selectedLevels[criterion.id];\r\n        if (selectedLevelId) {\r\n          const level = criterion.levels.find(l => l.id === selectedLevelId);\r\n          if (level) {\r\n            calculatedScore += level.points;\r\n          }\r\n        }\r\n      });\r\n      \r\n      setScore(calculatedScore);\r\n    }\r\n  }, [selectedLevels, rubric]);\r\n\r\n  const handleLevelSelect = (criterionId: string, levelId: string) => {\r\n    setSelectedLevels(prev => ({\r\n      ...prev,\r\n      [criterionId]: levelId\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await onSaveGrade(score, feedback);\r\n      toast({\r\n        title: \"Grade saved\",\r\n        description: \"The essay has been graded successfully.\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error saving grade:\", error);\r\n      toast({\r\n        title: \"Error saving grade\",\r\n        description: \"There was a problem saving the grade. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold\">Essay Grading</h2>\r\n          <p className=\"text-muted-foreground\">\r\n            Grade the student's essay response and provide feedback\r\n          </p>\r\n        </div>\r\n        <Button onClick={handleSave} disabled={isLoading}>\r\n          {isLoading ? (\r\n            <>Saving...</>\r\n          ) : (\r\n            <>\r\n              <Save className=\"h-4 w-4 mr-2\" />\r\n              Save Grade\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Left column: Question and Answer */}\r\n        <div className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-3\">\r\n              <CardTitle className=\"text-lg\">Question</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div \r\n                className=\"prose prose-sm dark:prose-invert max-w-none\"\r\n                dangerouslySetInnerHTML={{ __html: questionContent }}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"pb-3\">\r\n              <CardTitle className=\"flex justify-between items-center\">\r\n                <span className=\"text-lg\">Student Answer</span>\r\n                <Badge variant=\"outline\">{wordCount} words</Badge>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isRichText ? (\r\n                <div \r\n                  className=\"prose prose-sm dark:prose-invert max-w-none\"\r\n                  dangerouslySetInnerHTML={{ __html: studentAnswer }}\r\n                />\r\n              ) : (\r\n                <div className=\"whitespace-pre-wrap\">{studentAnswer}</div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Right column: Grading */}\r\n        <div className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-3\">\r\n              <CardTitle className=\"text-lg\">Grading</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n                <TabsList className=\"grid w-full grid-cols-2\">\r\n                  {rubric.length > 0 && (\r\n                    <TabsTrigger value=\"rubric\">Rubric Grading</TabsTrigger>\r\n                  )}\r\n                  <TabsTrigger value=\"manual\">Manual Grading</TabsTrigger>\r\n                </TabsList>\r\n\r\n                {rubric.length > 0 && (\r\n                  <TabsContent value=\"rubric\" className=\"space-y-4 pt-4\">\r\n                    {rubric.map((criterion) => (\r\n                      <div key={criterion.id} className=\"space-y-2 pt-2\">\r\n                        <div className=\"font-medium\">{criterion.name} ({criterion.pointsAvailable} points)</div>\r\n                        {criterion.description && (\r\n                          <p className=\"text-sm text-muted-foreground mb-2\">{criterion.description}</p>\r\n                        )}\r\n                        \r\n                        <div className=\"grid gap-2\">\r\n                          {criterion.levels.map((level) => (\r\n                            <div \r\n                              key={level.id}\r\n                              className={`\r\n                                p-3 rounded-md border cursor-pointer\r\n                                ${selectedLevels[criterion.id] === level.id ? \r\n                                  'border-primary bg-primary/5' : \r\n                                  'hover:border-primary/50'\r\n                                }\r\n                              `}\r\n                              onClick={() => handleLevelSelect(criterion.id, level.id)}\r\n                            >\r\n                              <div className=\"flex justify-between\">\r\n                                <div className=\"font-medium\">{level.name}</div>\r\n                                <div>{level.points} points</div>\r\n                              </div>\r\n                              {level.description && (\r\n                                <p className=\"text-sm mt-1\">{level.description}</p>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <Separator className=\"my-4\" />\r\n                      </div>\r\n                    ))}\r\n                  </TabsContent>\r\n                )}\r\n\r\n                <TabsContent value=\"manual\" className=\"space-y-4 pt-4\">\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <div className=\"flex justify-between mb-2\">\r\n                        <label className=\"font-medium\">Score</label>\r\n                        <span>{score} / {questionPoints}</span>\r\n                      </div>\r\n                      <Slider\r\n                        value={[score]}\r\n                        max={questionPoints}\r\n                        step={0.5}\r\n                        onValueChange={(values) => setScore(values[0])}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </TabsContent>\r\n              </Tabs>\r\n              \r\n              <div className=\"mt-6 space-y-2\">\r\n                <label className=\"font-medium\">Feedback</label>\r\n                <RichTextEditor\r\n                  content={feedback}\r\n                  onChange={setFeedback}\r\n                  placeholder=\"Enter feedback for the student...\"\r\n                  minHeight=\"150px\"\r\n                />\r\n                <div className=\"flex items-start gap-2 mt-2\">\r\n                  <AlertCircle className=\"h-4 w-4 text-muted-foreground mt-0.5\" />\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Provide specific feedback on strengths and areas for improvement\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Function to request AI assistance\r\nconst requestAIAssistance = async ({\r\n  quizId, \r\n  questionId,\r\n  questionContent,\r\n  studentAnswer,\r\n  questionPoints,\r\n  rubricCriteria\r\n}: {\r\n  quizId: string;\r\n  questionId: string;\r\n  questionContent: string;\r\n  studentAnswer: string;\r\n  questionPoints: number;\r\n  rubricCriteria?: any[];\r\n}) => {\r\n  try {\r\n    const response = await fetch(`/api/teacher/quizzes/${quizId}/ai-assist`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        questionId,\r\n        questionContent,\r\n        studentAnswer,\r\n        questionType: \"ESSAY\",\r\n        maxPoints: questionPoints,\r\n        rubricCriteria,\r\n      }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error getting AI assistance:\", error);\r\n    throw error;\r\n  }\r\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,8OAAC,kKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,8OAAC,kKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,8OAAC,kKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,8OAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,8OAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1209, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1277, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/components/CodeGrading.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Slider } from \"@/components/ui/slider\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Save, Play, Check, X, Code, Terminal } from \"lucide-react\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport RichTextEditor from \"@/components/ui/rich-text-editor\";\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { AlertCircle, Copy, RotateCcw, Star } from \"lucide-react\";\r\nimport { Editor } from \"@monaco-editor/react\";\r\n\r\ninterface TestCase {\r\n  input: string;\r\n  output: string;\r\n  hidden?: boolean;\r\n  result?: {\r\n    passed: boolean;\r\n    actual?: string;\r\n    expected?: string;\r\n  };\r\n}\r\n\r\ninterface CodeGradingProps {\r\n  quizId: string;\r\n  attemptId: string;\r\n  answerId: string;\r\n  questionContent: string;\r\n  studentCode: string;\r\n  questionPoints: number;\r\n  existingScore?: number | null;\r\n  existingFeedback?: string | null;\r\n  language?: string;\r\n  testCases?: TestCase[];\r\n  solutionCode?: string;\r\n  onSaveGrade: (score: number, feedback: string) => Promise<void>;\r\n}\r\n\r\n// Define feedback templates for code questions\r\nconst feedbackTemplates = [\r\n  {\r\n    type: \"Excellent Implementation\",\r\n    color: \"bg-green-100 text-green-800\",\r\n    icon: <Star className=\"w-4 h-4\" />,\r\n    feedback: \"Excellent code implementation! Your solution is efficient, well-structured, and follows best practices. The code is clean, readable, and properly documented. Your approach demonstrates a strong understanding of the concepts.\"\r\n  },\r\n  {\r\n    type: \"Good Implementation\",\r\n    color: \"bg-blue-100 text-blue-800\",\r\n    icon: <Code className=\"w-4 h-4\" />,\r\n    feedback: \"Good implementation overall. Your solution works correctly for the given requirements. Consider improving code readability with better variable names and adding more comments to explain your approach. There are some minor optimizations that could make the code more efficient.\"\r\n  },\r\n  {\r\n    type: \"Needs Improvement\",\r\n    color: \"bg-yellow-100 text-yellow-800\",\r\n    icon: <AlertCircle className=\"w-4 h-4\" />,\r\n    feedback: \"Your code addresses the basic requirements but needs improvement. There are some logical errors or edge cases not handled properly. Consider reviewing your algorithm and testing with different inputs. Work on code organization and following standard conventions.\"\r\n  },\r\n  {\r\n    type: \"Significant Issues\",\r\n    color: \"bg-red-100 text-red-800\",\r\n    icon: <AlertCircle className=\"w-4 h-4\" />,\r\n    feedback: \"This implementation has significant issues that need to be addressed. The code contains major logical errors or doesn't meet the core requirements. Review the fundamental concepts and requirements of the problem. Consider starting with a clearer algorithm before implementation.\"\r\n  }\r\n];\r\n\r\n// Define rubric criteria for code questions if not provided\r\nconst defaultCodeRubricCriteria = [\r\n  {\r\n    id: \"functionality\",\r\n    name: \"Functionality\",\r\n    description: \"Does the code work correctly and meet all requirements?\",\r\n    levels: [\r\n      { id: \"func_1\", name: \"Incomplete\", description: \"Code fails to compile or doesn't work at all\", points: 0 },\r\n      { id: \"func_2\", name: \"Partial\", description: \"Works for some cases but has significant issues\", points: 3 },\r\n      { id: \"func_3\", name: \"Satisfactory\", description: \"Works for most cases with minor issues\", points: 7 },\r\n      { id: \"func_4\", name: \"Excellent\", description: \"Works correctly for all required cases\", points: 10 }\r\n    ]\r\n  },\r\n  {\r\n    id: \"design\",\r\n    name: \"Code Design\",\r\n    description: \"How well-structured, efficient, and maintainable is the code?\",\r\n    levels: [\r\n      { id: \"design_1\", name: \"Poor\", description: \"Poorly structured with serious efficiency issues\", points: 0 },\r\n      { id: \"design_2\", name: \"Basic\", description: \"Simple structure but inefficient or hard to maintain\", points: 2 },\r\n      { id: \"design_3\", name: \"Good\", description: \"Well-structured with reasonable efficiency\", points: 4 },\r\n      { id: \"design_4\", name: \"Excellent\", description: \"Elegant design with optimal efficiency\", points: 5 }\r\n    ]\r\n  },\r\n  {\r\n    id: \"readability\",\r\n    name: \"Readability & Style\",\r\n    description: \"How readable, documented and consistent is the code?\",\r\n    levels: [\r\n      { id: \"read_1\", name: \"Poor\", description: \"Difficult to read with no documentation\", points: 0 },\r\n      { id: \"read_2\", name: \"Basic\", description: \"Somewhat readable but lacks proper documentation\", points: 2 },\r\n      { id: \"read_3\", name: \"Good\", description: \"Readable with adequate documentation\", points: 3 },\r\n      { id: \"read_4\", name: \"Excellent\", description: \"Highly readable with excellent documentation\", points: 5 }\r\n    ]\r\n  }\r\n];\r\n\r\ntype ScoreByLevel = {\r\n  [criterionId: string]: string; // Maps criterion ID to selected level ID\r\n};\r\n\r\ntype RubricLevel = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  points: number;\r\n};\r\n\r\ntype RubricCriterion = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  levels: RubricLevel[];\r\n};\r\n\r\nexport function CodeGrading({\r\n  quizId,\r\n  attemptId,\r\n  answerId,\r\n  questionContent,\r\n  studentCode,\r\n  questionPoints,\r\n  existingScore,\r\n  existingFeedback = \"\",\r\n  language = \"javascript\",\r\n  testCases = [],\r\n  solutionCode = \"\",\r\n  onSaveGrade\r\n}: CodeGradingProps) {\r\n  const { toast } = useToast();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRunningCode, setIsRunningCode] = useState(false);\r\n  const [feedback, setFeedback] = useState(existingFeedback || \"\");\r\n  const [score, setScore] = useState<number>(existingScore || 0);\r\n  const [testResults, setTestResults] = useState<TestCase[]>(testCases);\r\n  const [manualScore, setManualScore] = useState(existingScore || Math.floor(questionPoints / 2));\r\n  const [codeOutput, setCodeOutput] = useState<string>(\"\");\r\n  const [autoGradeEnabled, setAutoGradeEnabled] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(\"code\");\r\n  const [runResult, setRunResult] = useState(\"\");\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  \r\n  // Add state for similar answers\r\n  const [similarAnswers, setSimilarAnswers] = useState<any[]>([]);\r\n  const [isLoadingSimilar, setIsLoadingSimilar] = useState(false);\r\n\r\n  // If no rubric criteria are provided, use the default ones\r\n  const actualRubricCriteria = defaultCodeRubricCriteria;\r\n\r\n  // Automatically calculate score based on test case results when autoGradeEnabled\r\n  useEffect(() => {\r\n    if (autoGradeEnabled && testResults.some(test => test.result)) {\r\n      const passedTests = testResults.filter(test => test.result?.passed).length;\r\n      const totalTests = testResults.length;\r\n      \r\n      if (totalTests > 0) {\r\n        const calculatedScore = Math.round((passedTests / totalTests) * questionPoints);\r\n        setScore(calculatedScore);\r\n      }\r\n    } else {\r\n      setScore(manualScore);\r\n    }\r\n  }, [testResults, questionPoints, autoGradeEnabled, manualScore]);\r\n\r\n  // Run the student code against test cases\r\n  const runCode = async () => {\r\n    setIsRunningCode(true);\r\n    setCodeOutput(\"\");\r\n    \r\n    try {\r\n      // In a real implementation, this would call an API endpoint that can run the code safely\r\n      const response = await fetch(\"/api/code-runner\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          code: studentCode,\r\n          language,\r\n          testCases\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to run code\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      setTestResults(data.testResults);\r\n      setCodeOutput(data.output || \"Code execution completed\");\r\n      \r\n      toast({\r\n        title: \"Code execution completed\",\r\n        description: `${data.testResults.filter((t: TestCase) => t.result?.passed).length}/${data.testResults.length} tests passed`,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error running code:\", error);\r\n      setCodeOutput(\"Error running code. This could be due to syntax errors or execution timeout.\");\r\n      \r\n      toast({\r\n        title: \"Error running code\",\r\n        description: \"There was a problem executing the code\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsRunningCode(false);\r\n    }\r\n  };\r\n\r\n  // Function to load similar code answers\r\n  const loadSimilarAnswers = async () => {\r\n    setIsLoadingSimilar(true);\r\n    try {\r\n      const response = await fetch(`/api/teacher/quizzes/${quizId}/similar-answers?questionId=${questionContent}`);\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setSimilarAnswers(data.answers);\r\n        toast.success(\"Reference answers loaded successfully\");\r\n      } else {\r\n        toast.error(data.message || \"Failed to load reference answers\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading similar answers:\", error);\r\n      toast.error(\"Error loading reference answers\");\r\n    } finally {\r\n      setIsLoadingSimilar(false);\r\n    }\r\n  };\r\n\r\n  // Function to apply a feedback template\r\n  const applyTemplate = (templateText: string) => {\r\n    setFeedback(prev => {\r\n      if (prev && prev.trim().length > 0) {\r\n        return `${prev}\\n\\n${templateText}`;\r\n      }\r\n      return templateText;\r\n    });\r\n    toast.success(\"Feedback template applied\");\r\n  };\r\n\r\n  // Function to handle level selection for a criterion\r\n  const handleLevelSelect = (criterionId: string, levelId: string) => {\r\n    // Implementation of handleLevelSelect\r\n  };\r\n\r\n  // Function to run student code (simulated here)\r\n  const runStudentCode = async () => {\r\n    setIsRunning(true);\r\n    setRunResult(\"\");\r\n    try {\r\n      // For demonstration purposes, we just simulate a code execution\r\n      // In a real application, you would send the code to a secure execution environment\r\n      // or use a service like Judge0, AWS Lambda, or similar\r\n      \r\n      await new Promise((resolve) => setTimeout(resolve, 2000)); // Simulating execution time\r\n      \r\n      // Example logic to determine the result\r\n      const hasExpectedOutput = testCases.some(test => test.output && test.output.trim().length > 0);\r\n      \r\n      if (studentCode && studentCode.trim().length > 0) {\r\n        if (hasExpectedOutput) {\r\n          setRunResult(`Program executed.\\n\\nOutput:\\n${studentCode.includes(\"console.log\") || studentCode.includes(\"print\") ? \"Hello, world!\" : \"No output\"}\\n\\n${testCases.some(test => test.output && test.output.trim().length > 0 && test.output !== \"Hello, world!\") ? \"❌ Output does not match expected result.\" : \"✅ Output matches expected result.\"}`);\r\n        } else {\r\n          setRunResult(\"Program executed successfully. No expected output was provided for comparison.\");\r\n        }\r\n      } else {\r\n        setRunResult(\"No code to execute.\");\r\n      }\r\n      \r\n      toast.success(\"Code execution completed\");\r\n    } catch (error) {\r\n      console.error(\"Error running code:\", error);\r\n      setRunResult(\"Error executing code. Check for syntax errors or invalid operations.\");\r\n      toast.error(\"Error running student code\");\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Calculate score based on selected rubric levels\r\n  useEffect(() => {\r\n    if (activeTab === \"rubric\" && Object.keys(selectedLevels).length > 0) {\r\n      let calculatedScore = 0;\r\n      let totalCriteriaPoints = 0;\r\n      \r\n      actualRubricCriteria.forEach(criterion => {\r\n        const selectedLevelId = selectedLevels[criterion.id];\r\n        if (selectedLevelId) {\r\n          const selectedLevel = criterion.levels.find(level => level.id === selectedLevelId);\r\n          if (selectedLevel) {\r\n            calculatedScore += selectedLevel.points;\r\n          }\r\n        }\r\n        \r\n        // Calculate maximum possible points for this criterion\r\n        const maxCriterionPoints = Math.max(...criterion.levels.map(level => level.points));\r\n        totalCriteriaPoints += maxCriterionPoints;\r\n      });\r\n      \r\n      // Scale the score to match the question's point value\r\n      const scaledScore = (calculatedScore / totalCriteriaPoints) * questionPoints;\r\n      setScore(Math.round(scaledScore * 10) / 10); // Round to 1 decimal place\r\n    }\r\n  }, [selectedLevels, actualRubricCriteria, questionPoints, activeTab]);\r\n\r\n  // Function to save the grade\r\n  const handleSave = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await onSaveGrade(score, feedback);\r\n      toast({\r\n        title: \"Grade saved\",\r\n        description: \"The code submission has been graded successfully.\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error saving grade:\", error);\r\n      toast({\r\n        title: \"Error saving grade\",\r\n        description: \"There was a problem saving the grade. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold\">Code Grading</h2>\r\n          <p className=\"text-muted-foreground\">\r\n            Grade the student's code submission and provide feedback\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button onClick={runStudentCode} variant=\"secondary\" disabled={isRunning}>\r\n            {isRunning ? (\r\n              <>Running...</>\r\n            ) : (\r\n              <>\r\n                <Play className=\"h-4 w-4 mr-2\" />\r\n                Run Code\r\n              </>\r\n            )}\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={isLoading}>\r\n            {isLoading ? (\r\n              <>Saving...</>\r\n            ) : (\r\n              <>\r\n                <Save className=\"h-4 w-4 mr-2\" />\r\n                Save Grade\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"code\">\r\n            <Code className=\"h-4 w-4 mr-2\" />\r\n            Student Code\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tests\">\r\n            <Terminal className=\"h-4 w-4 mr-2\" />\r\n            Test Cases\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"solution\">Solution</TabsTrigger>\r\n          <TabsTrigger value=\"grading\">Grading</TabsTrigger>\r\n        </TabsList>\r\n        \r\n        <TabsContent value=\"code\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-3\">\r\n              <div className=\"flex justify-between\">\r\n                <CardTitle className=\"text-lg\">Question</CardTitle>\r\n                <Badge>{language}</Badge>\r\n              </div>\r\n              <div \r\n                className=\"prose prose-sm dark:prose-invert max-w-none\"\r\n                dangerouslySetInnerHTML={{ __html: questionContent }}\r\n              />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-[400px] w-full rounded-md border\">\r\n                <pre className=\"p-4 text-sm font-mono\">{studentCode}</pre>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"tests\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">Test Results</CardTitle>\r\n              <CardDescription>\r\n                Run the code to see test results. {testCases.length} test case(s) available.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              {codeOutput && (\r\n                <Alert className={testResults.every(t => t.result?.passed) ? \"border-green-500\" : \"border-red-500\"}>\r\n                  <Terminal className=\"h-4 w-4\" />\r\n                  <AlertTitle>Code Execution Output</AlertTitle>\r\n                  <AlertDescription>\r\n                    <pre className=\"mt-2 whitespace-pre-wrap text-sm\">{codeOutput}</pre>\r\n                  </AlertDescription>\r\n                </Alert>\r\n              )}\r\n              \r\n              <div className=\"space-y-3\">\r\n                {testResults.map((testCase, index) => (\r\n                  <Card key={index} className=\"overflow-hidden\">\r\n                    <CardHeader className={`py-2 px-4 ${\r\n                      testCase.result \r\n                        ? testCase.result.passed \r\n                          ? \"bg-green-50 dark:bg-green-950\" \r\n                          : \"bg-red-50 dark:bg-red-950\"\r\n                        : \"\"\r\n                    }`}>\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <h3 className=\"font-medium text-sm\">Test Case {index + 1} {testCase.hidden && \"(Hidden)\"}</h3>\r\n                        {testCase.result && (\r\n                          <Badge \r\n                            variant={testCase.result.passed ? \"default\" : \"destructive\"}\r\n                            className=\"ml-auto\"\r\n                          >\r\n                            {testCase.result.passed ? (\r\n                              <><Check className=\"h-3 w-3 mr-1\" /> Passed</>\r\n                            ) : (\r\n                              <><X className=\"h-3 w-3 mr-1\" /> Failed</>\r\n                            )}\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    </CardHeader>\r\n                    <CardContent className=\"py-3 px-4\">\r\n                      <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                        <div>\r\n                          <p className=\"font-medium text-xs text-muted-foreground mb-1\">Input:</p>\r\n                          <pre className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">{testCase.input}</pre>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"font-medium text-xs text-muted-foreground mb-1\">Expected Output:</p>\r\n                          <pre className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">{testCase.output}</pre>\r\n                        </div>\r\n                        {testCase.result && testCase.result.actual && (\r\n                          <div className=\"col-span-2\">\r\n                            <p className=\"font-medium text-xs text-muted-foreground mb-1\">Actual Output:</p>\r\n                            <pre className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">{testCase.result.actual}</pre>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"solution\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">Solution Code</CardTitle>\r\n              <CardDescription>\r\n                Sample solution for reference. This is not shown to students.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-[400px] w-full rounded-md border\">\r\n                <pre className=\"p-4 text-sm font-mono\">{solutionCode || \"No solution code provided.\"}</pre>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"grading\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">Grade Assignment</CardTitle>\r\n              <CardDescription>\r\n                Assign a grade and provide feedback for this submission\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <Label htmlFor=\"auto-grade\">Auto-grade based on test results</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Score will be calculated based on passed test cases\r\n                    </p>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"auto-grade\"\r\n                    checked={autoGradeEnabled}\r\n                    onCheckedChange={setAutoGradeEnabled}\r\n                  />\r\n                </div>\r\n                <Separator className=\"my-4\" />\r\n              </div>\r\n              \r\n              {!autoGradeEnabled && (\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label htmlFor=\"manual-score\">Manual Score</Label>\r\n                    <span className=\"font-medium\">{manualScore} / {questionPoints}</span>\r\n                  </div>\r\n                  <Slider\r\n                    id=\"manual-score\"\r\n                    min={0}\r\n                    max={questionPoints}\r\n                    step={1}\r\n                    value={[manualScore]}\r\n                    onValueChange={(value) => {\r\n                      setManualScore(value[0]);\r\n                      setScore(value[0]);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"feedback\">Feedback</Label>\r\n                <Textarea\r\n                  id=\"feedback\"\r\n                  placeholder=\"Provide feedback to the student...\"\r\n                  value={feedback}\r\n                  onChange={(e) => setFeedback(e.target.value)}\r\n                  className=\"min-h-[150px]\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-between bg-muted p-4 rounded-md\">\r\n                <span>Final Score:</span>\r\n                <Badge variant=\"outline\" className=\"text-lg\">\r\n                  {score} / {questionPoints} points\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2436, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/GradingPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { EssayGrading } from \"./components/EssayGrading\";\nimport { CodeGrading } from \"./components/CodeGrading\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { ChevronLeft, ChevronRight, CheckCircle, AlertCircle, Timer, Code, FileText } from \"lucide-react\";\nimport { QuestionType } from \"@prisma/client\";\n\ninterface Student {\n  id: string;\n  name: string | null;\n  email: string | null;\n}\n\ninterface Answer {\n  id: string;\n  questionId: string;\n  textAnswer: string | null;\n  score: number | null;\n  feedback: string | null;\n  question: {\n    id: string;\n    content: string;\n    points: number;\n    type: string;\n    metadata: any;\n  };\n}\n\ninterface Attempt {\n  id: string;\n  startedAt: Date;\n  completedAt: Date | null;\n  score: number | null;\n  user: Student;\n  answers: Answer[];\n}\n\ninterface Question {\n  id: string;\n  content: string;\n  points: number;\n  type: string;\n  metadata: any;\n}\n\ninterface GradingPanelProps {\n  quizId: string;\n  quizTitle: string;\n  questions: Question[];\n  attempts: Attempt[];\n  selectedAttempt: Attempt | undefined;\n}\n\nexport function GradingPanel({ \n  quizId, \n  quizTitle,\n  questions,\n  attempts,\n  selectedAttempt,\n}: GradingPanelProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [currentAttempt, setCurrentAttempt] = useState<Attempt | undefined>(selectedAttempt);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Helper to get need-grading status\n  const needsGrading = (attempt: Attempt) => \n    attempt.answers.some(answer => answer.score === null);\n  \n  // Get attempts that need grading\n  const attemptsNeedingGrading = attempts.filter(needsGrading);\n  const attemptFullyGraded = currentAttempt ? !needsGrading(currentAttempt) : false;\n  \n  // Determine the current question/answer being graded\n  const currentQuestion = currentAttempt?.answers[currentQuestionIndex]?.question;\n  const currentAnswer = currentAttempt?.answers[currentQuestionIndex];\n  \n  // Handle attempt selection\n  const handleAttemptSelect = (attemptId: string) => {\n    const attempt = attempts.find(a => a.id === attemptId);\n    setCurrentAttempt(attempt);\n    setCurrentQuestionIndex(0);\n    router.push(`/dashboard/teacher/quizzes/${quizId}/grading?attemptId=${attemptId}`);\n  };\n  \n  // Navigate to previous or next question\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  \n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < (currentAttempt?.answers.length || 0) - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  \n  // Save grade for the current answer\n  const handleSaveGrade = async (score: number, feedback: string) => {\n    if (!currentAnswer) return;\n    \n    setIsSaving(true);\n    \n    try {\n      const response = await fetch(\"/api/teacher/grading\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          answerId: currentAnswer.id,\n          score,\n          feedback,\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to save grade\");\n      }\n      \n      // Update local state with the new grade\n      if (currentAttempt) {\n        const updatedAnswers = [...currentAttempt.answers];\n        updatedAnswers[currentQuestionIndex] = {\n          ...updatedAnswers[currentQuestionIndex],\n          score,\n          feedback,\n        };\n        \n        setCurrentAttempt({\n          ...currentAttempt,\n          answers: updatedAnswers,\n        });\n      }\n      \n      toast({\n        title: \"Grade saved\",\n        description: \"The grade has been saved successfully.\",\n      });\n      \n      // Go to the next question if there is one\n      if (currentQuestionIndex < (currentAttempt?.answers.length || 0) - 1) {\n        goToNextQuestion();\n      } else {\n        // Refresh the page to get updated data\n        router.refresh();\n      }\n    } catch (error) {\n      console.error(\"Error saving grade:\", error);\n      toast({\n        title: \"Error saving grade\",\n        description: \"There was a problem saving the grade. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Format date for display\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  // Get the correct grading component based on question type\n  const renderGradingComponent = () => {\n    if (!currentAttempt || !currentQuestion) return null;\n\n    const questionContent = currentQuestion.content;\n    const questionId = currentQuestion.id;\n    const questionPoints = currentQuestion.points;\n    const questionType = currentQuestion.type;\n\n    const answer = currentAttempt.answers.find(\n      (a) => a.questionId === questionId\n    );\n    if (!answer) return null;\n\n    const answerId = answer.id;\n    const studentAnswer = answer.textAnswer ?? \"\";\n    const existingScore = answer.score ?? 0;\n    const existingFeedback = answer.feedback ?? \"\";\n\n    if (questionType === \"ESSAY\") {\n      return (\n        <EssayGrading\n          quizId={quizId}\n          attemptId={currentAttempt.id}\n          answerId={answerId}\n          question={currentQuestion}\n          studentAnswer={studentAnswer}\n          questionPoints={questionPoints}\n          existingScore={existingScore}\n          existingFeedback={existingFeedback}\n          onSaveGrade={handleSaveGrade}\n        />\n      );\n    } else if (questionType === \"CODE\") {\n      // Get code-specific properties from the question\n      const codeLanguage = currentQuestion.codeLanguage || \"javascript\";\n      const expectedOutput = currentQuestion.expectedOutput || \"\";\n      const startingCode = currentQuestion.startingCode || \"\";\n      \n      return (\n        <CodeGrading\n          quizId={quizId}\n          attemptId={currentAttempt.id}\n          answerId={answerId}\n          question={{\n            id: questionId,\n            content: questionContent,\n            codeLanguage: codeLanguage,\n            expectedOutput: expectedOutput,\n            startingCode: startingCode\n          }}\n          studentAnswer={studentAnswer}\n          questionPoints={questionPoints}\n          existingScore={existingScore}\n          existingFeedback={existingFeedback}\n          onSaveGrade={handleSaveGrade}\n        />\n      );\n    }\n\n    return (\n      <div className=\"p-4 text-center\">\n        <p>Grading not available for this question type.</p>\n        <p className=\"text-sm text-muted-foreground mt-2\">\n          Only essay and code questions require manual grading.\n        </p>\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* Left sidebar: Attempts list */}\n        <Card className=\"w-full lg:w-80 h-fit\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              Student Submissions ({attemptsNeedingGrading.length} need grading)\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <div className=\"divide-y\">\n              {attempts.length === 0 ? (\n                <div className=\"px-6 py-4 text-center text-muted-foreground\">\n                  No submissions yet\n                </div>\n              ) : (\n                attempts.map((attempt) => (\n                  <div \n                    key={attempt.id}\n                    className={`\n                      px-6 py-4 hover:bg-slate-50 cursor-pointer\n                      ${currentAttempt?.id === attempt.id ? \"bg-slate-50\" : \"\"}\n                    `}\n                    onClick={() => handleAttemptSelect(attempt.id)}\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <p className=\"font-medium\">{attempt.user.name || \"Anonymous\"}</p>\n                        <p className=\"text-sm text-muted-foreground\">{attempt.user.email}</p>\n                      </div>\n                      {needsGrading(attempt) ? (\n                        <Badge variant=\"secondary\">Needs Grading</Badge>\n                      ) : (\n                        <Badge variant=\"outline\" className=\"bg-green-50 text-green-700\">\n                          <CheckCircle className=\"h-3 w-3 mr-1\" />\n                          Graded\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    <div className=\"mt-2 flex items-center gap-2 text-sm text-muted-foreground\">\n                      <Timer className=\"h-3 w-3\" />\n                      <span>Submitted: {formatDate(attempt.startedAt)}</span>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Main content: Grading area */}\n        <div className=\"flex-1\">\n          {!currentAttempt ? (\n            <Card className=\"h-[600px] flex items-center justify-center\">\n              <div className=\"text-center p-6\">\n                <AlertCircle className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium\">No submission selected</h3>\n                <p className=\"text-muted-foreground mt-1\">\n                  Select a student submission from the list to start grading\n                </p>\n              </div>\n            </Card>\n          ) : (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-2xl font-bold\">\n                    {currentAttempt.user.name || \"Anonymous\"}\n                  </h2>\n                  <p className=\"text-muted-foreground\">\n                    {currentAttempt.answers.length} question(s) to grade • \n                    Submitted {formatDate(currentAttempt.startedAt)}\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center gap-3\">\n                  <Button\n                    variant=\"outline\" \n                    size=\"sm\"\n                    onClick={goToPreviousQuestion}\n                    disabled={currentQuestionIndex === 0}\n                  >\n                    <ChevronLeft className=\"h-4 w-4 mr-2\" />\n                    Previous\n                  </Button>\n                  \n                  <Select \n                    value={currentQuestionIndex.toString()} \n                    onValueChange={(value) => setCurrentQuestionIndex(parseInt(value))}\n                  >\n                    <SelectTrigger className=\"w-[180px]\">\n                      <SelectValue placeholder=\"Select question\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {currentAttempt.answers.map((answer, index) => (\n                        <SelectItem key={answer.id} value={index.toString()}>\n                          <div className=\"flex items-center\">\n                            <div className=\"mr-2\">\n                              {answer.question.type === QuestionType.ESSAY && <FileText className=\"h-4 w-4\" />}\n                              {answer.question.type === QuestionType.CODE && <Code className=\"h-4 w-4\" />}\n                            </div>\n                            Question {index + 1} \n                            {answer.score !== null && \" ✓\"}\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  \n                  <Button\n                    variant=\"outline\" \n                    size=\"sm\"\n                    onClick={goToNextQuestion}\n                    disabled={currentQuestionIndex === currentAttempt.answers.length - 1}\n                  >\n                    Next\n                    <ChevronRight className=\"h-4 w-4 ml-2\" />\n                  </Button>\n                </div>\n              </div>\n              \n              <Separator />\n              \n              {renderGradingComponent()}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
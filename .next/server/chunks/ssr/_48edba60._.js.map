{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/students/StudentManagementClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StudentManagementClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call StudentManagementClient() from the server but StudentManagementClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/students/StudentManagementClient.tsx <module evaluation>\",\n    \"StudentManagementClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,4FACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/students/StudentManagementClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StudentManagementClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call StudentManagementClient() from the server but StudentManagementClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/students/StudentManagementClient.tsx\",\n    \"StudentManagementClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,wEACA","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/prisma.ts"],"sourcesContent":["import { db } from './db';\n\n// Re-export với tên khác để không phá vỡ code đang sử dụng\nexport const prisma = db;"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,SAAS,yGAAA,CAAA,KAAE","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/students/page.tsx"],"sourcesContent":["import { Metadata } from \"next\";\nimport { getServerSession } from \"next-auth/next\";\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\nimport { redirect } from \"next/navigation\";\nimport { Role, Prisma } from \"@prisma/client\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { StudentManagementClient } from \"./StudentManagementClient\";\nimport { prisma } from \"@/lib/prisma\";\n\n// Interfaces phù hợp với component StudentManagementClient\ninterface ClassInfo {\n  id: string;\n  name: string;\n  type: string;\n  subject?: string;\n  studentCount: number;\n}\n\nexport const metadata: Metadata = {\n  title: \"Student Management | OnTest\",\n  description: \"Manage and track student performance across your classes.\",\n};\n\n// Định nghĩa kiểu dữ liệu cho student để truyền vào component\ninterface StudentClass {\n  id: string;\n  name: string;\n  joinedAt: string;\n}\n\ninterface Student {\n  id: string;\n  name: string;\n  email: string;\n  image: string | null;\n  classes: StudentClass[];\n  recentActivity: {\n    quizId: string;\n    quizTitle: string;\n    classId: string | null;\n    score: number | null;\n    completedAt: string | null;\n  }[];\n  averageScore: number | null;\n}\n\n/**\n * Server Component for Teacher Student Management page\n * Handles authentication and fetches initial data for student management\n */\nexport default async function StudentManagementPage() {\n  // Check user authentication\n  const session = await getServerSession(authOptions);\n  \n  if (!session?.user) {\n    redirect(\"/auth/signin\");\n  }\n  \n  // If user is not a Teacher, redirect\n  if (session.user.role !== Role.TEACHER) {\n    redirect(\"/dashboard\");\n  }\n\n  // Get teacher's classes for filtering\n  const teacherClasses = await prisma.class.findMany({\n    where: {\n      teacherId: session.user.id,\n    },\n    select: {\n      id: true,\n      name: true,\n      type: true,\n      subject: true,\n      _count: {\n        select: {\n          students: true,\n        },\n      },\n    },\n    orderBy: {\n      name: 'asc',\n    },\n  });\n\n  // Transform class data\n  const classes: ClassInfo[] = teacherClasses.map(cls => ({\n    id: cls.id,\n    name: cls.name,\n    type: cls.type,\n    subject: cls.subject ?? undefined,\n    studentCount: cls._count.students,\n  }));\n\n  // Get a count of total students for pagination\n  const totalStudents = await prisma.classEnrollment.findMany({\n    where: {\n      class: {\n        teacherId: session.user.id,\n      },\n    },\n    select: {\n      studentId: true,\n    },\n  }).then(enrollments => \n    // Count unique student IDs\n    new Set(enrollments.map(e => e.studentId)).size\n  );\n\n  // Lấy danh sách học sinh đã đăng ký lớp học của giáo viên này\n  let initialStudents: Student[] = [];\n  try {\n    // Lấy danh sách học sinh từ các lớp của giáo viên\n    const studentEnrollments = await prisma.classEnrollment.findMany({\n      where: {\n        class: {\n          teacherId: session.user.id\n        }\n      },\n      select: {\n        student: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            image: true\n          }\n        },\n        class: {\n          select: {\n            id: true,\n            name: true\n          }\n        },\n        joinedAt: true\n      },\n      orderBy: {\n        joinedAt: 'desc'\n      },\n      take: 10 // Limit first page\n    });\n\n    // Nhóm học sinh theo ID để tránh trùng lặp\n    const studentMap = new Map<string, Student>();\n    \n    studentEnrollments.forEach(enrollment => {\n      const studentId = enrollment.student.id;\n      \n      if (!studentMap.has(studentId)) {\n        studentMap.set(studentId, {\n          id: studentId,\n          name: enrollment.student.name || \"Unnamed Student\",\n          email: enrollment.student.email || \"\",\n          image: enrollment.student.image,\n          classes: [],\n          recentActivity: [],\n          averageScore: null\n        });\n      }\n      \n      const studentData = studentMap.get(studentId)!;\n      \n      // Thêm lớp học vào danh sách lớp của học sinh\n      studentData.classes.push({\n        id: enrollment.class.id,\n        name: enrollment.class.name,\n        joinedAt: enrollment.joinedAt.toISOString()\n      });\n    });\n    \n    initialStudents = Array.from(studentMap.values());\n    \n    // Lấy thêm thông tin về điểm TB nếu có\n    const studentIds = initialStudents.map(student => student.id);\n    if (studentIds.length > 0) {\n      try {\n        // Sử dụng findMany để lấy thông tin các lần thi của học sinh\n        const attempts = await prisma.quizAttempt.findMany({\n          where: {\n            userId: {\n              in: studentIds\n            },\n            completedAt: {\n              not: null\n            }\n          },\n          select: {\n            userId: true,\n            score: true\n          }\n        });\n\n        // Tính điểm trung bình cho từng học sinh\n        const avgScoreMap = new Map<string, { total: number, count: number }>();\n        \n        // Tính tổng điểm và số lần thi của mỗi học sinh\n        attempts.forEach(attempt => {\n          if (!avgScoreMap.has(attempt.userId)) {\n            avgScoreMap.set(attempt.userId, { total: 0, count: 0 });\n          }\n          \n          const data = avgScoreMap.get(attempt.userId)!;\n          data.total += attempt.score || 0;\n          data.count += 1;\n        });\n        \n        // Cập nhật điểm trung bình cho học sinh\n        avgScoreMap.forEach((data, studentId) => {\n          const student = initialStudents.find(s => s.id === studentId);\n          if (student && data.count > 0) {\n            student.averageScore = Math.round(data.total / data.count);\n          }\n        });\n      } catch (error) {\n        console.error(\"Error calculating average scores:\", error);\n        // Tiếp tục mà không cập nhật điểm trung bình\n      }\n    }\n  } catch (error) {\n    console.error(\"Error fetching initial student data:\", error);\n    // Nếu gặp lỗi, initialStudents vẫn là mảng rỗng\n  }\n\n  return (\n    <DashboardShell>\n      <DashboardHeader\n        heading=\"Student Management\"\n        text=\"Manage and track student performance across your classes.\"\n      />\n      \n      <StudentManagementClient \n        totalStudents={totalStudents}\n        classes={classes}\n        initialStudents={initialStudents}\n      />\n    </DashboardShell>\n  );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAWO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AA6Be,eAAe;IAC5B,4BAA4B;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,6IAAA,CAAA,mBAAgB,AAAD,EAAE,iJAAA,CAAA,cAAW;IAElD,IAAI,CAAC,SAAS,MAAM;QAClB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qCAAqC;IACrC,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,6HAAA,CAAA,OAAI,CAAC,OAAO,EAAE;QACtC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,sCAAsC;IACtC,MAAM,iBAAiB,MAAM,6GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QACjD,OAAO;YACL,WAAW,QAAQ,IAAI,CAAC,EAAE;QAC5B;QACA,QAAQ;YACN,IAAI;YACJ,MAAM;YACN,MAAM;YACN,SAAS;YACT,QAAQ;gBACN,QAAQ;oBACN,UAAU;gBACZ;YACF;QACF;QACA,SAAS;YACP,MAAM;QACR;IACF;IAEA,uBAAuB;IACvB,MAAM,UAAuB,eAAe,GAAG,CAAC,CAAA,MAAO,CAAC;YACtD,IAAI,IAAI,EAAE;YACV,MAAM,IAAI,IAAI;YACd,MAAM,IAAI,IAAI;YACd,SAAS,IAAI,OAAO,IAAI;YACxB,cAAc,IAAI,MAAM,CAAC,QAAQ;QACnC,CAAC;IAED,+CAA+C;IAC/C,MAAM,gBAAgB,MAAM,6GAAA,CAAA,SAAM,CAAC,eAAe,CAAC,QAAQ,CAAC;QAC1D,OAAO;YACL,OAAO;gBACL,WAAW,QAAQ,IAAI,CAAC,EAAE;YAC5B;QACF;QACA,QAAQ;YACN,WAAW;QACb;IACF,GAAG,IAAI,CAAC,CAAA,cACN,2BAA2B;QAC3B,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,SAAS,GAAG,IAAI;IAGjD,8DAA8D;IAC9D,IAAI,kBAA6B,EAAE;IACnC,IAAI;QACF,kDAAkD;QAClD,MAAM,qBAAqB,MAAM,6GAAA,CAAA,SAAM,CAAC,eAAe,CAAC,QAAQ,CAAC;YAC/D,OAAO;gBACL,OAAO;oBACL,WAAW,QAAQ,IAAI,CAAC,EAAE;gBAC5B;YACF;YACA,QAAQ;gBACN,SAAS;oBACP,QAAQ;wBACN,IAAI;wBACJ,MAAM;wBACN,OAAO;wBACP,OAAO;oBACT;gBACF;gBACA,OAAO;oBACL,QAAQ;wBACN,IAAI;wBACJ,MAAM;oBACR;gBACF;gBACA,UAAU;YACZ;YACA,SAAS;gBACP,UAAU;YACZ;YACA,MAAM,GAAG,mBAAmB;QAC9B;QAEA,2CAA2C;QAC3C,MAAM,aAAa,IAAI;QAEvB,mBAAmB,OAAO,CAAC,CAAA;YACzB,MAAM,YAAY,WAAW,OAAO,CAAC,EAAE;YAEvC,IAAI,CAAC,WAAW,GAAG,CAAC,YAAY;gBAC9B,WAAW,GAAG,CAAC,WAAW;oBACxB,IAAI;oBACJ,MAAM,WAAW,OAAO,CAAC,IAAI,IAAI;oBACjC,OAAO,WAAW,OAAO,CAAC,KAAK,IAAI;oBACnC,OAAO,WAAW,OAAO,CAAC,KAAK;oBAC/B,SAAS,EAAE;oBACX,gBAAgB,EAAE;oBAClB,cAAc;gBAChB;YACF;YAEA,MAAM,cAAc,WAAW,GAAG,CAAC;YAEnC,8CAA8C;YAC9C,YAAY,OAAO,CAAC,IAAI,CAAC;gBACvB,IAAI,WAAW,KAAK,CAAC,EAAE;gBACvB,MAAM,WAAW,KAAK,CAAC,IAAI;gBAC3B,UAAU,WAAW,QAAQ,CAAC,WAAW;YAC3C;QACF;QAEA,kBAAkB,MAAM,IAAI,CAAC,WAAW,MAAM;QAE9C,uCAAuC;QACvC,MAAM,aAAa,gBAAgB,GAAG,CAAC,CAAA,UAAW,QAAQ,EAAE;QAC5D,IAAI,WAAW,MAAM,GAAG,GAAG;YACzB,IAAI;gBACF,6DAA6D;gBAC7D,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;oBACjD,OAAO;wBACL,QAAQ;4BACN,IAAI;wBACN;wBACA,aAAa;4BACX,KAAK;wBACP;oBACF;oBACA,QAAQ;wBACN,QAAQ;wBACR,OAAO;oBACT;gBACF;gBAEA,yCAAyC;gBACzC,MAAM,cAAc,IAAI;gBAExB,gDAAgD;gBAChD,SAAS,OAAO,CAAC,CAAA;oBACf,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,MAAM,GAAG;wBACpC,YAAY,GAAG,CAAC,QAAQ,MAAM,EAAE;4BAAE,OAAO;4BAAG,OAAO;wBAAE;oBACvD;oBAEA,MAAM,OAAO,YAAY,GAAG,CAAC,QAAQ,MAAM;oBAC3C,KAAK,KAAK,IAAI,QAAQ,KAAK,IAAI;oBAC/B,KAAK,KAAK,IAAI;gBAChB;gBAEA,wCAAwC;gBACxC,YAAY,OAAO,CAAC,CAAC,MAAM;oBACzB,MAAM,UAAU,gBAAgB,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;oBACnD,IAAI,WAAW,KAAK,KAAK,GAAG,GAAG;wBAC7B,QAAQ,YAAY,GAAG,KAAK,KAAK,CAAC,KAAK,KAAK,GAAG,KAAK,KAAK;oBAC3D;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,6CAA6C;YAC/C;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;IACtD,gDAAgD;IAClD;IAEA,qBACE,8OAAC,8IAAA,CAAA,iBAAc;;0BACb,8OAAC,+IAAA,CAAA,kBAAe;gBACd,SAAQ;gBACR,MAAK;;;;;;0BAGP,8OAAC,mKAAA,CAAA,0BAAuB;gBACtB,eAAe;gBACf,SAAS;gBACT,iBAAiB;;;;;;;;;;;;AAIzB","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAMhG,8BAA8B;AAG9B,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;;;;;AAEuG,EAAC,uEAAA;AAEzG,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;wCACNC,IAAAA;oCAAAA,KAAU;oCAAA;yCACV,2CAA2C;8CAC3CC,IAAAA,CAAAA;wCAAAA,CAAY,OAAA;4CAAA,IAAA;4CAAA;yCAAA;;uCACZC,UAAU;;iCACVC,UAAU,EAAE;kCACd,QAAA,CAAA;4BAAA;yBAAA;;qBACAC,UAAU;8BACRC,IAAAA,CAAAA;oBAAAA;iBAAAA,CAAYnB;;aACd;gBACF,CAAE,SAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA","ignoreList":[0],"debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  icon?: React.ReactNode\n  error?: boolean\n  hint?: string\n  endIcon?: React.ReactNode\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, icon, error, hint, endIcon, disabled, ...props }, ref) => {\n    return (\n      <div className=\"relative flex flex-col gap-1 w-full\">\n        {/* Input wrapper for icon positioning */}\n        <div className=\"relative\">\n          {/* Start icon if provided */}\n          {icon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center pointer-events-none\">\n              {icon}\n            </div>\n          )}\n          \n      <input\n        type={type}\n        className={cn(\n              \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 shadow-sm\",\n              icon && \"pl-10\",  // Add left padding if icon is present\n              endIcon && \"pr-10\", // Add right padding if end icon is present\n              error && \"border-destructive focus-visible:ring-destructive/50\",\n          className\n        )}\n            disabled={disabled}\n        ref={ref}\n            aria-invalid={error ? \"true\" : undefined}\n        {...props}\n      />\n          \n          {/* End icon if provided */}\n          {endIcon && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center\">\n              {endIcon}\n            </div>\n          )}\n        </div>\n        \n        {/* Hint or error message */}\n        {hint && (\n          <p \n            className={cn(\n              \"text-xs\",\n              error \n                ? \"text-destructive\" \n                : \"text-muted-foreground\"\n            )}\n            id={`${props.id || ''}-hint`}\n          >\n            {hint}\n          </p>\n        )}\n      </div>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAUA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;oBAEZ,sBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAIT,8OAAC;wBACC,MAAM;wBACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACN,+WACA,QAAQ,SACR,WAAW,SACX,SAAS,wDACb;wBAEE,UAAU;wBACd,KAAK;wBACD,gBAAc,QAAQ,SAAS;wBAClC,GAAG,KAAK;;;;;;oBAIN,yBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAMN,sBACC,8OAAC;gBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,WACA,QACI,qBACA;gBAEN,IAAI,GAAG,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC;0BAE3B;;;;;;;;;;;;AAKX;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {\n    variant?: \"default\" | \"info\" | \"success\" | \"warning\" | \"destructive\"\n  }\n>(({ className, variant = \"default\", sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md px-3 py-1.5 text-xs font-medium shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        variant === \"default\" && \"bg-primary text-primary-foreground\",\n        variant === \"info\" && \"bg-info text-info-foreground\",\n        variant === \"success\" && \"bg-success text-success-foreground\",\n        variant === \"warning\" && \"bg-warning text-warning-foreground\",\n        variant === \"destructive\" && \"bg-destructive text-destructive-foreground\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipProvider\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKpC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC/D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wWACA,YAAY,aAAa,sCACzB,YAAY,UAAU,gCACtB,YAAY,aAAa,sCACzB,YAAY,aAAa,sCACzB,YAAY,iBAAiB,8CAC7B;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/ResultsTable.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { \n  Card, \n  CardContent,\n  CardDescription, \n  CardFooter, \n  CardHeader, \n  CardTitle \n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { \n  Download, \n  Search, \n  ArrowRight, \n  Info, \n  Calendar, \n  ArrowUpDown,\n  ExternalLink \n} from \"lucide-react\";\nimport { format, parseISO } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";\n\ninterface QuizResult {\n  attemptId: string;\n  quizId: string;\n  quizTitle: string;\n  quizDescription: string | null;\n  className: string | null;\n  score: number;\n  totalQuestions: number;\n  correctQuestions: number;\n  completedAt: string;\n  timeTakenMinutes: number | null;\n  feedbackAvailable: boolean;\n  category?: string; // subject\n}\n\ninterface ResultsTableProps {\n  results: QuizResult[];\n  selectedTimeFrame?: string;\n  selectedSubject?: string;\n  isLoading?: boolean;\n}\n\nexport default function ResultsTable({ \n  results = [],\n  selectedTimeFrame,\n  selectedSubject,\n  isLoading = false\n}: ResultsTableProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState<{\n    key: 'date' | 'score' | 'title';\n    direction: 'asc' | 'desc';\n  }>({\n    key: 'date',\n    direction: 'desc'\n  });\n  const pageSize = 5;\n  \n  // Filter results based on search term and selected filters\n  const filteredResults = results.filter(result => {\n    // Text search\n    const matchesSearch = !searchTerm || \n      result.quizTitle.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (result.className?.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      (result.category?.toLowerCase().includes(searchTerm.toLowerCase()));\n      \n    // Subject filter - already filtered on the server, but just in case\n    const matchesSubject = !selectedSubject || \n      result.category?.toLowerCase() === selectedSubject.toLowerCase();\n    \n    return matchesSearch && matchesSubject;\n  });\n  \n  // Sort results based on sort config\n  const sortedResults = [...filteredResults].sort((a, b) => {\n    let comparison = 0;\n    \n    if (sortConfig.key === 'date') {\n      comparison = new Date(a.completedAt).getTime() - new Date(b.completedAt).getTime();\n    } else if (sortConfig.key === 'score') {\n      comparison = a.score - b.score;\n    } else if (sortConfig.key === 'title') {\n      comparison = a.quizTitle.localeCompare(b.quizTitle);\n    }\n    \n    return sortConfig.direction === 'desc' ? -comparison : comparison;\n  });\n  \n  // Paginate results\n  const totalPages = Math.ceil(sortedResults.length / pageSize);\n  const paginatedResults = sortedResults.slice(\n    (currentPage - 1) * pageSize,\n    currentPage * pageSize\n  );\n  \n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n  \n  // Handle sort change\n  const handleSortChange = (key: 'date' | 'score' | 'title') => {\n    // If we're already sorting by this key, toggle direction\n    if (sortConfig.key === key) {\n      setSortConfig({\n        key,\n        direction: sortConfig.direction === 'asc' ? 'desc' : 'asc'\n      });\n    } else {\n      // Otherwise, sort by this key, descending\n      setSortConfig({\n        key,\n        direction: 'desc'\n      });\n    }\n  };\n  \n  // Helper to format date\n  const formatDate = (dateStr: string) => {\n    try {\n      return format(parseISO(dateStr), \"dd MMM yyyy\");\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  // Helper to determine score color\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return \"text-emerald-600 dark:text-emerald-500\";\n    if (score >= 60) return \"text-amber-600 dark:text-amber-500\";\n    return \"text-red-600 dark:text-red-500\";\n  };\n  \n  return (\n    <Card className={cn(isLoading && \"opacity-70 pointer-events-none\")}>\n      <CardHeader>\n        <div className=\"flex flex-col sm:flex-row justify-between sm:items-center gap-4\">\n          <div>\n            <CardTitle>Assessment History</CardTitle>\n            <CardDescription>\n              Details of your completed assessments\n            </CardDescription>\n          </div>\n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\" \n                  className=\"gap-1 self-start\"\n                  aria-label=\"Export results as CSV\"\n                >\n                  <Download className=\"h-4 w-4\" /> Export\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>Export your results as CSV</p>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center gap-4 mb-4\">\n          <div className=\"relative flex-1\">\n            <Search \n              className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" \n              aria-hidden=\"true\"\n            />\n            <Input \n              type=\"search\" \n              placeholder=\"Search results...\" \n              className=\"pl-8\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              aria-label=\"Search assessment results\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"relative w-full overflow-auto\">\n          <table \n            className=\"w-full caption-bottom text-sm\"\n            aria-label=\"Assessment results table\"\n          >\n            <thead>\n              <tr className=\"border-b\">\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-left align-middle font-medium\"\n                >\n                  <button \n                    onClick={() => handleSortChange('title')}\n                    className=\"flex items-center gap-1 hover:text-primary\"\n                    aria-label=\"Sort by assessment name\"\n                >\n                  Assessment Name\n                    {sortConfig.key === 'title' && (\n                      <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                    )}\n                  </button>\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-left align-middle font-medium\"\n                >\n                  Subject\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-left align-middle font-medium\"\n                >\n                  <button \n                    onClick={() => handleSortChange('date')}\n                    className={cn(\n                      \"flex items-center gap-1 hover:text-primary\",\n                      sortConfig.key === 'date' && \"text-primary\"\n                    )}\n                    aria-label=\"Sort by date\"\n                >\n                  Date\n                    {sortConfig.key === 'date' && (\n                      <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                    )}\n                  </button>\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-right align-middle font-medium\"\n                >\n                  <button \n                    onClick={() => handleSortChange('score')}\n                    className=\"flex items-center gap-1 hover:text-primary ml-auto\"\n                    aria-label=\"Sort by score\"\n                >\n                  Score\n                    {sortConfig.key === 'score' && (\n                      <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                    )}\n                  </button>\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-right align-middle font-medium\"\n                >\n                  Action\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {paginatedResults.length > 0 ? (\n                paginatedResults.map((result) => (\n                  <tr \n                    key={result.attemptId} \n                    className=\"border-b hover:bg-muted/50 transition-colors\"\n                  >\n                    <td className=\"p-4 align-middle font-medium\">\n                      <div className=\"flex items-center gap-2\">\n                        {result.quizTitle}\n                        {result.quizDescription && (\n                          <TooltipProvider>\n                            <Tooltip>\n                              <TooltipTrigger asChild>\n                                <Info className=\"h-4 w-4 text-muted-foreground cursor-help\" />\n                              </TooltipTrigger>\n                              <TooltipContent>\n                                <p>{result.quizDescription}</p>\n                              </TooltipContent>\n                            </Tooltip>\n                          </TooltipProvider>\n                        )}\n                      </div>\n                      {result.className && (\n                        <div className=\"text-xs text-muted-foreground flex items-center gap-1.5\">\n                          <Calendar className=\"h-3 w-3\" /> {result.className}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"p-4 align-middle\">\n                      {result.category ? (\n                        <Badge \n                          variant=\"outline\"\n                          className={cn(\n                            \"transition-colors\",\n                            result.score >= 80 && \"border-green-200 bg-green-50 text-green-700 dark:bg-green-950 dark:text-green-300 dark:border-green-800\",\n                            result.score >= 60 && result.score < 80 && \"border-amber-200 bg-amber-50 text-amber-700 dark:bg-amber-950 dark:text-amber-300 dark:border-amber-800\",\n                            result.score < 60 && \"border-red-200 bg-red-50 text-red-700 dark:bg-red-950 dark:text-red-300 dark:border-red-800\"\n                          )}\n                        >\n                          {result.category}\n                        </Badge>\n                      ) : (\n                        <span className=\"text-muted-foreground\">-</span>\n                      )}\n                    </td>\n                    <td className=\"p-4 align-middle text-muted-foreground\">\n                      <time dateTime={result.completedAt}>\n                        {formatDate(result.completedAt)}\n                      </time>\n                    </td>\n                    <td className=\"p-4 align-middle text-right\">\n                      <span \n                        className={cn(\n                          \"font-bold transition-colors\",\n                          getScoreColor(result.score)\n                        )}\n                        aria-label={`Score: ${result.score.toFixed(1)}%`}\n                      >\n                        {result.score.toFixed(1)}%\n                      </span>\n                    </td>\n                    <td className=\"p-4 align-middle text-right\">\n                      <TooltipProvider>\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <Link \n                              href={`/dashboard/student/results/${result.attemptId}`}\n                              aria-label={`View details for ${result.quizTitle}`}\n                            >\n                              <Button \n                                size=\"sm\" \n                                variant=\"outline\" \n                                className=\"gap-1 transition-colors\"\n                              >\n                                Details <ExternalLink className=\"h-3 w-3\" />\n                              </Button>\n                            </Link>\n                          </TooltipTrigger>\n                          <TooltipContent>\n                            <p>View detailed results and feedback</p>\n                          </TooltipContent>\n                        </Tooltip>\n                      </TooltipProvider>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td \n                    colSpan={5} \n                    className=\"h-24 text-center\"\n                    aria-label=\"No results found\"\n                  >\n                    <div className=\"flex flex-col items-center justify-center gap-2 py-4\">\n                      <Info className=\"h-8 w-8 text-muted-foreground opacity-40\" />\n                      <p className=\"text-muted-foreground font-medium\">No results found</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {searchTerm ? \"Try adjusting your search term or filters\" : \"Complete assessments to see your results\"}\n                      </p>\n                    </div>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n      {totalPages > 1 && (\n        <CardFooter className=\"flex justify-between items-center pt-6\">\n          <div className=\"text-sm text-muted-foreground\">\n            Page {currentPage} of {totalPages}\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => handlePageChange(currentPage - 1)}\n              disabled={currentPage === 1}\n              aria-label=\"Previous page\"\n            >\n              Previous\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => handlePageChange(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              aria-label=\"Next page\"\n            >\n              Next\n            </Button>\n          </div>\n        </CardFooter>\n      )}\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1084, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/ScoreChart.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ResponsiveContainer, LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, TooltipProps } from \"recharts\";\nimport { format, parseISO, isValid } from \"date-fns\";\nimport { LineChart } from \"lucide-react\";\n\ninterface TimePointScoreData {\n  date: string; // ISO YYYY-MM-DD\n  averageScore: number;\n  assessmentCount: number;\n}\n\ninterface ScoreChartProps {\n  timeSeriesData: TimePointScoreData[];\n  timeFrame: string;\n}\n\nexport default function ScoreChart({ timeSeriesData, timeFrame }: ScoreChartProps) {\n  // Check if we have valid data to display\n  const hasValidData = Array.isArray(timeSeriesData) && \n    timeSeriesData.length > 1 && \n    timeSeriesData.some(point => point.averageScore > 0);\n  \n  const formatDateLabel = (dateStr: string) => {\n    try {\n    const date = parseISO(dateStr);\n      if (!isValid(date)) return dateStr;\n    \n    // Format based on timeframe\n    if (timeFrame === 'last7days') {\n      return format(date, 'EEE'); // Day name (Mon, Tue, etc.)\n    } else if (timeFrame === 'last30days') {\n        return format(date, 'dd MMM'); // 01 Jan\n      } else if (timeFrame === 'last90days') {\n      return format(date, 'dd MMM'); // 01 Jan\n    } else {\n      return format(date, 'MMM yy'); // Jan 23\n      }\n    } catch (e) {\n      // If parsing fails, return the original string\n      return dateStr;\n    }\n  };\n  \n  const CustomTooltip = ({ \n    active, \n    payload, \n    label \n  }: TooltipProps<number, string>) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white dark:bg-slate-800 p-3 border rounded-md shadow-sm\">\n          <p className=\"font-medium\">{formatDateLabel(label)}</p>\n          <p className=\"text-emerald-600 dark:text-emerald-400 font-medium\">\n            Score: {payload[0].value?.toFixed(1)}%\n          </p>\n          <p className=\"text-xs text-muted-foreground\">\n            Based on {payload[0].payload.assessmentCount} {payload[0].payload.assessmentCount === 1 ? 'assessment' : 'assessments'}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Score Progress</CardTitle>\n        <CardDescription>\n          Your average scores over time\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-2\">\n        <div className=\"h-[300px]\">\n          {hasValidData ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <RechartsLineChart\n                data={timeSeriesData}\n                margin={{\n                  top: 20,\n                  right: 10,\n                  left: 0,\n                  bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} opacity={0.3} />\n                <XAxis \n                  dataKey=\"date\" \n                  tickFormatter={formatDateLabel}\n                  tick={{ fontSize: 12 }}\n                />\n                <YAxis \n                  domain={[0, 100]}\n                  tickCount={6}\n                  tick={{ fontSize: 12 }}\n                  tickFormatter={(value) => `${value}%`}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"averageScore\"\n                  stroke=\"#10b981\"\n                  strokeWidth={2}\n                  dot={{ r: 4 }}\n                  activeDot={{ r: 6 }}\n                  name=\"Average Score\"\n                />\n              </RechartsLineChart>\n            </ResponsiveContainer>\n          ) : (\n            <div className=\"h-full flex flex-col items-center justify-center text-center p-6\">\n              <LineChart className=\"h-12 w-12 text-muted-foreground opacity-20 mb-2\" />\n              <p className=\"text-muted-foreground font-medium\">Not enough data to display chart</p>\n              <p className=\"text-xs text-muted-foreground mt-1 max-w-xs\">\n                Complete more assessments to see your score progress over time\n              </p>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1343, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/SubjectAnalysis.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { BookOpen } from \"lucide-react\";\n\ninterface SubjectPerformance {\n  subject: string;\n  averageScore: number;\n  assessmentCount: number;\n  trend?: number | null; // Percentage change compared to previous period\n}\n\ninterface SubjectAnalysisProps {\n  subjectPerformance: SubjectPerformance[];\n  selectedSubject?: string;\n}\n\nexport default function SubjectAnalysis({ \n  subjectPerformance,\n  selectedSubject\n}: SubjectAnalysisProps) {\n  // Check if we have valid data\n  const hasData = Array.isArray(subjectPerformance) && subjectPerformance.length > 0;\n  \n  // Filter and sort subjects by average score (highest first)\n  const sortedSubjects = hasData \n    ? [...subjectPerformance]\n        .filter(s => !selectedSubject || s.subject === selectedSubject)\n        .sort((a, b) => b.averageScore - a.averageScore)\n    : [];\n  \n  // Helper to determine color based on score\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return \"emerald\";\n    if (score >= 60) return \"amber\";\n    return \"red\";\n  };\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Subject Performance</CardTitle>\n        <CardDescription>\n          Your scores and progress by subject\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        {sortedSubjects.length > 0 ? (\n          <div className=\"space-y-4\">\n            {sortedSubjects.map((subject) => {\n              const scoreColor = getScoreColor(subject.averageScore);\n              \n              return (\n                <div key={subject.subject} className=\"space-y-1\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium\">{subject.subject}</span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm font-bold\">{subject.averageScore.toFixed(1)}%</span>\n                      {subject.trend !== undefined && subject.trend !== null && (\n                        <Badge className={`${\n                          subject.trend > 0 \n                            ? \"bg-green-50 text-green-700 hover:bg-green-50 dark:bg-green-950 dark:text-green-300\" \n                            : subject.trend < 0 \n                              ? \"bg-red-50 text-red-700 hover:bg-red-50 dark:bg-red-950 dark:text-red-300\"\n                              : \"bg-slate-50 text-slate-700 hover:bg-slate-50 dark:bg-slate-800 dark:text-slate-300\"\n                        }`}>\n                          {subject.trend > 0 ? \"+\" : \"\"}\n                          {subject.trend.toFixed(1)}%\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                  <div className={`bg-${scoreColor}-100 dark:bg-${scoreColor}-950 rounded-full h-2`}>\n                    <Progress \n                      value={subject.averageScore} \n                      className={`bg-${scoreColor}-600 dark:bg-${scoreColor}-500`}\n                    />\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    Based on {subject.assessmentCount} {subject.assessmentCount === 1 ? 'assessment' : 'assessments'}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"py-12 text-center\">\n            <BookOpen className=\"h-12 w-12 mx-auto text-muted-foreground opacity-20 mb-2\" />\n            <p className=\"text-muted-foreground font-medium\">No subject data available</p>\n            <p className=\"text-xs text-muted-foreground mt-1 max-w-sm mx-auto\">\n              {selectedSubject \n                ? `No data available for ${selectedSubject}. Try selecting a different subject or time period.`\n                : \"Complete assessments to see your subject performance breakdown.\"}\n            </p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAmBe,SAAS,gBAAgB,EACtC,kBAAkB,EAClB,eAAe,EACM;IACrB,8BAA8B;IAC9B,MAAM,UAAU,MAAM,OAAO,CAAC,uBAAuB,mBAAmB,MAAM,GAAG;IAEjF,4DAA4D;IAC5D,MAAM,iBAAiB,UACnB;WAAI;KAAmB,CACpB,MAAM,CAAC,CAAA,IAAK,CAAC,mBAAmB,EAAE,OAAO,KAAK,iBAC9C,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,YAAY,GAAG,EAAE,YAAY,IACjD,EAAE;IAEN,2CAA2C;IAC3C,MAAM,gBAAgB,CAAC;QACrB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,OAAO;IACT;IAEA,qBACE,8OAAC,yHAAA,CAAA,OAAI;;0BACH,8OAAC,yHAAA,CAAA,aAAU;;kCACT,8OAAC,yHAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,yHAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAInB,8OAAC,yHAAA,CAAA,cAAW;0BACT,eAAe,MAAM,GAAG,kBACvB,8OAAC;oBAAI,WAAU;8BACZ,eAAe,GAAG,CAAC,CAAC;wBACnB,MAAM,aAAa,cAAc,QAAQ,YAAY;wBAErD,qBACE,8OAAC;4BAA0B,WAAU;;8CACnC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAuB,QAAQ,OAAO;;;;;;sDACtD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;;wDAAqB,QAAQ,YAAY,CAAC,OAAO,CAAC;wDAAG;;;;;;;gDACpE,QAAQ,KAAK,KAAK,aAAa,QAAQ,KAAK,KAAK,sBAChD,8OAAC,0HAAA,CAAA,QAAK;oDAAC,WAAW,GAChB,QAAQ,KAAK,GAAG,IACZ,uFACA,QAAQ,KAAK,GAAG,IACd,6EACA,sFACN;;wDACC,QAAQ,KAAK,GAAG,IAAI,MAAM;wDAC1B,QAAQ,KAAK,CAAC,OAAO,CAAC;wDAAG;;;;;;;;;;;;;;;;;;;8CAKlC,8OAAC;oCAAI,WAAW,CAAC,GAAG,EAAE,WAAW,aAAa,EAAE,WAAW,qBAAqB,CAAC;8CAC/E,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wCACP,OAAO,QAAQ,YAAY;wCAC3B,WAAW,CAAC,GAAG,EAAE,WAAW,aAAa,EAAE,WAAW,IAAI,CAAC;;;;;;;;;;;8CAG/D,8OAAC;oCAAI,WAAU;;wCAAgC;wCACnC,QAAQ,eAAe;wCAAC;wCAAE,QAAQ,eAAe,KAAK,IAAI,eAAe;;;;;;;;2BA1B7E,QAAQ,OAAO;;;;;oBA8B7B;;;;;yCAGF,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;4BAAE,WAAU;sCAAoC;;;;;;sCACjD,8OAAC;4BAAE,WAAU;sCACV,kBACG,CAAC,sBAAsB,EAAE,gBAAgB,mDAAmD,CAAC,GAC7F;;;;;;;;;;;;;;;;;;;;;;;AAOlB","debugId":null}},
    {"offset": {"line": 1579, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/ResultsHeader.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { \n  BarChart, \n  LineChart, \n  FileText, \n  TrendingUp, \n  TrendingDown, \n  Award, \n  Book\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface OverallStats {\n  averageScore: number;\n  previousAverageScore: number | null;\n  improvement: number | null;\n  totalAssessments: number;\n  currentPeriodLabel: string;\n  previousPeriodLabel: string | null;\n}\n\ninterface CompletionData {\n  totalQuizzes: number;\n  completedQuizzes: number;\n  completionRate: number;\n  bestSubject: {\n    name: string;\n    score: number;\n  };\n  mostImprovedSubject?: {\n    name: string;\n    improvement: number;\n  } | null;\n}\n\ninterface ResultsHeaderProps {\n  overallStats: OverallStats;\n  completionData: CompletionData;\n}\n\nexport default function ResultsHeader({ \n  overallStats, \n  completionData \n}: ResultsHeaderProps) {\n  // Determine improvement trend direction and icon\n  const showImprovement = overallStats.improvement !== null && \n    overallStats.previousAverageScore !== null;\n  \n  // Trend colors\n  const getTrendColor = (value: number) => {\n    if (value > 0) return \"text-emerald-600 dark:text-emerald-400\";\n    if (value < 0) return \"text-red-600 dark:text-red-400\";\n    return \"text-amber-600 dark:text-amber-400\";\n  };\n  \n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      {/* Average Score Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Average Score</CardTitle>\n          <div className=\"h-8 w-8 rounded-full bg-emerald-100/80 dark:bg-emerald-900/30 flex items-center justify-center\">\n            <BarChart className=\"h-4 w-4 text-emerald-600 dark:text-emerald-400\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">\n            {overallStats.averageScore.toFixed(1)}%\n          </div>\n          {showImprovement ? (\n            <p className={cn(\n              \"text-xs flex items-center gap-1 mt-1\",\n              getTrendColor(overallStats.improvement!)\n            )}>\n              {overallStats.improvement! > 0 ? (\n                <TrendingUp className=\"h-3.5 w-3.5\" />\n              ) : overallStats.improvement! < 0 ? (\n                <TrendingDown className=\"h-3.5 w-3.5\" />\n              ) : null}\n              {overallStats.improvement! > 0 ? \"+\" : \"\"}\n              {overallStats.improvement!.toFixed(1)}% compared to{\" \"}\n              {overallStats.previousPeriodLabel}\n            </p>\n          ) : (\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              During {overallStats.currentPeriodLabel}\n            </p>\n          )}\n        </CardContent>\n      </Card>\n      \n      {/* Total Assessments Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Total Assessments</CardTitle>\n          <div className=\"h-8 w-8 rounded-full bg-blue-100/80 dark:bg-blue-900/30 flex items-center justify-center\">\n            <FileText className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{overallStats.totalAssessments}</div>\n          <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\n            <span className=\"truncate\">\n              {completionData.completionRate > 0 && `${completionData.completionRate}% completion rate`}\n              {completionData.completionRate === 0 && \"No assessments completed yet\"}\n            </span>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Best Subject Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Best Subject</CardTitle>\n          <div className=\"h-8 w-8 rounded-full bg-purple-100/80 dark:bg-purple-900/30 flex items-center justify-center\">\n            <Award className=\"h-4 w-4 text-purple-600 dark:text-purple-400\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold line-clamp-1\">\n            {completionData.bestSubject?.name || \"N/A\"}\n          </div>\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            {completionData.bestSubject?.score \n              ? `Average score: ${completionData.bestSubject.score.toFixed(1)}%` \n              : \"Complete assessments to see your best subject\"}\n          </p>\n        </CardContent>\n      </Card>\n      \n      {/* Most Improved Subject Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Most Improved</CardTitle>\n          <div className=\"h-8 w-8 rounded-full bg-amber-100/80 dark:bg-amber-900/30 flex items-center justify-center\">\n            <Book className=\"h-4 w-4 text-amber-600 dark:text-amber-400\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold line-clamp-1\">\n            {completionData.mostImprovedSubject?.name || \"N/A\"}\n          </div>\n          {completionData.mostImprovedSubject ? (\n            <p className=\"text-xs text-emerald-600 dark:text-emerald-400 mt-1 flex items-center\">\n              <TrendingUp className=\"h-3.5 w-3.5 mr-1\" />\n              +{completionData.mostImprovedSubject.improvement.toFixed(1)}% improvement\n            </p>\n          ) : (\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Need more data to calculate improvement\n            </p>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1933, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Separator } from '@/components/ui/separator';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { toast } from '@/components/ui/use-toast';\nimport { Search, Calendar, BarChart4, Clock } from 'lucide-react';\nimport { format } from 'date-fns';\nimport ResultsTable from './components/ResultsTable';\nimport ScoreChart from './components/ScoreChart';\nimport SubjectAnalysis from './components/SubjectAnalysis';\nimport ResultsHeader from './components/ResultsHeader';\n\ninterface QuizResultItem {\n  attemptId: string;\n  quizId: string;\n  quizTitle: string;\n  quizDescription: string | null;\n  className: string | null;\n  category: string | null;\n  score: number;\n  totalQuestions: number;\n  correctQuestions: number;\n  completedAt: string;\n  timeTakenMinutes: number | null;\n  feedbackAvailable: boolean;\n}\n\ninterface ResultsData {\n  results: QuizResultItem[];\n  pagination: {\n    currentPage: number;\n    totalPages: number;\n    totalItems: number;\n    pageSize: number;\n  };\n  timeFrame: string;\n  subject: string | null;\n}\n\ninterface SubjectPerformance {\n  name: string;\n  score: number;\n  quizCount: number;\n  improvement: number | null;\n}\n\n// Default stats values\nconst defaultOverallStats = {\n  averageScore: 0,\n  previousAverageScore: null,\n  improvement: null,\n  totalAssessments: 0,\n  currentPeriodLabel: 'last 30 days',\n  previousPeriodLabel: null\n};\n\nconst defaultCompletionData = {\n  totalQuizzes: 0,\n  completedQuizzes: 0,\n  completionRate: 0,\n  bestSubject: {\n    name: '',\n    score: 0\n  },\n  mostImprovedSubject: null\n};\n\n// Generate time series data for ScoreChart\nconst generateTimeSeriesData = (results: QuizResultItem[]) => {\n  if (!results.length) return [];\n\n  // Group by date\n  const dateMap = new Map<string, {scores: number[], count: number}>();\n  \n  results.forEach(result => {\n    // Extract date part only from ISO string\n    const date = result.completedAt.split('T')[0];\n    if (!dateMap.has(date)) {\n      dateMap.set(date, {scores: [], count: 0});\n    }\n    \n    const dateData = dateMap.get(date)!;\n    dateData.scores.push(result.score);\n    dateData.count++;\n  });\n  \n  // Convert to array and calculate averages\n  return Array.from(dateMap.entries())\n    .map(([date, data]) => {\n      const avgScore = data.scores.reduce((sum, score) => sum + score, 0) / data.scores.length;\n      return {\n        date,\n        averageScore: avgScore,\n        assessmentCount: data.count\n      };\n    })\n    .sort((a, b) => a.date.localeCompare(b.date));\n};\n\n// Convert our subject performance data to match SubjectAnalysis component\nconst convertToSubjectPerformance = (subjects: SubjectPerformance[]): {\n  subject: string;\n  averageScore: number;\n  assessmentCount: number;\n  trend: number | null;\n}[] => {\n  return subjects.map(subj => ({\n    subject: subj.name,\n    averageScore: subj.score,\n    assessmentCount: subj.quizCount,\n    trend: subj.improvement\n  }));\n};\n\nexport default function StudentResultsPage() {\n  const { isStudent, isLoading: authLoading } = useAuth();\n  const router = useRouter();\n\n  // State management\n  const [timeFrame, setTimeFrame] = useState<string>('last30days');\n  const [subject, setSubject] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pageSize] = useState<number>(10);\n  \n  // Data state\n  const [resultsData, setResultsData] = useState<ResultsData | null>(null);\n  const [filteredResults, setFilteredResults] = useState<QuizResultItem[]>([]);\n  const [subjects, setSubjects] = useState<string[]>([]);\n  const [overallStats, setOverallStats] = useState(defaultOverallStats);\n  const [completionData, setCompletionData] = useState(defaultCompletionData);\n  const [subjectsPerformance, setSubjectsPerformance] = useState<SubjectPerformance[]>([]);\n  \n  // UI state\n  const [loading, setLoading] = useState<boolean>(true);\n  const [tab, setTab] = useState<string>('all');\n\n  // Fetch results data\n  const fetchResults = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `/api/users/me/quiz-results?timeFrame=${timeFrame}${subject ? `&subject=${subject}` : ''}&page=${currentPage}&pageSize=${pageSize}`\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error(data.message || 'Failed to load results');\n      }\n      \n      setResultsData(data.data);\n      setFilteredResults(data.data.results);\n      \n      // Extract unique subjects\n      const allSubjects = data.data.results\n        .map((result: QuizResultItem) => result.category)\n        .filter((category: string | null) => category !== null) as string[];\n      setSubjects([...new Set(allSubjects)]);\n      \n      // Calculate stats\n      if (data.data.results.length > 0) {\n        // Overall stats\n        const scores = data.data.results.map((r: QuizResultItem) => r.score);\n        const avgScore = scores.reduce((acc: number, score: number) => acc + score, 0) / scores.length;\n        \n        setOverallStats({\n          averageScore: avgScore,\n          previousAverageScore: null, // Would come from a separate API call typically\n          improvement: null, // Would be calculated from previous period\n          totalAssessments: data.data.pagination.totalItems,\n          currentPeriodLabel: formatTimeFrameLabel(timeFrame),\n          previousPeriodLabel: null\n        });\n        \n        // Completion data\n        const completedCount = data.data.results.length;\n        const totalCount = data.data.pagination.totalItems;\n        \n        // Group by subject\n        const subjectMap = new Map<string, { scores: number[], count: number }>();\n        data.data.results.forEach((result: QuizResultItem) => {\n          const subjectName = result.category || 'Uncategorized';\n          if (!subjectMap.has(subjectName)) {\n            subjectMap.set(subjectName, { scores: [], count: 0 });\n          }\n          const subjectData = subjectMap.get(subjectName)!;\n          subjectData.scores.push(result.score);\n          subjectData.count++;\n        });\n        \n        // Find best subject\n        let bestSubject = { name: '', score: 0 };\n        const subjectPerformanceList: SubjectPerformance[] = [];\n        \n        subjectMap.forEach((data, name) => {\n          const avgScore = data.scores.reduce((acc, score) => acc + score, 0) / data.scores.length;\n          \n          subjectPerformanceList.push({\n            name,\n            score: avgScore,\n            quizCount: data.count,\n            improvement: null // Would come from historical data\n          });\n          \n          if (avgScore > bestSubject.score) {\n            bestSubject = { name, score: avgScore };\n          }\n        });\n        \n        setSubjectsPerformance(subjectPerformanceList);\n        \n        setCompletionData({\n          totalQuizzes: totalCount,\n          completedQuizzes: completedCount,\n          completionRate: totalCount > 0 ? (completedCount / totalCount) * 100 : 0,\n          bestSubject,\n          mostImprovedSubject: null // Would be calculated from historical data\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching results:', error);\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to load results',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [timeFrame, subject, currentPage, pageSize]);\n\n  // Effect to handle filtering based on search term\n  useEffect(() => {\n    if (!resultsData) return;\n    \n    const filtered = resultsData.results.filter(result => {\n      return !searchTerm \n        || result.quizTitle.toLowerCase().includes(searchTerm.toLowerCase()) \n        || (result.className?.toLowerCase().includes(searchTerm.toLowerCase()))\n        || (result.category?.toLowerCase().includes(searchTerm.toLowerCase()));\n    });\n    \n    setFilteredResults(filtered);\n  }, [searchTerm, resultsData]);\n\n  // Initial data fetch\n  useEffect(() => {\n    if (!authLoading && isStudent) {\n      fetchResults();\n    } else if (!authLoading && !isStudent) {\n      router.push('/dashboard');\n    }\n  }, [authLoading, isStudent, fetchResults, router]);\n  \n  // Handle time frame change\n  const handleTimeFrameChange = (value: string) => {\n    setTimeFrame(value);\n    setCurrentPage(1);\n  };\n  \n  // Handle subject change\n  const handleSubjectChange = (value: string) => {\n    setSubject(value === 'all' ? null : value);\n    setCurrentPage(1);\n  };\n  \n  // Format time frame for display\n  const formatTimeFrameLabel = (timeFrame: string): string => {\n    switch (timeFrame) {\n      case 'last7days':\n        return 'last 7 days';\n      case 'last30days':\n        return 'last 30 days';\n      case 'last90days':\n        return 'last 90 days';\n      case 'last6months':\n        return 'last 6 months';\n      case 'lastYear':\n        return 'last year';\n      case 'allTime':\n        return 'all time';\n      default:\n        return timeFrame;\n    }\n  };\n  \n  if (authLoading) {\n    return <ResultsPageSkeleton />;\n  }\n  \n  return (\n    <div className=\"container py-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">My Results</h1>\n          <p className=\"text-muted-foreground\">\n            View and analyze your assessment results\n          </p>\n        </div>\n      </div>\n      \n      <div className=\"flex flex-col md:flex-row gap-4 md:items-center md:justify-between\">\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          <div>\n            <label className=\"text-sm font-medium\" htmlFor=\"time-frame-select\">\n              Time Period\n            </label>\n            <Select \n              value={timeFrame} \n              onValueChange={handleTimeFrameChange}\n            >\n              <SelectTrigger className=\"w-[180px]\" id=\"time-frame-select\">\n                <SelectValue placeholder=\"Select period\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\n                <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\n                <SelectItem value=\"last90days\">Last 90 Days</SelectItem>\n                <SelectItem value=\"last6months\">Last 6 Months</SelectItem>\n                <SelectItem value=\"lastYear\">Last Year</SelectItem>\n                <SelectItem value=\"allTime\">All Time</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          {subjects.length > 0 && (\n            <div>\n              <label className=\"text-sm font-medium\" htmlFor=\"subject-select\">\n                Subject\n              </label>\n              <Select \n                value={subject || 'all'} \n                onValueChange={handleSubjectChange}\n              >\n                <SelectTrigger className=\"w-[180px]\" id=\"subject-select\">\n                  <SelectValue placeholder=\"All subjects\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Subjects</SelectItem>\n                  {subjects.map(subj => (\n                    <SelectItem key={subj} value={subj}>{subj}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"relative w-full md:w-auto\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n          <Input\n            className=\"pl-10 w-full md:w-[280px]\"\n            placeholder=\"Search assessments...\" \n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </div>\n      \n      <ResultsHeader \n        overallStats={overallStats} \n        completionData={completionData} \n      />\n      \n      <Tabs value={tab} onValueChange={setTab}>\n        <TabsList className=\"mb-4\">\n          <TabsTrigger value=\"all\">\n            All Results\n          </TabsTrigger>\n          <TabsTrigger value=\"trends\">\n            Score Trends\n          </TabsTrigger>\n          <TabsTrigger value=\"subjects\">\n            Subject Analysis\n          </TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"all\">\n          {loading ? (\n            <TableSkeleton />\n          ) : (\n            <ResultsTable \n              results={filteredResults}\n              selectedTimeFrame={timeFrame}\n              selectedSubject={subject}\n              isLoading={loading}\n            />\n          )}\n          \n          {/* Pagination */}\n          {resultsData?.pagination && resultsData.pagination.totalPages > 1 && (\n            <div className=\"flex justify-center mt-6\">\n              <nav className=\"flex space-x-2\" aria-label=\"Pagination\">\n                {/* Previous button */}\n                <Button\n                  variant=\"outline\" \n                  size=\"sm\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                >\n                  Previous\n                </Button>\n                \n                {/* Page numbers */}\n                {Array.from({ length: resultsData.pagination.totalPages }, (_, i) => i + 1)\n                  .filter(page => \n                    page === 1 ||\n                    page === resultsData.pagination.totalPages ||\n                    (page >= currentPage - 1 && page <= currentPage + 1)\n                  )\n                  .map((page, index, array) => {\n                    // Add ellipsis\n                    if (index > 0 && page > array[index - 1] + 1) {\n                      return (\n                        <span \n                          key={`ellipsis-${page}`} \n                          className=\"flex h-9 w-9 items-center justify-center\"\n                        >\n                          ...\n                        </span>\n                      );\n                    }\n                    \n                    return (\n                      <Button\n                        key={page}\n                        variant={currentPage === page ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        onClick={() => setCurrentPage(page)}\n                        disabled={loading}\n                      >\n                        {page}\n                      </Button>\n                    );\n                  })}\n                \n                {/* Next button */}\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={currentPage === resultsData.pagination.totalPages || loading}\n                  onClick={() => setCurrentPage(p => Math.min(resultsData.pagination.totalPages, p + 1))}\n                >\n                  Next\n                </Button>\n              </nav>\n            </div>\n          )}\n        </TabsContent>\n        \n        <TabsContent value=\"trends\">\n          <Card className=\"col-span-4\">\n            <CardHeader>\n              <CardTitle>Score Trends</CardTitle>\n              <CardDescription>Your performance over time</CardDescription>\n            </CardHeader>\n            <CardContent className=\"h-[400px]\">\n              {loading ? (\n                <div className=\"w-full h-full flex items-center justify-center\">\n                  <Skeleton className=\"w-full h-full\" />\n                </div>\n              ) : (\n                <ScoreChart \n                  timeSeriesData={generateTimeSeriesData(resultsData?.results || [])} \n                  timeFrame={timeFrame}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"subjects\">\n          {loading ? (\n            <div className=\"grid gap-4 grid-cols-1 lg:grid-cols-3\">\n              <Skeleton className=\"h-[300px]\" />\n              <Skeleton className=\"h-[300px]\" />\n              <Skeleton className=\"h-[300px]\" />\n            </div>\n          ) : (\n            <SubjectAnalysis\n              subjectPerformance={convertToSubjectPerformance(subjectsPerformance)}\n              selectedSubject={subject || undefined}\n            />\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\n// Skeleton loaders\nfunction ResultsPageSkeleton() {\n  return (\n    <div className=\"container py-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <Skeleton className=\"h-8 w-64 mb-2\" />\n          <Skeleton className=\"h-4 w-48\" />\n        </div>\n      </div>\n      \n      <div className=\"flex gap-4\">\n        <Skeleton className=\"h-10 w-40\" />\n        <Skeleton className=\"h-10 w-40\" />\n      </div>\n      \n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Skeleton className=\"h-32\" />\n        <Skeleton className=\"h-32\" />\n        <Skeleton className=\"h-32\" />\n        <Skeleton className=\"h-32\" />\n      </div>\n      \n      <Skeleton className=\"h-10 w-64\" />\n      \n      <TableSkeleton />\n    </div>\n  );\n}\n\nfunction TableSkeleton() {\n  return (\n    <Card>\n      <CardHeader>\n        <Skeleton className=\"h-6 w-48\" />\n        <Skeleton className=\"h-4 w-32\" />\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <Skeleton className=\"h-10 w-full\" />\n        <div className=\"space-y-2\">\n          {Array.from({ length: 5 }).map((_, i) => (\n            <Skeleton key={i} className=\"h-16 w-full\" />\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
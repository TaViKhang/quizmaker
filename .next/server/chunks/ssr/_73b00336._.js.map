{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/prisma.ts"],"sourcesContent":["import { db } from './db';\n\n// Re-export với tên khác để không phá vỡ code đang sử dụng\nexport const prisma = db;"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,SAAS,yGAAA,CAAA,KAAE","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/edit/QuizEditForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const QuizEditForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuizEditForm() from the server but QuizEditForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/quizzes/[quizId]/edit/QuizEditForm.tsx <module evaluation>\",\n    \"QuizEditForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8FACA","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/edit/QuizEditForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const QuizEditForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuizEditForm() from the server but QuizEditForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/quizzes/[quizId]/edit/QuizEditForm.tsx\",\n    \"QuizEditForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0EACA","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/edit/page.tsx"],"sourcesContent":["import { Metadata } from \"next\";\r\nimport { getServerSession } from \"next-auth/next\";\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { Role } from \"@prisma/client\";\r\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\r\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { QuizEditForm } from \"./QuizEditForm\";\r\nimport { notFound } from \"next/navigation\";\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Edit Quiz | OnTest\",\r\n  description: \"Edit your quiz details and questions.\",\r\n};\r\n\r\n/**\r\n * Server Component for the Edit Quiz page\r\n * Handles authentication and fetches the quiz data for editing\r\n */\r\nexport default async function EditQuizPage({ params }: { params: { quizId: string } }) {\r\n  // Check user authentication\r\n  const session = await getServerSession(authOptions);\r\n  \r\n  if (!session?.user) {\r\n    redirect(\"/auth/signin\");\r\n  }\r\n  \r\n  // If user is not a Teacher, redirect\r\n  if (session.user.role !== Role.TEACHER) {\r\n    redirect(\"/dashboard\");\r\n  }\r\n\r\n  // Fetch the quiz data\r\n  const quiz = await prisma.quiz.findUnique({\r\n    where: {\r\n      id: params.quizId,\r\n      authorId: session.user.id, // Ensure the quiz belongs to this teacher\r\n    },\r\n    include: {\r\n      questions: {\r\n        include: {\r\n          options: true,\r\n        },\r\n        orderBy: {\r\n          order: \"asc\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  // If quiz not found or doesn't belong to this teacher\r\n  if (!quiz) {\r\n    notFound();\r\n  }\r\n\r\n  // Get the teacher's classes for the class selection dropdown\r\n  const teacherClasses = await prisma.class.findMany({\r\n    where: {\r\n      teacherId: session.user.id,\r\n      isActive: true,\r\n    },\r\n    select: {\r\n      id: true,\r\n      name: true,\r\n      subject: true,\r\n    },\r\n    orderBy: {\r\n      name: \"asc\",\r\n    },\r\n  });\r\n\r\n  // Get categories from existing quizzes (for autocomplete)\r\n  const existingCategories = await prisma.quiz.findMany({\r\n    where: {\r\n      authorId: session.user.id,\r\n      category: {\r\n        not: null,\r\n      },\r\n    },\r\n    select: {\r\n      category: true,\r\n    },\r\n    distinct: [\"category\"],\r\n  });\r\n\r\n  const categories = existingCategories\r\n    .map(quiz => quiz.category!)\r\n    .filter((value, index, self) => self.indexOf(value) === index)\r\n    .sort();\r\n\r\n  return (\r\n    <DashboardShell>\r\n      <DashboardHeader\r\n        heading=\"Edit Quiz\"\r\n        text=\"Update your quiz details and manage questions.\"\r\n      />\r\n      \r\n      <QuizEditForm \r\n        quiz={quiz} \r\n        classes={teacherClasses} \r\n        categories={categories} \r\n      />\r\n    </DashboardShell>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAGO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAMe,eAAe,aAAa,EAAE,MAAM,EAAkC;IACnF,4BAA4B;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,6IAAA,CAAA,mBAAgB,AAAD,EAAE,iJAAA,CAAA,cAAW;IAElD,IAAI,CAAC,SAAS,MAAM;QAClB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qCAAqC;IACrC,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,6HAAA,CAAA,OAAI,CAAC,OAAO,EAAE;QACtC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,sBAAsB;IACtB,MAAM,OAAO,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YACL,IAAI,OAAO,MAAM;YACjB,UAAU,QAAQ,IAAI,CAAC,EAAE;QAC3B;QACA,SAAS;YACP,WAAW;gBACT,SAAS;oBACP,SAAS;gBACX;gBACA,SAAS;oBACP,OAAO;gBACT;YACF;QACF;IACF;IAEA,sDAAsD;IACtD,IAAI,CAAC,MAAM;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,6DAA6D;IAC7D,MAAM,iBAAiB,MAAM,6GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;QACjD,OAAO;YACL,WAAW,QAAQ,IAAI,CAAC,EAAE;YAC1B,UAAU;QACZ;QACA,QAAQ;YACN,IAAI;YACJ,MAAM;YACN,SAAS;QACX;QACA,SAAS;YACP,MAAM;QACR;IACF;IAEA,0DAA0D;IAC1D,MAAM,qBAAqB,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACpD,OAAO;YACL,UAAU,QAAQ,IAAI,CAAC,EAAE;YACzB,UAAU;gBACR,KAAK;YACP;QACF;QACA,QAAQ;YACN,UAAU;QACZ;QACA,UAAU;YAAC;SAAW;IACxB;IAEA,MAAM,aAAa,mBAChB,GAAG,CAAC,CAAA,OAAQ,KAAK,QAAQ,EACzB,MAAM,CAAC,CAAC,OAAO,OAAO,OAAS,KAAK,OAAO,CAAC,WAAW,OACvD,IAAI;IAEP,qBACE,8OAAC,8IAAA,CAAA,iBAAc;;0BACb,8OAAC,+IAAA,CAAA,kBAAe;gBACd,SAAQ;gBACR,MAAK;;;;;;0BAGP,8OAAC,6KAAA,CAAA,eAAY;gBACX,MAAM;gBACN,SAAS;gBACT,YAAY;;;;;;;;;;;;AAIpB","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAMhG,8BAA8B;AAG9B,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;;;;;AAEuG,EAAC,uEAAA;AAEzG,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;wCACNC,IAAAA;oCAAAA,KAAU;oCAAA;gDACV,IAAA;4CAAA;4CAAA,8BAA2C;wDAC3CC,IAAAA;oDAAAA,OAAY;oDAAA;yDACZC,UAAU;8DACVC,IAAAA,CAAAA,GAAU;wDAAA,CAAE,OAAA;4DAAA,IAAA;4DAAA;yDAAA;;mDACd;;6CACAC,UAAU;sDACRC,IAAAA,CAAAA;4CAAAA;yCAAAA,CAAYnB;;qCACd;wCACF,CAAE,SAAA,CAAA;oCAAA;iCAAA","ignoreList":[0],"debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/prisma.ts"],"sourcesContent":["import { db } from './db';\n\n// Re-export với tên khác để không phá vỡ code đang sử dụng\nexport const prisma = db;"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,SAAS,yGAAA,CAAA,KAAE","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/preview/QuizPreviewClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const QuizPreviewClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuizPreviewClient() from the server but QuizPreviewClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/quizzes/[quizId]/preview/QuizPreviewClient.tsx <module evaluation>\",\n    \"QuizPreviewClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,sGACA","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/preview/QuizPreviewClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const QuizPreviewClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuizPreviewClient() from the server but QuizPreviewClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/quizzes/[quizId]/preview/QuizPreviewClient.tsx\",\n    \"QuizPreviewClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kFACA","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/breadcrumb.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AAAA;AAEA;;;;;;AAEA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKhC,CAAC,EAAE,GAAG,OAAO,EAAE,oBAAQ,8OAAC;QAAI,KAAK;QAAK,cAAW;QAAc,GAAG,KAAK;;;;;;AACzE,WAAW,WAAW,GAAG;AAEzB,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4FACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC;QACjD,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKpC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACnC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,MAAK;QACL,iBAAc;QACd,gBAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,sBAAsB,CAAC,EAC3B,QAAQ,EACR,SAAS,EACT,GAAG,OACwB,iBAC3B,8OAAC;QACC,MAAK;QACL,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;kBAER,0BAAY,8OAAC,sNAAA,CAAA,eAAY;;;;;;;;;;AAG9B,oBAAoB,WAAW,GAAG;AAElC,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OAC0B,iBAC7B,8OAAC;QACC,MAAK;QACL,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4CAA4C;QACzD,GAAG,KAAK;;0BAET,8OAAC,0NAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAG9B,mBAAmB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/preview/page.tsx"],"sourcesContent":["import { Metadata } from \"next\";\r\nimport { getServerSession } from \"next-auth/next\";\r\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { Role } from \"@prisma/client\";\r\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\r\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { QuizPreviewClient } from \"./QuizPreviewClient\";\r\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbSeparator } from \"@/components/ui/breadcrumb\";\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Quiz Preview | OnTest\",\r\n  description: \"Preview your quiz before publishing.\",\r\n};\r\n\r\ninterface PageProps {\r\n  params: {\r\n    quizId: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Server Component for Quiz Preview page\r\n * Handles authentication and fetches quiz data\r\n */\r\nexport default async function QuizPreviewPage({ params }: PageProps) {\r\n  const quizId = params.quizId;\r\n  \r\n  // Check user authentication\r\n  const session = await getServerSession(authOptions);\r\n  \r\n  if (!session?.user) {\r\n    redirect(\"/auth/signin\");\r\n  }\r\n  \r\n  // If user is not a Teacher, redirect\r\n  if (session.user.role !== Role.TEACHER) {\r\n    redirect(\"/dashboard\");\r\n  }\r\n\r\n  // Get quiz with questions and options\r\n  const quiz = await prisma.quiz.findUnique({\r\n    where: {\r\n      id: quizId,\r\n      authorId: session.user.id,\r\n    },\r\n    include: {\r\n      questions: {\r\n        include: {\r\n          options: true,\r\n        },\r\n        orderBy: {\r\n          order: \"asc\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  // If quiz not found or doesn't belong to the teacher\r\n  if (!quiz) {\r\n    redirect(\"/dashboard/teacher/quizzes\");\r\n  }\r\n\r\n  return (\r\n    <DashboardShell>\r\n      <Breadcrumb className=\"mb-6\">\r\n        <BreadcrumbList>\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbSeparator />\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink href=\"/dashboard/teacher/quizzes\">Quizzes</BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbSeparator />\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink href={`/dashboard/teacher/quizzes/${quizId}/edit`}>{quiz.title}</BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbSeparator />\r\n          <BreadcrumbItem>Preview</BreadcrumbItem>\r\n        </BreadcrumbList>\r\n      </Breadcrumb>\r\n      \r\n      <DashboardHeader\r\n        heading=\"Quiz Preview\"\r\n        text=\"Preview your quiz as students will see it.\"\r\n      />\r\n      \r\n      <QuizPreviewClient quiz={quiz} />\r\n    </DashboardShell>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAYe,eAAe,gBAAgB,EAAE,MAAM,EAAa;IACjE,MAAM,SAAS,OAAO,MAAM;IAE5B,4BAA4B;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,6IAAA,CAAA,mBAAgB,AAAD,EAAE,iJAAA,CAAA,cAAW;IAElD,IAAI,CAAC,SAAS,MAAM;QAClB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qCAAqC;IACrC,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,6HAAA,CAAA,OAAI,CAAC,OAAO,EAAE;QACtC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,sCAAsC;IACtC,MAAM,OAAO,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YACL,IAAI;YACJ,UAAU,QAAQ,IAAI,CAAC,EAAE;QAC3B;QACA,SAAS;YACP,WAAW;gBACT,SAAS;oBACP,SAAS;gBACX;gBACA,SAAS;oBACP,OAAO;gBACT;YACF;QACF;IACF;IAEA,qDAAqD;IACrD,IAAI,CAAC,MAAM;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBACE,8OAAC,8IAAA,CAAA,iBAAc;;0BACb,8OAAC,+HAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,+HAAA,CAAA,iBAAc;;sCACb,8OAAC,+HAAA,CAAA,iBAAc;sCACb,cAAA,8OAAC,+HAAA,CAAA,iBAAc;gCAAC,MAAK;0CAAa;;;;;;;;;;;sCAEpC,8OAAC,+HAAA,CAAA,sBAAmB;;;;;sCACpB,8OAAC,+HAAA,CAAA,iBAAc;sCACb,cAAA,8OAAC,+HAAA,CAAA,iBAAc;gCAAC,MAAK;0CAA6B;;;;;;;;;;;sCAEpD,8OAAC,+HAAA,CAAA,sBAAmB;;;;;sCACpB,8OAAC,+HAAA,CAAA,iBAAc;sCACb,cAAA,8OAAC,+HAAA,CAAA,iBAAc;gCAAC,MAAM,CAAC,2BAA2B,EAAE,OAAO,KAAK,CAAC;0CAAG,KAAK,KAAK;;;;;;;;;;;sCAEhF,8OAAC,+HAAA,CAAA,sBAAmB;;;;;sCACpB,8OAAC,+HAAA,CAAA,iBAAc;sCAAC;;;;;;;;;;;;;;;;;0BAIpB,8OAAC,+IAAA,CAAA,kBAAe;gBACd,SAAQ;gBACR,MAAK;;;;;;0BAGP,8OAAC,qLAAA,CAAA,oBAAiB;gBAAC,MAAM;;;;;;;;;;;;AAG/B","debugId":null}}]
}
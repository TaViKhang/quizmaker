{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  icon?: React.ReactNode\n  error?: boolean\n  hint?: string\n  endIcon?: React.ReactNode\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, icon, error, hint, endIcon, disabled, ...props }, ref) => {\n    return (\n      <div className=\"relative flex flex-col gap-1 w-full\">\n        {/* Input wrapper for icon positioning */}\n        <div className=\"relative\">\n          {/* Start icon if provided */}\n          {icon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center pointer-events-none\">\n              {icon}\n            </div>\n          )}\n          \n      <input\n        type={type}\n        className={cn(\n              \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 shadow-sm\",\n              icon && \"pl-10\",  // Add left padding if icon is present\n              endIcon && \"pr-10\", // Add right padding if end icon is present\n              error && \"border-destructive focus-visible:ring-destructive/50\",\n          className\n        )}\n            disabled={disabled}\n        ref={ref}\n            aria-invalid={error ? \"true\" : undefined}\n        {...props}\n      />\n          \n          {/* End icon if provided */}\n          {endIcon && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center\">\n              {endIcon}\n            </div>\n          )}\n        </div>\n        \n        {/* Hint or error message */}\n        {hint && (\n          <p \n            className={cn(\n              \"text-xs\",\n              error \n                ? \"text-destructive\" \n                : \"text-muted-foreground\"\n            )}\n            id={`${props.id || ''}-hint`}\n          >\n            {hint}\n          </p>\n        )}\n      </div>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAUA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;oBAEZ,sBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAIT,8OAAC;wBACC,MAAM;wBACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACN,+WACA,QAAQ,SACR,WAAW,SACX,SAAS,wDACb;wBAEE,UAAU;wBACd,KAAK;wBACD,gBAAc,QAAQ,SAAS;wBAClC,GAAG,KAAK;;;;;;oBAIN,yBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAMN,sBACC,8OAAC;gBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,WACA,QACI,qBACA;gBAEN,IAAI,GAAG,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC;0BAE3B;;;;;;;;;;;;AAKX;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {\n    variant?: \"default\" | \"info\" | \"success\" | \"warning\" | \"destructive\"\n  }\n>(({ className, variant = \"default\", sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md px-3 py-1.5 text-xs font-medium shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        variant === \"default\" && \"bg-primary text-primary-foreground\",\n        variant === \"info\" && \"bg-info text-info-foreground\",\n        variant === \"success\" && \"bg-success text-success-foreground\",\n        variant === \"warning\" && \"bg-warning text-warning-foreground\",\n        variant === \"destructive\" && \"bg-destructive text-destructive-foreground\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipProvider\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKpC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC/D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wWACA,YAAY,aAAa,sCACzB,YAAY,UAAU,gCACtB,YAAY,aAAa,sCACzB,YAAY,aAAa,sCACzB,YAAY,iBAAiB,8CAC7B;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/ResultsTable.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { \n  Card, \n  CardContent,\n  CardDescription, \n  CardFooter, \n  CardHeader, \n  CardTitle \n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { \n  Download, \n  Search, \n  ArrowRight, \n  Info, \n  Calendar, \n  ArrowUpDown,\n  ExternalLink \n} from \"lucide-react\";\nimport { format, parseISO } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";\n\ninterface QuizResult {\n  attemptId: string;\n  quizId: string;\n  quizTitle: string;\n  quizDescription: string | null;\n  className: string | null;\n  score: number;\n  totalQuestions: number;\n  correctQuestions: number;\n  completedAt: string;\n  timeTakenMinutes: number | null;\n  feedbackAvailable: boolean;\n  category?: string; // subject\n}\n\ninterface ResultsTableProps {\n  results: QuizResult[];\n  selectedTimeFrame?: string;\n  selectedSubject?: string;\n  isLoading?: boolean;\n}\n\nexport default function ResultsTable({ \n  results = [],\n  selectedTimeFrame,\n  selectedSubject,\n  isLoading = false\n}: ResultsTableProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState<{\n    key: 'date' | 'score' | 'title';\n    direction: 'asc' | 'desc';\n  }>({\n    key: 'date',\n    direction: 'desc'\n  });\n  const pageSize = 5;\n  \n  // Filter results based on search term and selected filters\n  const filteredResults = results.filter(result => {\n    // Text search\n    const matchesSearch = !searchTerm || \n      result.quizTitle.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (result.className?.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      (result.category?.toLowerCase().includes(searchTerm.toLowerCase()));\n      \n    // Subject filter - already filtered on the server, but just in case\n    const matchesSubject = !selectedSubject || \n      result.category?.toLowerCase() === selectedSubject.toLowerCase();\n    \n    return matchesSearch && matchesSubject;\n  });\n  \n  // Sort results based on sort config\n  const sortedResults = [...filteredResults].sort((a, b) => {\n    let comparison = 0;\n    \n    if (sortConfig.key === 'date') {\n      comparison = new Date(a.completedAt).getTime() - new Date(b.completedAt).getTime();\n    } else if (sortConfig.key === 'score') {\n      comparison = a.score - b.score;\n    } else if (sortConfig.key === 'title') {\n      comparison = a.quizTitle.localeCompare(b.quizTitle);\n    }\n    \n    return sortConfig.direction === 'desc' ? -comparison : comparison;\n  });\n  \n  // Paginate results\n  const totalPages = Math.ceil(sortedResults.length / pageSize);\n  const paginatedResults = sortedResults.slice(\n    (currentPage - 1) * pageSize,\n    currentPage * pageSize\n  );\n  \n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n  \n  // Handle sort change\n  const handleSortChange = (key: 'date' | 'score' | 'title') => {\n    // If we're already sorting by this key, toggle direction\n    if (sortConfig.key === key) {\n      setSortConfig({\n        key,\n        direction: sortConfig.direction === 'asc' ? 'desc' : 'asc'\n      });\n    } else {\n      // Otherwise, sort by this key, descending\n      setSortConfig({\n        key,\n        direction: 'desc'\n      });\n    }\n  };\n  \n  // Helper to format date\n  const formatDate = (dateStr: string) => {\n    try {\n      return format(parseISO(dateStr), \"dd MMM yyyy\");\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  // Helper to determine score color\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return \"text-emerald-600 dark:text-emerald-500\";\n    if (score >= 60) return \"text-amber-600 dark:text-amber-500\";\n    return \"text-red-600 dark:text-red-500\";\n  };\n  \n  return (\n    <Card className={cn(isLoading && \"opacity-70 pointer-events-none\")}>\n      <CardHeader>\n        <div className=\"flex flex-col sm:flex-row justify-between sm:items-center gap-4\">\n          <div>\n            <CardTitle>Assessment History</CardTitle>\n            <CardDescription>\n              Details of your completed assessments\n            </CardDescription>\n          </div>\n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\" \n                  className=\"gap-1 self-start\"\n                  aria-label=\"Export results as CSV\"\n                >\n                  <Download className=\"h-4 w-4\" /> Export\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>Export your results as CSV</p>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center gap-4 mb-4\">\n          <div className=\"relative flex-1\">\n            <Search \n              className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" \n              aria-hidden=\"true\"\n            />\n            <Input \n              type=\"search\" \n              placeholder=\"Search results...\" \n              className=\"pl-8\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              aria-label=\"Search assessment results\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"relative w-full overflow-auto\">\n          <table \n            className=\"w-full caption-bottom text-sm\"\n            aria-label=\"Assessment results table\"\n          >\n            <thead>\n              <tr className=\"border-b\">\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-left align-middle font-medium\"\n                >\n                  <button \n                    onClick={() => handleSortChange('title')}\n                    className=\"flex items-center gap-1 hover:text-primary\"\n                    aria-label=\"Sort by assessment name\"\n                >\n                  Assessment Name\n                    {sortConfig.key === 'title' && (\n                      <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                    )}\n                  </button>\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-left align-middle font-medium\"\n                >\n                  Subject\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-left align-middle font-medium\"\n                >\n                  <button \n                    onClick={() => handleSortChange('date')}\n                    className={cn(\n                      \"flex items-center gap-1 hover:text-primary\",\n                      sortConfig.key === 'date' && \"text-primary\"\n                    )}\n                    aria-label=\"Sort by date\"\n                >\n                  Date\n                    {sortConfig.key === 'date' && (\n                      <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                    )}\n                  </button>\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-right align-middle font-medium\"\n                >\n                  <button \n                    onClick={() => handleSortChange('score')}\n                    className=\"flex items-center gap-1 hover:text-primary ml-auto\"\n                    aria-label=\"Sort by score\"\n                >\n                  Score\n                    {sortConfig.key === 'score' && (\n                      <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                    )}\n                  </button>\n                </th>\n                <th \n                  scope=\"col\"\n                  className=\"h-12 px-4 text-right align-middle font-medium\"\n                >\n                  Action\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {paginatedResults.length > 0 ? (\n                paginatedResults.map((result) => (\n                  <tr \n                    key={result.attemptId} \n                    className=\"border-b hover:bg-muted/50 transition-colors\"\n                  >\n                    <td className=\"p-4 align-middle font-medium\">\n                      <div className=\"flex items-center gap-2\">\n                        {result.quizTitle}\n                        {result.quizDescription && (\n                          <TooltipProvider>\n                            <Tooltip>\n                              <TooltipTrigger asChild>\n                                <Info className=\"h-4 w-4 text-muted-foreground cursor-help\" />\n                              </TooltipTrigger>\n                              <TooltipContent>\n                                <p>{result.quizDescription}</p>\n                              </TooltipContent>\n                            </Tooltip>\n                          </TooltipProvider>\n                        )}\n                      </div>\n                      {result.className && (\n                        <div className=\"text-xs text-muted-foreground flex items-center gap-1.5\">\n                          <Calendar className=\"h-3 w-3\" /> {result.className}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"p-4 align-middle\">\n                      {result.category ? (\n                        <Badge \n                          variant=\"outline\"\n                          className={cn(\n                            \"transition-colors\",\n                            result.score >= 80 && \"border-green-200 bg-green-50 text-green-700 dark:bg-green-950 dark:text-green-300 dark:border-green-800\",\n                            result.score >= 60 && result.score < 80 && \"border-amber-200 bg-amber-50 text-amber-700 dark:bg-amber-950 dark:text-amber-300 dark:border-amber-800\",\n                            result.score < 60 && \"border-red-200 bg-red-50 text-red-700 dark:bg-red-950 dark:text-red-300 dark:border-red-800\"\n                          )}\n                        >\n                          {result.category}\n                        </Badge>\n                      ) : (\n                        <span className=\"text-muted-foreground\">-</span>\n                      )}\n                    </td>\n                    <td className=\"p-4 align-middle text-muted-foreground\">\n                      <time dateTime={result.completedAt}>\n                        {formatDate(result.completedAt)}\n                      </time>\n                    </td>\n                    <td className=\"p-4 align-middle text-right\">\n                      <span \n                        className={cn(\n                          \"font-bold transition-colors\",\n                          getScoreColor(result.score)\n                        )}\n                        aria-label={`Score: ${result.score.toFixed(1)}%`}\n                      >\n                        {result.score.toFixed(1)}%\n                      </span>\n                    </td>\n                    <td className=\"p-4 align-middle text-right\">\n                      <TooltipProvider>\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <Link \n                              href={`/dashboard/student/quizzes/results/${result.attemptId}`}\n                              aria-label={`View details for ${result.quizTitle}`}\n                            >\n                              <Button \n                                size=\"sm\" \n                                variant=\"outline\" \n                                className=\"gap-1 transition-colors\"\n                              >\n                                Details <ExternalLink className=\"h-3 w-3\" />\n                              </Button>\n                            </Link>\n                          </TooltipTrigger>\n                          <TooltipContent>\n                            <p>View detailed results and feedback</p>\n                          </TooltipContent>\n                        </Tooltip>\n                      </TooltipProvider>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td \n                    colSpan={5} \n                    className=\"h-24 text-center\"\n                    aria-label=\"No results found\"\n                  >\n                    <div className=\"flex flex-col items-center justify-center gap-2 py-4\">\n                      <Info className=\"h-8 w-8 text-muted-foreground opacity-40\" />\n                      <p className=\"text-muted-foreground font-medium\">No results found</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {searchTerm ? \"Try adjusting your search term or filters\" : \"Complete assessments to see your results\"}\n                      </p>\n                    </div>\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n      {totalPages > 1 && (\n        <CardFooter className=\"flex justify-between items-center pt-6\">\n          <div className=\"text-sm text-muted-foreground\">\n            Page {currentPage} of {totalPages}\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => handlePageChange(currentPage - 1)}\n              disabled={currentPage === 1}\n              aria-label=\"Previous page\"\n            >\n              Previous\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => handlePageChange(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              aria-label=\"Next page\"\n            >\n              Next\n            </Button>\n          </div>\n        </CardFooter>\n      )}\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AA/BA;;;;;;;;;;;;AAuDe,SAAS,aAAa,EACnC,UAAU,EAAE,EACZ,iBAAiB,EACjB,eAAe,EACf,YAAY,KAAK,EACC;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAGxC;QACD,KAAK;QACL,WAAW;IACb;IACA,MAAM,WAAW;IAEjB,2DAA2D;IAC3D,MAAM,kBAAkB,QAAQ,MAAM,CAAC,CAAA;QACrC,cAAc;QACd,MAAM,gBAAgB,CAAC,cACrB,OAAO,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC7D,OAAO,SAAS,EAAE,cAAc,SAAS,WAAW,WAAW,OAC/D,OAAO,QAAQ,EAAE,cAAc,SAAS,WAAW,WAAW;QAEjE,oEAAoE;QACpE,MAAM,iBAAiB,CAAC,mBACtB,OAAO,QAAQ,EAAE,kBAAkB,gBAAgB,WAAW;QAEhE,OAAO,iBAAiB;IAC1B;IAEA,oCAAoC;IACpC,MAAM,gBAAgB;WAAI;KAAgB,CAAC,IAAI,CAAC,CAAC,GAAG;QAClD,IAAI,aAAa;QAEjB,IAAI,WAAW,GAAG,KAAK,QAAQ;YAC7B,aAAa,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO;QAClF,OAAO,IAAI,WAAW,GAAG,KAAK,SAAS;YACrC,aAAa,EAAE,KAAK,GAAG,EAAE,KAAK;QAChC,OAAO,IAAI,WAAW,GAAG,KAAK,SAAS;YACrC,aAAa,EAAE,SAAS,CAAC,aAAa,CAAC,EAAE,SAAS;QACpD;QAEA,OAAO,WAAW,SAAS,KAAK,SAAS,CAAC,aAAa;IACzD;IAEA,mBAAmB;IACnB,MAAM,aAAa,KAAK,IAAI,CAAC,cAAc,MAAM,GAAG;IACpD,MAAM,mBAAmB,cAAc,KAAK,CAC1C,CAAC,cAAc,CAAC,IAAI,UACpB,cAAc;IAGhB,qBAAqB;IACrB,MAAM,mBAAmB,CAAC;QACxB,eAAe;IACjB;IAEA,qBAAqB;IACrB,MAAM,mBAAmB,CAAC;QACxB,yDAAyD;QACzD,IAAI,WAAW,GAAG,KAAK,KAAK;YAC1B,cAAc;gBACZ;gBACA,WAAW,WAAW,SAAS,KAAK,QAAQ,SAAS;YACvD;QACF,OAAO;YACL,0CAA0C;YAC1C,cAAc;gBACZ;gBACA,WAAW;YACb;QACF;IACF;IAEA,wBAAwB;IACxB,MAAM,aAAa,CAAC;QAClB,IAAI;YACF,OAAO,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;QACnC,EAAE,OAAO,GAAG;YACV,OAAO;QACT;IACF;IAEA,kCAAkC;IAClC,MAAM,gBAAgB,CAAC;QACrB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,OAAO;IACT;IAEA,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;;0BAC/B,8OAAC,yHAAA,CAAA,aAAU;0BACT,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC,yHAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,yHAAA,CAAA,kBAAe;8CAAC;;;;;;;;;;;;sCAInB,8OAAC,4HAAA,CAAA,kBAAe;sCACd,cAAA,8OAAC,4HAAA,CAAA,UAAO;;kDACN,8OAAC,4HAAA,CAAA,iBAAc;wCAAC,OAAO;kDACrB,cAAA,8OAAC,2HAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,WAAU;4CACV,cAAW;;8DAEX,8OAAC,0MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAAY;;;;;;;;;;;;kDAGpC,8OAAC,4HAAA,CAAA,iBAAc;kDACb,cAAA,8OAAC;sDAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMb,8OAAC,yHAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,sMAAA,CAAA,SAAM;oCACL,WAAU;oCACV,eAAY;;;;;;8CAEd,8OAAC,0HAAA,CAAA,QAAK;oCACJ,MAAK;oCACL,aAAY;oCACZ,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,cAAW;;;;;;;;;;;;;;;;;kCAKjB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,WAAU;4BACV,cAAW;;8CAEX,8OAAC;8CACC,cAAA,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC;gDACC,OAAM;gDACN,WAAU;0DAEV,cAAA,8OAAC;oDACC,SAAS,IAAM,iBAAiB;oDAChC,WAAU;oDACV,cAAW;;wDACd;wDAEI,WAAW,GAAG,KAAK,yBAClB,8OAAC,wNAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAI7B,8OAAC;gDACC,OAAM;gDACN,WAAU;0DACX;;;;;;0DAGD,8OAAC;gDACC,OAAM;gDACN,WAAU;0DAEV,cAAA,8OAAC;oDACC,SAAS,IAAM,iBAAiB;oDAChC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8CACA,WAAW,GAAG,KAAK,UAAU;oDAE/B,cAAW;;wDACd;wDAEI,WAAW,GAAG,KAAK,wBAClB,8OAAC,wNAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAI7B,8OAAC;gDACC,OAAM;gDACN,WAAU;0DAEV,cAAA,8OAAC;oDACC,SAAS,IAAM,iBAAiB;oDAChC,WAAU;oDACV,cAAW;;wDACd;wDAEI,WAAW,GAAG,KAAK,yBAClB,8OAAC,wNAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAI7B,8OAAC;gDACC,OAAM;gDACN,WAAU;0DACX;;;;;;;;;;;;;;;;;8CAKL,8OAAC;8CACE,iBAAiB,MAAM,GAAG,IACzB,iBAAiB,GAAG,CAAC,CAAC,uBACpB,8OAAC;4CAEC,WAAU;;8DAEV,8OAAC;oDAAG,WAAU;;sEACZ,8OAAC;4DAAI,WAAU;;gEACZ,OAAO,SAAS;gEAChB,OAAO,eAAe,kBACrB,8OAAC,4HAAA,CAAA,kBAAe;8EACd,cAAA,8OAAC,4HAAA,CAAA,UAAO;;0FACN,8OAAC,4HAAA,CAAA,iBAAc;gFAAC,OAAO;0FACrB,cAAA,8OAAC,kMAAA,CAAA,OAAI;oFAAC,WAAU;;;;;;;;;;;0FAElB,8OAAC,4HAAA,CAAA,iBAAc;0FACb,cAAA,8OAAC;8FAAG,OAAO,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDAMnC,OAAO,SAAS,kBACf,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;gEAAY;gEAAE,OAAO,SAAS;;;;;;;;;;;;;8DAIxD,8OAAC;oDAAG,WAAU;8DACX,OAAO,QAAQ,iBACd,8OAAC,0HAAA,CAAA,QAAK;wDACJ,SAAQ;wDACR,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qBACA,OAAO,KAAK,IAAI,MAAM,2GACtB,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,GAAG,MAAM,2GAC3C,OAAO,KAAK,GAAG,MAAM;kEAGtB,OAAO,QAAQ;;;;;6EAGlB,8OAAC;wDAAK,WAAU;kEAAwB;;;;;;;;;;;8DAG5C,8OAAC;oDAAG,WAAU;8DACZ,cAAA,8OAAC;wDAAK,UAAU,OAAO,WAAW;kEAC/B,WAAW,OAAO,WAAW;;;;;;;;;;;8DAGlC,8OAAC;oDAAG,WAAU;8DACZ,cAAA,8OAAC;wDACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+BACA,cAAc,OAAO,KAAK;wDAE5B,cAAY,CAAC,OAAO,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;4DAE/C,OAAO,KAAK,CAAC,OAAO,CAAC;4DAAG;;;;;;;;;;;;8DAG7B,8OAAC;oDAAG,WAAU;8DACZ,cAAA,8OAAC,4HAAA,CAAA,kBAAe;kEACd,cAAA,8OAAC,4HAAA,CAAA,UAAO;;8EACN,8OAAC,4HAAA,CAAA,iBAAc;oEAAC,OAAO;8EACrB,cAAA,8OAAC,4JAAA,CAAA,UAAI;wEACH,MAAM,CAAC,mCAAmC,EAAE,OAAO,SAAS,EAAE;wEAC9D,cAAY,CAAC,iBAAiB,EAAE,OAAO,SAAS,EAAE;kFAElD,cAAA,8OAAC,2HAAA,CAAA,SAAM;4EACL,MAAK;4EACL,SAAQ;4EACR,WAAU;;gFACX;8FACS,8OAAC,sNAAA,CAAA,eAAY;oFAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;8EAItC,8OAAC,4HAAA,CAAA,iBAAc;8EACb,cAAA,8OAAC;kFAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CA5EN,OAAO,SAAS;;;;kEAoFzB,8OAAC;kDACC,cAAA,8OAAC;4CACC,SAAS;4CACT,WAAU;4CACV,cAAW;sDAEX,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,kMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;kEAChB,8OAAC;wDAAE,WAAU;kEAAoC;;;;;;kEACjD,8OAAC;wDAAE,WAAU;kEACV,aAAa,8CAA8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAU7E,aAAa,mBACZ,8OAAC,yHAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC;wBAAI,WAAU;;4BAAgC;4BACvC;4BAAY;4BAAK;;;;;;;kCAEzB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,2HAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,iBAAiB,cAAc;gCAC9C,UAAU,gBAAgB;gCAC1B,cAAW;0CACZ;;;;;;0CAGD,8OAAC,2HAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,iBAAiB,cAAc;gCAC9C,UAAU,gBAAgB;gCAC1B,cAAW;0CACZ;;;;;;;;;;;;;;;;;;;;;;;;AAQb","debugId":null}},
    {"offset": {"line": 1084, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,8OAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,8OAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1241, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/ScoreChart.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ResponsiveContainer, LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, TooltipProps } from \"recharts\";\nimport { format, parseISO, isValid } from \"date-fns\";\nimport { LineChart } from \"lucide-react\";\n\ninterface TimePointScoreData {\n  date: string; // ISO YYYY-MM-DD\n  averageScore: number;\n  assessmentCount: number;\n}\n\ninterface ScoreChartProps {\n  timeSeriesData: TimePointScoreData[];\n  timeFrame: string;\n}\n\nexport default function ScoreChart({ timeSeriesData, timeFrame }: ScoreChartProps) {\n  // Check if we have valid data to display\n  const hasValidData = Array.isArray(timeSeriesData) && \n    timeSeriesData.length > 1 && \n    timeSeriesData.some(point => point.averageScore > 0);\n  \n  const formatDateLabel = (dateStr: string) => {\n    try {\n    const date = parseISO(dateStr);\n      if (!isValid(date)) return dateStr;\n    \n    // Format based on timeframe\n    if (timeFrame === 'last7days') {\n      return format(date, 'EEE'); // Day name (Mon, Tue, etc.)\n    } else if (timeFrame === 'last30days') {\n        return format(date, 'dd MMM'); // 01 Jan\n      } else if (timeFrame === 'last90days') {\n      return format(date, 'dd MMM'); // 01 Jan\n    } else {\n      return format(date, 'MMM yy'); // Jan 23\n      }\n    } catch (e) {\n      // If parsing fails, return the original string\n      return dateStr;\n    }\n  };\n  \n  const CustomTooltip = ({ \n    active, \n    payload, \n    label \n  }: TooltipProps<number, string>) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white dark:bg-slate-800 p-3 border rounded-md shadow-sm\">\n          <p className=\"font-medium\">{formatDateLabel(label)}</p>\n          <p className=\"text-emerald-600 dark:text-emerald-400 font-medium\">\n            Score: {payload[0].value?.toFixed(1)}%\n          </p>\n          <p className=\"text-xs text-muted-foreground\">\n            Based on {payload[0].payload.assessmentCount} {payload[0].payload.assessmentCount === 1 ? 'assessment' : 'assessments'}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Score Progress</CardTitle>\n        <CardDescription>\n          Your average scores over time\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-2\">\n        <div className=\"h-[300px]\">\n          {hasValidData ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <RechartsLineChart\n                data={timeSeriesData}\n                margin={{\n                  top: 20,\n                  right: 10,\n                  left: 0,\n                  bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} opacity={0.3} />\n                <XAxis \n                  dataKey=\"date\" \n                  tickFormatter={formatDateLabel}\n                  tick={{ fontSize: 12 }}\n                />\n                <YAxis \n                  domain={[0, 100]}\n                  tickCount={6}\n                  tick={{ fontSize: 12 }}\n                  tickFormatter={(value) => `${value}%`}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"averageScore\"\n                  stroke=\"#10b981\"\n                  strokeWidth={2}\n                  dot={{ r: 4 }}\n                  activeDot={{ r: 6 }}\n                  name=\"Average Score\"\n                />\n              </RechartsLineChart>\n            </ResponsiveContainer>\n          ) : (\n            <div className=\"h-full flex flex-col items-center justify-center text-center p-6\">\n              <LineChart className=\"h-12 w-12 text-muted-foreground opacity-20 mb-2\" />\n              <p className=\"text-muted-foreground font-medium\">Not enough data to display chart</p>\n              <p className=\"text-xs text-muted-foreground mt-1 max-w-xs\">\n                Complete more assessments to see your score progress over time\n              </p>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1500, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1539, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/SubjectAnalysis.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { BookOpen } from \"lucide-react\";\n\ninterface SubjectPerformance {\n  subject: string;\n  averageScore: number;\n  assessmentCount: number;\n  trend?: number | null; // Percentage change compared to previous period\n}\n\ninterface SubjectAnalysisProps {\n  subjectPerformance: SubjectPerformance[];\n  selectedSubject?: string;\n}\n\nexport default function SubjectAnalysis({ \n  subjectPerformance,\n  selectedSubject\n}: SubjectAnalysisProps) {\n  // Check if we have valid data\n  const hasData = Array.isArray(subjectPerformance) && subjectPerformance.length > 0;\n  \n  // Filter and sort subjects by average score (highest first)\n  const sortedSubjects = hasData \n    ? [...subjectPerformance]\n        .filter(s => !selectedSubject || s.subject === selectedSubject)\n        .sort((a, b) => b.averageScore - a.averageScore)\n    : [];\n  \n  // Helper to determine color based on score\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return \"emerald\";\n    if (score >= 60) return \"amber\";\n    return \"red\";\n  };\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Subject Performance</CardTitle>\n        <CardDescription>\n          Your scores and progress by subject\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        {sortedSubjects.length > 0 ? (\n          <div className=\"space-y-4\">\n            {sortedSubjects.map((subject) => {\n              const scoreColor = getScoreColor(subject.averageScore);\n              \n              return (\n                <div key={subject.subject} className=\"space-y-1\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium\">{subject.subject}</span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm font-bold\">{subject.averageScore.toFixed(1)}%</span>\n                      {subject.trend !== undefined && subject.trend !== null && (\n                        <Badge className={`${\n                          subject.trend > 0 \n                            ? \"bg-green-50 text-green-700 hover:bg-green-50 dark:bg-green-950 dark:text-green-300\" \n                            : subject.trend < 0 \n                              ? \"bg-red-50 text-red-700 hover:bg-red-50 dark:bg-red-950 dark:text-red-300\"\n                              : \"bg-slate-50 text-slate-700 hover:bg-slate-50 dark:bg-slate-800 dark:text-slate-300\"\n                        }`}>\n                          {subject.trend > 0 ? \"+\" : \"\"}\n                          {subject.trend.toFixed(1)}%\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                  <div className={`bg-${scoreColor}-100 dark:bg-${scoreColor}-950 rounded-full h-2`}>\n                    <Progress \n                      value={subject.averageScore} \n                      className={`bg-${scoreColor}-600 dark:bg-${scoreColor}-500`}\n                    />\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    Based on {subject.assessmentCount} {subject.assessmentCount === 1 ? 'assessment' : 'assessments'}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"py-12 text-center\">\n            <BookOpen className=\"h-12 w-12 mx-auto text-muted-foreground opacity-20 mb-2\" />\n            <p className=\"text-muted-foreground font-medium\">No subject data available</p>\n            <p className=\"text-xs text-muted-foreground mt-1 max-w-sm mx-auto\">\n              {selectedSubject \n                ? `No data available for ${selectedSubject}. Try selecting a different subject or time period.`\n                : \"Complete assessments to see your subject performance breakdown.\"}\n            </p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAmBe,SAAS,gBAAgB,EACtC,kBAAkB,EAClB,eAAe,EACM;IACrB,8BAA8B;IAC9B,MAAM,UAAU,MAAM,OAAO,CAAC,uBAAuB,mBAAmB,MAAM,GAAG;IAEjF,4DAA4D;IAC5D,MAAM,iBAAiB,UACnB;WAAI;KAAmB,CACpB,MAAM,CAAC,CAAA,IAAK,CAAC,mBAAmB,EAAE,OAAO,KAAK,iBAC9C,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,YAAY,GAAG,EAAE,YAAY,IACjD,EAAE;IAEN,2CAA2C;IAC3C,MAAM,gBAAgB,CAAC;QACrB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,OAAO;IACT;IAEA,qBACE,8OAAC,yHAAA,CAAA,OAAI;;0BACH,8OAAC,yHAAA,CAAA,aAAU;;kCACT,8OAAC,yHAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,yHAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAInB,8OAAC,yHAAA,CAAA,cAAW;0BACT,eAAe,MAAM,GAAG,kBACvB,8OAAC;oBAAI,WAAU;8BACZ,eAAe,GAAG,CAAC,CAAC;wBACnB,MAAM,aAAa,cAAc,QAAQ,YAAY;wBAErD,qBACE,8OAAC;4BAA0B,WAAU;;8CACnC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAuB,QAAQ,OAAO;;;;;;sDACtD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;;wDAAqB,QAAQ,YAAY,CAAC,OAAO,CAAC;wDAAG;;;;;;;gDACpE,QAAQ,KAAK,KAAK,aAAa,QAAQ,KAAK,KAAK,sBAChD,8OAAC,0HAAA,CAAA,QAAK;oDAAC,WAAW,GAChB,QAAQ,KAAK,GAAG,IACZ,uFACA,QAAQ,KAAK,GAAG,IACd,6EACA,sFACN;;wDACC,QAAQ,KAAK,GAAG,IAAI,MAAM;wDAC1B,QAAQ,KAAK,CAAC,OAAO,CAAC;wDAAG;;;;;;;;;;;;;;;;;;;8CAKlC,8OAAC;oCAAI,WAAW,CAAC,GAAG,EAAE,WAAW,aAAa,EAAE,WAAW,qBAAqB,CAAC;8CAC/E,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wCACP,OAAO,QAAQ,YAAY;wCAC3B,WAAW,CAAC,GAAG,EAAE,WAAW,aAAa,EAAE,WAAW,IAAI,CAAC;;;;;;;;;;;8CAG/D,8OAAC;oCAAI,WAAU;;wCAAgC;wCACnC,QAAQ,eAAe;wCAAC;wCAAE,QAAQ,eAAe,KAAK,IAAI,eAAe;;;;;;;;2BA1B7E,QAAQ,OAAO;;;;;oBA8B7B;;;;;yCAGF,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;4BAAE,WAAU;sCAAoC;;;;;;sCACjD,8OAAC;4BAAE,WAAU;sCACV,kBACG,CAAC,sBAAsB,EAAE,gBAAgB,mDAAmD,CAAC,GAC7F;;;;;;;;;;;;;;;;;;;;;;;AAOlB","debugId":null}},
    {"offset": {"line": 1736, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/results/components/LearningProgress.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  ResponsiveContainer, \n  AreaChart, \n  Area, \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  TooltipProps \n} from \"recharts\";\nimport { useAnalytics } from \"@/components/providers/analytics-provider\";\nimport { BookOpen, BarChart3, TrendingUp, AlertTriangle } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { format, parseISO } from \"date-fns\";\n\ninterface LearningProgressProps {\n  timeFrame: string;\n  selectedSubject?: string;\n}\n\nexport default function LearningProgress({ \n  timeFrame, \n  selectedSubject \n}: LearningProgressProps) {\n  const [activeTab, setActiveTab] = useState(\"progress\");\n  \n  const { \n    quizCompletionData,\n    isLoadingQuizCompletion,\n    quizCompletionError,\n    fetchQuizCompletion,\n    timeFrame: currentAnalyticsTimeFrame,\n    setTimeFrame: setAnalyticsTimeFrame\n  } = useAnalytics();\n  \n  // Fetch data when timeFrame changes or on initial load\n  useEffect(() => {\n    // Update the analytics provider timeFrame when our prop changes\n    if (currentAnalyticsTimeFrame !== timeFrame) {\n      setAnalyticsTimeFrame(timeFrame as any);\n    }\n    \n    // Always fetch fresh data when params change\n    fetchQuizCompletion();\n  }, [timeFrame, selectedSubject, fetchQuizCompletion, currentAnalyticsTimeFrame, setAnalyticsTimeFrame]);\n  \n  // Use Raw data or provide default if not available\n  const completionTrends = quizCompletionData?.completionTrends || [];\n  const categoryAnalysis = quizCompletionData?.categoryAnalysis || [];\n  \n  // Generate fallback data for visualizations if we have some data but not the exact visualization data\n  let usableCompletionTrends = completionTrends;\n  if (completionTrends.length === 0 && quizCompletionData?.keyMetrics && quizCompletionData.keyMetrics.completedQuizzes > 0) {\n    // Generate minimal placeholder data based on overall metrics\n    const today = new Date();\n    usableCompletionTrends = [\n      {\n        period: format(today, 'yyyy-MM-dd'),\n        completedCount: quizCompletionData.keyMetrics.completedQuizzes || 0,\n        averageScore: quizCompletionData.keyMetrics.averageScore || 0\n      }\n    ];\n  }\n  \n  // Filter data based on selected subject\n  const filteredCategoryAnalysis = !selectedSubject \n    ? categoryAnalysis \n    : categoryAnalysis.filter(item => \n        item.category.toLowerCase() === selectedSubject.toLowerCase()\n      );\n  \n  // Format date for X-axis\n  const formatXAxis = (dateStr: string) => {\n    try {\n      const date = parseISO(dateStr);\n      if (timeFrame === 'last7days') {\n        return format(date, 'EEE'); // Mon, Tue, etc.\n      } else if (timeFrame === 'last30days') {\n        return format(date, 'dd MMM'); // 01 Jan\n      } else {\n        return format(date, 'MMM yy'); // Jan 22\n      }\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  // Custom tooltip for charts\n  const CustomTooltip = ({ active, payload, label }: TooltipProps<number, string>) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white dark:bg-slate-800 p-3 border rounded-md shadow-md\">\n          <p className=\"font-medium mb-1\">{formatXAxis(label)}</p>\n          {payload.map((entry, index) => (\n            <p \n              key={`item-${index}`}\n              className=\"text-sm flex items-center gap-1\"\n              style={{ color: entry.color }}\n            >\n              <span>{entry.name}: </span>\n              <span className=\"font-medium\">\n                {entry.name?.includes('Rate') || entry.name?.includes('Score') \n                  ? `${entry.value}%` \n                  : entry.value}\n              </span>\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n  \n  // Show loading state\n  if (isLoadingQuizCompletion) {\n    return (\n      <>\n        <CardHeader>\n          <CardTitle>Learning Progress</CardTitle>\n          <CardDescription>Your progress over time</CardDescription>\n        </CardHeader>\n        <CardContent className=\"pb-2\">\n          <div className=\"space-y-8\">\n            <Skeleton className=\"h-10 w-60\" />\n            <Skeleton className=\"h-[300px] w-full\" />\n          </div>\n        </CardContent>\n      </>\n    );\n  }\n  \n  // Show error state\n  if (quizCompletionError) {\n    return (\n      <>\n        <CardHeader>\n          <CardTitle>Learning Progress</CardTitle>\n          <CardDescription>Your progress over time</CardDescription>\n        </CardHeader>\n        <CardContent className=\"pb-2\">\n          <div className=\"h-[300px] flex flex-col items-center justify-center\">\n            <AlertTriangle className=\"h-12 w-12 text-amber-500 mb-4\" />\n            <p className=\"text-lg font-medium text-center mb-2\">Unable to load progress data</p>\n            <p className=\"text-muted-foreground text-center\">\n              There was an error loading your learning progress. Please try again later.\n            </p>\n          </div>\n        </CardContent>\n      </>\n    );\n  }\n  \n  // Empty state\n  const noData = (completionTrends.length === 0 && categoryAnalysis.length === 0);\n  if (noData) {\n    return (\n      <>\n        <CardHeader>\n          <CardTitle>Learning Progress</CardTitle>\n          <CardDescription>Your progress over time</CardDescription>\n        </CardHeader>\n        <CardContent className=\"pb-2\">\n          <div className=\"h-[300px] flex flex-col items-center justify-center\">\n            <BookOpen className=\"h-12 w-12 text-muted-foreground opacity-30 mb-4\" />\n            <p className=\"text-lg font-medium text-center mb-2\">No progress data available</p>\n            <p className=\"text-muted-foreground text-center max-w-md\">\n              Complete more assessments to track your learning progress over time.\n            </p>\n          </div>\n        </CardContent>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <CardHeader>\n        <CardTitle>Learning Progress</CardTitle>\n        <CardDescription>Track your performance trends over time</CardDescription>\n      </CardHeader>\n      <CardContent className=\"pb-2\">\n        <Tabs defaultValue=\"progress\" value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"mb-4\">\n            <TabsTrigger value=\"progress\" className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-4 w-4\" />\n              <span>Completion Trends</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"categories\" className=\"flex items-center gap-2\">\n              <BarChart3 className=\"h-4 w-4\" />\n              <span>Category Analysis</span>\n            </TabsTrigger>\n          </TabsList>\n          \n          <TabsContent value=\"progress\" className=\"mt-0\">\n            {usableCompletionTrends.length > 0 ? (\n              <div className=\"h-[350px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <AreaChart\n                    data={usableCompletionTrends}\n                    margin={{ top: 20, right: 30, left: 0, bottom: 20 }}\n                  >\n                    <defs>\n                      <linearGradient id=\"colorCompleted\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#10b981\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#10b981\" stopOpacity={0.1} />\n                      </linearGradient>\n                      <linearGradient id=\"colorScore\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#3b82f6\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#3b82f6\" stopOpacity={0.1} />\n                      </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" vertical={false} opacity={0.3} />\n                    <XAxis \n                      dataKey=\"period\" \n                      tickFormatter={formatXAxis}\n                      tick={{ fontSize: 12 }}\n                    />\n                    <YAxis \n                      yAxisId=\"left\"\n                      tick={{ fontSize: 12 }}\n                      domain={[0, 'dataMax + 2']}\n                    />\n                    <YAxis \n                      yAxisId=\"right\"\n                      orientation=\"right\"\n                      domain={[0, 100]}\n                      tick={{ fontSize: 12 }}\n                      tickFormatter={(value) => `${value}%`}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"completedCount\"\n                      name=\"Completed Assessments\"\n                      stroke=\"#10b981\"\n                      strokeWidth={2}\n                      fillOpacity={1}\n                      fill=\"url(#colorCompleted)\"\n                      yAxisId=\"left\"\n                    />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"averageScore\"\n                      name=\"Average Score\"\n                      stroke=\"#3b82f6\"\n                      strokeWidth={2}\n                      fillOpacity={1}\n                      fill=\"url(#colorScore)\"\n                      yAxisId=\"right\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            ) : (\n              <div className=\"h-[300px] flex flex-col items-center justify-center\">\n                <TrendingUp className=\"h-12 w-12 text-muted-foreground opacity-30 mb-4\" />\n                <p className=\"text-lg font-medium text-center mb-2\">Not enough trend data</p>\n                <p className=\"text-muted-foreground text-center max-w-md\">\n                  Complete more assessments to see your progress trends over time.\n                </p>\n              </div>\n            )}\n          </TabsContent>\n          \n          <TabsContent value=\"categories\" className=\"mt-0\">\n            {filteredCategoryAnalysis.length > 0 ? (\n              <div className=\"h-[350px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={filteredCategoryAnalysis}\n                    margin={{ top: 20, right: 30, left: 0, bottom: 60 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" vertical={false} opacity={0.3} />\n                    <XAxis \n                      dataKey=\"category\" \n                      tick={{ fontSize: 12 }} \n                      interval={0}\n                      angle={-45}\n                      textAnchor=\"end\"\n                    />\n                    <YAxis \n                      yAxisId=\"left\"\n                      tick={{ fontSize: 12 }}\n                    />\n                    <YAxis \n                      yAxisId=\"right\"\n                      orientation=\"right\"\n                      domain={[0, 100]}\n                      tickFormatter={(value) => `${value}%`}\n                      tick={{ fontSize: 12 }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend />\n                    <Bar \n                      yAxisId=\"left\"\n                      dataKey=\"quizCount\" \n                      name=\"Total Quizzes\" \n                      fill=\"#94a3b8\" \n                      radius={[4, 4, 0, 0]} \n                    />\n                    <Bar \n                      yAxisId=\"left\"\n                      dataKey=\"completedCount\" \n                      name=\"Completed\" \n                      fill=\"#10b981\" \n                      radius={[4, 4, 0, 0]} \n                    />\n                    <Bar \n                      yAxisId=\"right\"\n                      dataKey=\"completionRate\" \n                      name=\"Completion Rate\" \n                      fill=\"#f59e0b\" \n                      radius={[4, 4, 0, 0]} \n                    />\n                    <Bar \n                      yAxisId=\"right\"\n                      dataKey=\"averageScore\" \n                      name=\"Average Score\" \n                      fill=\"#3b82f6\" \n                      radius={[4, 4, 0, 0]} \n                    />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            ) : (\n              <div className=\"h-[300px] flex flex-col items-center justify-center\">\n                <BarChart3 className=\"h-12 w-12 text-muted-foreground opacity-30 mb-4\" />\n                <p className=\"text-lg font-medium text-center mb-2\">\n                  {selectedSubject \n                    ? `No data available for ${selectedSubject}` \n                    : \"No category data available\"}\n                </p>\n                <p className=\"text-muted-foreground text-center max-w-md\">\n                  {selectedSubject \n                    ? \"Try selecting a different subject or time period\"\n                    : \"Complete more assessments across different categories\"}\n                </p>\n              </div>\n            )}\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2609, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/results/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { \r\n  Calendar, \r\n  Search, \r\n  RefreshCw, \r\n  BarChart, \r\n  LineChart,\r\n  FileText,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Award,\r\n  Book,\r\n  Filter,\r\n  X,\r\n  AlertCircle \r\n} from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport ResultsTable from \"../../results/components/ResultsTable\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport ScoreChart from \"../../results/components/ScoreChart\";\r\nimport SubjectAnalysis from \"../../results/components/SubjectAnalysis\";\r\nimport LearningProgress from \"../../results/components/LearningProgress\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface QuizResult {\r\n  attemptId: string;\r\n  quizId: string;\r\n  quizTitle: string;\r\n  quizDescription: string | null;\r\n  className: string | null;\r\n  score: number;\r\n  totalQuestions: number;\r\n  correctQuestions: number;\r\n  completedAt: string;\r\n  timeTakenMinutes: number | null;\r\n  feedbackAvailable: boolean;\r\n  category?: string; // subject\r\n}\r\n\r\ninterface OverallStats {\r\n  averageScore: number;\r\n  previousAverageScore: number | null;\r\n  improvement: number | null;\r\n  totalAssessments: number;\r\n  currentPeriodLabel: string;\r\n  previousPeriodLabel: string | null;\r\n}\r\n\r\ninterface CompletionData {\r\n  totalQuizzes: number;\r\n  completedQuizzes: number;\r\n  completionRate: number;\r\n  bestSubject: {\r\n    name: string;\r\n    score: number;\r\n  };\r\n  mostImprovedSubject?: {\r\n    name: string;\r\n    improvement: number;\r\n  } | null;\r\n}\r\n\r\ninterface TimePointScoreData {\r\n  date: string; // ISO YYYY-MM-DD\r\n  averageScore: number;\r\n  assessmentCount: number;\r\n}\r\n\r\ninterface SubjectPerformance {\r\n  subject: string;\r\n  averageScore: number;\r\n  assessmentCount: number;\r\n  trend?: number | null; // Percentage change compared to previous period\r\n}\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: React.ReactNode;\r\n  description?: string;\r\n  trend?: number | null;\r\n  trendLabel?: string | null;\r\n}\r\n\r\nexport default function ResultsPage() {\r\n  const searchParams = useSearchParams();\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  \r\n  // Extract query parameters\r\n  const timeFrameParam = searchParams.get('timeFrame');\r\n  const subjectParam = searchParams.get('subject');\r\n  \r\n  const [results, setResults] = useState<QuizResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedTimeFrame, setSelectedTimeFrame] = useState(timeFrameParam || \"last30days\");\r\n  const [selectedSubject, setSelectedSubject] = useState<string | undefined>(subjectParam || undefined);\r\n  const [activeTab, setActiveTab] = useState(\"summary\");\r\n  \r\n  // Analysis data states\r\n  const [overallStats, setOverallStats] = useState<OverallStats>({\r\n    averageScore: 0,\r\n    previousAverageScore: null,\r\n    improvement: null,\r\n    totalAssessments: 0,\r\n    currentPeriodLabel: \"current period\",\r\n    previousPeriodLabel: null\r\n  });\r\n  const [completionData, setCompletionData] = useState<CompletionData>({\r\n    totalQuizzes: 0,\r\n    completedQuizzes: 0,\r\n    completionRate: 0,\r\n    bestSubject: {\r\n      name: \"N/A\",\r\n      score: 0\r\n    }\r\n  });\r\n  const [timeSeriesData, setTimeSeriesData] = useState<TimePointScoreData[]>([]);\r\n  const [subjectPerformance, setSubjectPerformance] = useState<SubjectPerformance[]>([]);\r\n  const [isLoadingAnalytics, setIsLoadingAnalytics] = useState(true);\r\n\r\n  const fetchResults = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/users/me/quiz-results?timeFrame=${selectedTimeFrame}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch results: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.message || \"Failed to load quiz results\");\r\n      }\r\n      \r\n      setResults(data.data?.results || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching quiz results:\", error);\r\n      setError(error instanceof Error ? error.message : \"An error occurred while fetching results\");\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to load quiz results. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchAnalytics = async () => {\r\n    setIsLoadingAnalytics(true);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/users/me/quiz-analytics?timeFrame=${selectedTimeFrame}${selectedSubject ? `&subject=${selectedSubject}` : ''}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch analytics: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.message || \"Failed to load quiz analytics\");\r\n      }\r\n      \r\n      // Update all analytics states\r\n      if (data.data) {\r\n        setOverallStats(data.data.overallStats || overallStats);\r\n        setCompletionData(data.data.completionData || completionData);\r\n        setTimeSeriesData(data.data.timeSeriesData || []);\r\n        setSubjectPerformance(data.data.subjectPerformance || []);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching quiz analytics:\", error);\r\n      toast({\r\n        title: \"Analytics Error\",\r\n        description: \"Failed to load analytics data. The basic results are still available.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoadingAnalytics(false);\r\n    }\r\n  };\r\n  \r\n  // Update URL when filters change\r\n  const updateUrlWithFilters = () => {\r\n    const params = new URLSearchParams();\r\n    \r\n    params.set('timeFrame', selectedTimeFrame);\r\n    if (selectedSubject) params.set('subject', selectedSubject);\r\n    \r\n    router.push(`/dashboard/student/quizzes/results?${params.toString()}`, { scroll: false });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchResults();\r\n    fetchAnalytics();\r\n    updateUrlWithFilters();\r\n  }, [selectedTimeFrame, selectedSubject]);\r\n  \r\n  // Extract unique subjects from results for filtering\r\n  const subjects = [...new Set(results.map(result => result.category).filter(Boolean))];\r\n\r\n  const filteredResults = selectedSubject \r\n    ? results.filter(result => result.category?.toLowerCase() === selectedSubject.toLowerCase())\r\n    : results;\r\n  \r\n  // Determine if we have any active filters\r\n  const hasActiveFilters = !!selectedSubject || selectedTimeFrame !== \"last30days\";\r\n  \r\n  // Handler to reset all filters\r\n  const handleResetFilters = () => {\r\n    setSelectedTimeFrame(\"last30days\");\r\n    setSelectedSubject(undefined);\r\n  };\r\n\r\n  // Score card component\r\n  function StatCard({ \r\n    title, \r\n    value, \r\n    icon, \r\n    description, \r\n    trend = null, \r\n    trendLabel = null \r\n  }: StatCardProps) {\r\n    // Get trend color\r\n    const getTrendColor = (trendValue: number) => {\r\n      if (trendValue > 0) return \"text-emerald-600 dark:text-emerald-400\";\r\n      if (trendValue < 0) return \"text-red-600 dark:text-red-400\";\r\n      return \"text-amber-600 dark:text-amber-400\";\r\n    };\r\n    \r\n    return (\r\n      <Card>\r\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n          <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\r\n          <div className=\"h-8 w-8 rounded-full bg-primary/10 flex items-center justify-center\">\r\n            {icon}\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-2xl font-bold\">\r\n            {value}\r\n          </div>\r\n          {trend !== null ? (\r\n            <p className={cn(\r\n              \"text-xs flex items-center gap-1 mt-1\",\r\n              getTrendColor(trend)\r\n            )}>\r\n              {trend > 0 ? (\r\n                <TrendingUp className=\"h-3.5 w-3.5\" />\r\n              ) : trend < 0 ? (\r\n                <TrendingDown className=\"h-3.5 w-3.5\" />\r\n              ) : null}\r\n              {trend > 0 ? \"+\" : \"\"}\r\n              {trend.toFixed(1)}% {trendLabel && `compared to ${trendLabel}`}\r\n            </p>\r\n          ) : (\r\n            <p className=\"text-xs text-muted-foreground mt-1\">\r\n              {description}\r\n            </p>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container py-8\">\r\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Quiz Results</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            View and analyze your quiz performance\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-wrap items-center gap-2\">\r\n          <Select \r\n            value={selectedTimeFrame} \r\n            onValueChange={setSelectedTimeFrame}\r\n          >\r\n            <SelectTrigger className=\"w-[180px]\">\r\n              <Calendar className=\"h-4 w-4 mr-2 text-muted-foreground\" />\r\n              <SelectValue placeholder=\"Time period\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"last7days\">Last 7 days</SelectItem>\r\n              <SelectItem value=\"last30days\">Last 30 days</SelectItem>\r\n              <SelectItem value=\"last90days\">Last 90 days</SelectItem>\r\n              <SelectItem value=\"last6months\">Last 6 months</SelectItem>\r\n              <SelectItem value=\"lastYear\">Last year</SelectItem>\r\n              <SelectItem value=\"allTime\">All time</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n          \r\n          {subjects.length > 0 && (\r\n            <Select \r\n              value={selectedSubject || \"all\"} \r\n              onValueChange={(value) => setSelectedSubject(value !== \"all\" ? value : undefined)}\r\n            >\r\n              <SelectTrigger className=\"w-[180px]\">\r\n                <Filter className=\"h-4 w-4 mr-2 text-muted-foreground\" />\r\n                <SelectValue placeholder=\"All subjects\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All subjects</SelectItem>\r\n                {subjects.map((subject) => (\r\n                  subject ? (\r\n                    <SelectItem key={subject} value={subject}>\r\n                      {subject}\r\n                    </SelectItem>\r\n                  ) : null\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          )}\r\n          \r\n          <Button variant=\"outline\" onClick={fetchResults}>\r\n            <RefreshCw className=\"h-4 w-4\" />\r\n          </Button>\r\n          \r\n          {hasActiveFilters && (\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"sm\"\r\n              onClick={handleResetFilters}\r\n              className=\"h-9 px-3 gap-1.5\"\r\n            >\r\n              <X className=\"h-3.5 w-3.5\" />\r\n              Reset filters\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <Alert variant=\"destructive\" className=\"mb-6\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          <AlertTitle>Error</AlertTitle>\r\n          <AlertDescription>{error}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n      \r\n      <Tabs className=\"space-y-6\" value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList className=\"w-full border-b pb-0 mb-6\">\r\n          <TabsTrigger value=\"summary\" className=\"flex items-center gap-1.5\">\r\n            <BarChart className=\"h-4 w-4\" />\r\n            Summary\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"history\" className=\"flex items-center gap-1.5\">\r\n            <FileText className=\"h-4 w-4\" />\r\n            History\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"analytics\" className=\"flex items-center gap-1.5\">\r\n            <LineChart className=\"h-4 w-4\" />\r\n            Analytics\r\n          </TabsTrigger>\r\n        </TabsList>\r\n        \r\n        {/* Summary Tab */}\r\n        <TabsContent value=\"summary\" className=\"space-y-6 mt-0\">\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <StatCard\r\n              title=\"Average Score\" \r\n              value={`${overallStats.averageScore.toFixed(1)}%`}\r\n              icon={<BarChart className=\"h-4 w-4 text-emerald-600 dark:text-emerald-400\" />}\r\n              trend={overallStats.improvement || 0}\r\n              trendLabel={overallStats.previousPeriodLabel || undefined}\r\n            />\r\n            \r\n            <StatCard\r\n              title=\"Total Assessments\"\r\n              value={overallStats.totalAssessments}\r\n              icon={<FileText className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />}\r\n              description={`${completionData.completionRate}% completion rate`}\r\n            />\r\n            \r\n            <StatCard\r\n              title=\"Best Subject\"\r\n              value={completionData.bestSubject?.name || \"N/A\"}\r\n              icon={<Award className=\"h-4 w-4 text-purple-600 dark:text-purple-400\" />}\r\n              description={completionData.bestSubject?.score \r\n                ? `Average: ${completionData.bestSubject.score.toFixed(1)}%` \r\n                : \"No data available\"}\r\n            />\r\n            \r\n            <StatCard\r\n              title=\"Most Improved\"\r\n              value={completionData.mostImprovedSubject?.name || \"N/A\"}\r\n              icon={<Book className=\"h-4 w-4 text-amber-600 dark:text-amber-400\" />}\r\n              trend={completionData.mostImprovedSubject?.improvement || 0}\r\n              description=\"Need more data for analysis\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Recent Results</CardTitle>\r\n                <CardDescription>Your most recent assessments</CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"p-0\">\r\n                <div className=\"border-t\">\r\n                  {isLoading ? (\r\n                    <div className=\"space-y-2 p-4\">\r\n                      <Skeleton className=\"h-12 w-full\" />\r\n                      <Skeleton className=\"h-12 w-full\" />\r\n                      <Skeleton className=\"h-12 w-full\" />\r\n                    </div>\r\n                  ) : results.length > 0 ? (\r\n                    <div>\r\n                      {results.slice(0, 5).map((result) => (\r\n                        <div \r\n                          key={result.attemptId} \r\n                          className=\"flex items-center justify-between p-4 border-b last:border-b-0\"\r\n                        >\r\n                          <div className=\"flex-1 min-w-0\">\r\n                            <div className=\"font-medium truncate\">{result.quizTitle}</div>\r\n                            <div className=\"text-sm text-muted-foreground flex items-center gap-1\">\r\n                              {result.category && (\r\n                                <Badge variant=\"outline\">{result.category}</Badge>\r\n                              )}\r\n                              <span>{new Date(result.completedAt).toLocaleDateString()}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"ml-4\">\r\n                            <Badge \r\n                              variant={result.score >= 70 ? \"default\" : \r\n                                       result.score >= 50 ? \"secondary\" : \"destructive\"}\r\n                            >\r\n                              {result.score.toFixed(1)}%\r\n                            </Badge>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-col items-center justify-center py-8\">\r\n                      <FileText className=\"h-8 w-8 text-muted-foreground opacity-30 mb-2\" />\r\n                      <p className=\"text-muted-foreground\">No results available</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter className=\"border-t bg-muted/40 py-3\">\r\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full gap-1\" asChild>\r\n                  <div onClick={() => setActiveTab(\"history\")}>View all results <span className=\"sr-only\">View all results</span></div>\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n            \r\n            <Card>\r\n              <ScoreChart \r\n                timeSeriesData={timeSeriesData} \r\n                timeFrame={selectedTimeFrame} \r\n              />\r\n            </Card>\r\n          </div>\r\n          \r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            <Card>\r\n              <SubjectAnalysis \r\n                subjectPerformance={subjectPerformance} \r\n                selectedSubject={selectedSubject}\r\n              />\r\n            </Card>\r\n            \r\n            <Card>\r\n              <LearningProgress \r\n                timeFrame={selectedTimeFrame}\r\n                selectedSubject={selectedSubject}\r\n              />\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n        \r\n        {/* History Tab */}\r\n        <TabsContent value=\"history\" className=\"mt-0\">\r\n          <ResultsTable \r\n            results={filteredResults} \r\n            selectedTimeFrame={selectedTimeFrame} \r\n            selectedSubject={selectedSubject} \r\n            isLoading={isLoading} \r\n          />\r\n        </TabsContent>\r\n        \r\n        {/* Analytics Tab */}\r\n        <TabsContent value=\"analytics\" className=\"space-y-6 mt-0\">\r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            <Card>\r\n              <ScoreChart \r\n                timeSeriesData={timeSeriesData} \r\n                timeFrame={selectedTimeFrame} \r\n              />\r\n            </Card>\r\n            \r\n            <Card>\r\n              <SubjectAnalysis \r\n                subjectPerformance={subjectPerformance} \r\n                selectedSubject={selectedSubject}\r\n              />\r\n            </Card>\r\n          </div>\r\n          \r\n          <Card>\r\n            <LearningProgress \r\n              timeFrame={selectedTimeFrame}\r\n              selectedSubject={selectedSubject}\r\n            />\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}
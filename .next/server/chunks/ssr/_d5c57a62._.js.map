{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/classes/classes-page-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClassesPageClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClassesPageClient() from the server but ClassesPageClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/student/classes/classes-page-client.tsx <module evaluation>\",\n    \"ClassesPageClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,uFACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/classes/classes-page-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClassesPageClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClassesPageClient() from the server but ClassesPageClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/student/classes/classes-page-client.tsx\",\n    \"ClassesPageClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,mEACA","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/prisma.ts"],"sourcesContent":["import { db } from './db';\n\n// Re-export với tên khác để không phá vỡ code đang sử dụng\nexport const prisma = db;"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,SAAS,yGAAA,CAAA,KAAE","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/classes/page.tsx"],"sourcesContent":["import React from \"react\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\nimport { redirect } from \"next/navigation\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { ClassesPageClient } from \"./classes-page-client\";\nimport { prisma } from \"@/lib/prisma\";\n\nexport const metadata = {\n  title: \"Classes - Student Dashboard\",\n  description: \"Browse and access your enrolled classes\",\n};\n\nasync function getStudentClasses(studentId: string) {\n  const enrollments = await prisma.classEnrollment.findMany({\n    where: {\n      studentId,\n    },\n    include: {\n      class: {\n        include: {\n          teacher: {\n            select: {\n              name: true,\n              image: true,\n            },\n          },\n          quizzes: {\n            where: {\n              isActive: true,\n              isPublished: true,\n            },\n            select: {\n              id: true,\n              title: true,\n              startDate: true,\n              endDate: true,\n            },\n          },\n          announcements: {\n            orderBy: {\n              createdAt: \"desc\",\n            },\n            take: 3,\n            select: {\n              id: true,\n              title: true,\n              createdAt: true,\n            },\n          },\n          students: {\n            select: {\n              id: true,\n            },\n          },\n          _count: {\n            select: {\n              quizzes: {\n                where: {\n                  isActive: true,\n                  isPublished: true,\n                }\n              },\n              announcements: true,\n              materials: true,\n              students: true,\n            },\n          },\n        },\n      },\n    },\n  });\n\n  return enrollments.map((enrollment) => {\n    const { class: classData } = enrollment;\n\n    // Format dates for readability and prevent \"Invalid Date\"\n    const formattedJoined = enrollment.joinedAt \n      ? enrollment.joinedAt.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        })\n      : 'Recently joined';\n      \n    // Get upcoming quizzes (that haven't ended yet)\n    const now = new Date();\n    const upcomingQuizzes = classData.quizzes.filter(quiz => \n      !quiz.endDate || quiz.endDate > now\n    );\n    \n    return {\n      id: classData.id,\n      name: classData.name,\n      description: classData.description,\n      subject: classData.subject,\n      teacherName: classData.teacher?.name || \"Unknown Teacher\",\n      teacherImage: classData.teacher?.image,\n      coverImage: classData.coverImage,\n      joinedDate: formattedJoined,\n      lastActive: enrollment.lastActive,\n      upcomingQuizzes: upcomingQuizzes.length,\n      totalAnnouncements: classData._count.announcements,\n      totalMaterials: classData._count.materials,\n      totalStudents: classData._count.students,\n    };\n  });\n}\n\nexport default async function ClassesPage() {\n  const session = await getServerSession(authOptions);\n\n  if (!session?.user) {\n    return redirect(\"/auth/signin\");\n  }\n\n  if (session.user.role !== \"STUDENT\") {\n    return redirect(\"/dashboard\");\n  }\n\n  const classes = await getStudentClasses(session.user.id);\n\n  return (\n    <DashboardShell>\n      <ClassesPageClient initialClasses={classes} />\n    </DashboardShell>\n  );\n} "],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEA,eAAe,kBAAkB,SAAiB;IAChD,MAAM,cAAc,MAAM,6GAAA,CAAA,SAAM,CAAC,eAAe,CAAC,QAAQ,CAAC;QACxD,OAAO;YACL;QACF;QACA,SAAS;YACP,OAAO;gBACL,SAAS;oBACP,SAAS;wBACP,QAAQ;4BACN,MAAM;4BACN,OAAO;wBACT;oBACF;oBACA,SAAS;wBACP,OAAO;4BACL,UAAU;4BACV,aAAa;wBACf;wBACA,QAAQ;4BACN,IAAI;4BACJ,OAAO;4BACP,WAAW;4BACX,SAAS;wBACX;oBACF;oBACA,eAAe;wBACb,SAAS;4BACP,WAAW;wBACb;wBACA,MAAM;wBACN,QAAQ;4BACN,IAAI;4BACJ,OAAO;4BACP,WAAW;wBACb;oBACF;oBACA,UAAU;wBACR,QAAQ;4BACN,IAAI;wBACN;oBACF;oBACA,QAAQ;wBACN,QAAQ;4BACN,SAAS;gCACP,OAAO;oCACL,UAAU;oCACV,aAAa;gCACf;4BACF;4BACA,eAAe;4BACf,WAAW;4BACX,UAAU;wBACZ;oBACF;gBACF;YACF;QACF;IACF;IAEA,OAAO,YAAY,GAAG,CAAC,CAAC;QACtB,MAAM,EAAE,OAAO,SAAS,EAAE,GAAG;QAE7B,0DAA0D;QAC1D,MAAM,kBAAkB,WAAW,QAAQ,GACvC,WAAW,QAAQ,CAAC,kBAAkB,CAAC,SAAS;YAC9C,MAAM;YACN,OAAO;YACP,KAAK;QACP,KACA;QAEJ,gDAAgD;QAChD,MAAM,MAAM,IAAI;QAChB,MAAM,kBAAkB,UAAU,OAAO,CAAC,MAAM,CAAC,CAAA,OAC/C,CAAC,KAAK,OAAO,IAAI,KAAK,OAAO,GAAG;QAGlC,OAAO;YACL,IAAI,UAAU,EAAE;YAChB,MAAM,UAAU,IAAI;YACpB,aAAa,UAAU,WAAW;YAClC,SAAS,UAAU,OAAO;YAC1B,aAAa,UAAU,OAAO,EAAE,QAAQ;YACxC,cAAc,UAAU,OAAO,EAAE;YACjC,YAAY,UAAU,UAAU;YAChC,YAAY;YACZ,YAAY,WAAW,UAAU;YACjC,iBAAiB,gBAAgB,MAAM;YACvC,oBAAoB,UAAU,MAAM,CAAC,aAAa;YAClD,gBAAgB,UAAU,MAAM,CAAC,SAAS;YAC1C,eAAe,UAAU,MAAM,CAAC,QAAQ;QAC1C;IACF;AACF;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,iJAAA,CAAA,cAAW;IAElD,IAAI,CAAC,SAAS,MAAM;QAClB,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAClB;IAEA,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,WAAW;QACnC,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAClB;IAEA,MAAM,UAAU,MAAM,kBAAkB,QAAQ,IAAI,CAAC,EAAE;IAEvD,qBACE,8OAAC,8IAAA,CAAA,iBAAc;kBACb,cAAA,8OAAC,oKAAA,CAAA,oBAAiB;YAAC,gBAAgB;;;;;;;;;;;AAGzC","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAMhG,8BAA8B;AAG9B,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;;;;;AAEuG,EAAC,uEAAA;AAEzG,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;wCACNC,IAAAA;oCAAAA,KAAU;oCAAA;yCACV,2CAA2C;8CAC3CC,IAAAA,CAAAA;wCAAAA,CAAY,OAAA;4CAAA,IAAA;4CAAA;yCAAA;;uCACZC,UAAU;;iCACVC,UAAU,EAAE;kCACd,QAAA,CAAA;4BAAA;yBAAA;;qBACAC,UAAU;8BACRC,IAAAA,CAAAA;oBAAAA;iBAAAA,CAAYnB;;aACd;gBACF,CAAE,SAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA","ignoreList":[0],"debugId":null}}]
}
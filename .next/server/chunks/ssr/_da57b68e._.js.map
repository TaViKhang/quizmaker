{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/prisma.ts"],"sourcesContent":["import { db } from './db';\n\n// Re-export với tên khác để không phá vỡ code đang sử dụng\nexport const prisma = db;"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,SAAS,yGAAA,CAAA,KAAE","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/GradingPanel.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GradingPanel = registerClientReference(\n    function() { throw new Error(\"Attempted to call GradingPanel() from the server but GradingPanel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/quizzes/[quizId]/grading/GradingPanel.tsx <module evaluation>\",\n    \"GradingPanel\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iGACA","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/GradingPanel.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GradingPanel = registerClientReference(\n    function() { throw new Error(\"Attempted to call GradingPanel() from the server but GradingPanel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/teacher/quizzes/[quizId]/grading/GradingPanel.tsx\",\n    \"GradingPanel\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6EACA","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/breadcrumb.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AAAA;AAEA;;;;;;AAEA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKhC,CAAC,EAAE,GAAG,OAAO,EAAE,oBAAQ,8OAAC;QAAI,KAAK;QAAK,cAAW;QAAc,GAAG,KAAK;;;;;;AACzE,WAAW,WAAW,GAAG;AAEzB,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4FACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC;QACjD,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKpC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACnC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,MAAK;QACL,iBAAc;QACd,gBAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,sBAAsB,CAAC,EAC3B,QAAQ,EACR,SAAS,EACT,GAAG,OACwB,iBAC3B,8OAAC;QACC,MAAK;QACL,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;kBAER,0BAAY,8OAAC,sNAAA,CAAA,eAAY;;;;;;;;;;AAG9B,oBAAoB,WAAW,GAAG;AAElC,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OAC0B,iBAC7B,8OAAC;QACC,MAAK;QACL,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4CAA4C;QACzD,GAAG,KAAK;;0BAET,8OAAC,0NAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAG9B,mBAAmB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/page.tsx"],"sourcesContent":["import { Metadata } from \"next\";\nimport { getServerSession } from \"next-auth/next\";\nimport { authOptions } from \"@/app/api/auth/[...nextauth]/route\";\nimport { redirect, notFound } from \"next/navigation\";\nimport { Role, QuestionType, Question, Answer, QuizAttempt, User } from \"@prisma/client\";\nimport { DashboardHeader } from \"@/components/dashboard/dashboard-header\";\nimport { DashboardShell } from \"@/components/dashboard/dashboard-shell\";\nimport { prisma } from \"@/lib/prisma\";\nimport { GradingPanel } from \"./GradingPanel\";\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbSeparator } from \"@/components/ui/breadcrumb\";\n\nexport const metadata: Metadata = {\n  title: \"Manual Grading | OnTest\",\n  description: \"Grade essay and code questions, provide feedback to students\",\n};\n\ninterface GradingPageProps {\n  params: {\n    quizId: string;\n  };\n  searchParams: {\n    attemptId?: string;\n  };\n}\n\ntype AttemptWithUserAndAnswers = QuizAttempt & {\n  user: {\n    id: string;\n    name: string | null;\n    email: string | null;\n  };\n  answers: (Answer & {\n    question: Question;\n  })[];\n};\n\nexport default async function GradingPage({ params, searchParams }: GradingPageProps) {\n  // Check user authentication\n  const session = await getServerSession(authOptions);\n  \n  if (!session?.user) {\n    redirect(\"/auth/signin\");\n  }\n  \n  // Only teachers can access this page\n  if (session.user.role !== Role.TEACHER) {\n    redirect(\"/dashboard\");\n  }\n  \n  const { quizId } = params;\n  const { attemptId } = searchParams;\n  \n  // Verify the teacher has permission to grade this quiz\n  const quiz = await prisma.quiz.findUnique({\n    where: {\n      id: quizId,\n      authorId: session.user.id,\n    },\n    include: {\n      questions: {\n        orderBy: {\n          order: 'asc',\n        },\n      },\n    },\n  });\n  \n  if (!quiz) {\n    notFound();\n  }\n  \n  // Get attempts that need manual grading (essay or code questions)\n  const attempts = await prisma.quizAttempt.findMany({\n    where: {\n      quizId,\n    },\n    include: {\n      user: {\n        select: {\n          id: true,\n          name: true,\n          email: true,\n        },\n      },\n      answers: {\n        include: {\n          question: {\n            include: {\n              options: true, // Include options for MCQ/True-False questions\n            }\n          },\n        },\n        // Include Essay, Code, and MCQ/True-False questions for review and feedback\n        where: {\n          OR: [\n            // Questions that need manual grading\n            {\n              question: {\n                type: {\n                  in: [QuestionType.ESSAY, QuestionType.CODE],\n                },\n              },\n              score: null, // Ungraded\n            },\n            // Already auto-graded MCQ/True-False questions for review and feedback\n            {\n              question: {\n                type: {\n                  in: [QuestionType.MULTIPLE_CHOICE, QuestionType.TRUE_FALSE],\n                },\n              }\n            }\n          ]\n        }\n      },\n    },\n    orderBy: {\n      startedAt: 'desc',\n    },\n  });\n  \n  // Filter attempts to only those with questions that need grading\n  const attemptsNeedingGrading = attempts.filter((attempt: AttemptWithUserAndAnswers) => \n    attempt.answers.some((answer: Answer & { question: Question }) => \n      // Ungraded essays and code questions\n      (answer.score === null && \n       (answer.question.type === QuestionType.ESSAY || answer.question.type === QuestionType.CODE))\n    )\n  );\n  \n  // Get the current selected attempt (if any)\n  const selectedAttempt = attemptId \n    ? attempts.find((a: AttemptWithUserAndAnswers) => a.id === attemptId) \n    : attemptsNeedingGrading[0];\n  \n  // Get the questions that need manual grading in this quiz\n  const manualGradingQuestions = quiz.questions.filter(\n    (question: Question) => \n      question.type === QuestionType.ESSAY || \n      question.type === QuestionType.CODE ||\n      question.type === QuestionType.MULTIPLE_CHOICE ||\n      question.type === QuestionType.TRUE_FALSE\n  );\n  \n  return (\n    <DashboardShell>\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard/teacher/quizzes\">Quizzes</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href={`/dashboard/teacher/quizzes/${quizId}/edit`}>{quiz.title}</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>Manual Grading</BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n      \n      <DashboardHeader\n        heading=\"Manual Grading\"\n        text=\"Grade essay and code submissions, provide feedback to students\"\n      />\n      \n      <GradingPanel\n        quizId={quizId}\n        quizTitle={quiz.title}\n        questions={manualGradingQuestions}\n        attempts={attempts}\n        selectedAttempt={selectedAttempt}\n      />\n    </DashboardShell>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
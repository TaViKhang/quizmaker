{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/cards/StatCard.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { cn } from \"@/lib/utils\";\nimport { ArrowDown, ArrowUp } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\ninterface StatCardProps {\n  /**\n   * Title of the stat card\n   */\n  title: string;\n  /**\n   * Current value to display\n   */\n  value: string | number;\n  /**\n   * Icon to display in the card header\n   */\n  icon: React.ReactNode;\n  /**\n   * Loading state\n   * @default false\n   */\n  isLoading?: boolean;\n  /**\n   * Additional description or explanation for the main value\n   */\n  description?: string;\n  /**\n   * Optional previous value to calculate and display trend\n   */\n  previousValue?: number;\n  /**\n   * Unit for the value and previousValue (e.g., '%', ' quizzes')\n   * @default ''\n   */\n  unit?: string;\n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  /**\n   * Icon color class\n   * @default \"text-primary\"\n   */\n  iconColor?: string;\n  /**\n   * On click handler for interactive cards\n   */\n  onClick?: () => void;\n  /**\n   * Whether to show pointer cursor and hover effect\n   * @default false\n   */\n  interactive?: boolean;\n}\n\n// Define animation variants\nconst cardVariants = {\n  initial: { \n    scale: 1 \n  },\n  hover: { \n    scale: 1.02,\n    boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n    transition: {\n      type: \"spring\",\n      stiffness: 400,\n      damping: 15\n    }\n  },\n  tap: { \n    scale: 0.98,\n    transition: {\n      type: \"spring\",\n      stiffness: 400,\n      damping: 15\n    }\n  }\n};\n\n// Define trend arrow animation variants\nconst trendArrowVariants = {\n  initial: { y: 0 },\n  animate: (direction: \"up\" | \"down\") => ({\n    y: direction === \"up\" ? -2 : 2,\n    transition: {\n      repeat: Infinity,\n      repeatType: \"reverse\" as const,\n      duration: 0.8\n    }\n  })\n};\n\n/**\n * Reusable stat card component for dashboards\n */\nexport function StatCard({\n  title,\n  value,\n  icon,\n  isLoading = false,\n  description,\n  previousValue,\n  unit = '',\n  className,\n  iconColor = \"text-primary\",\n  onClick,\n  interactive = false,\n}: StatCardProps) {\n  let trendPercentage: number | null = null;\n  let trendDirection: \"up\" | \"down\" | \"neutral\" = \"neutral\";\n\n  if (previousValue !== undefined && typeof value === 'number' && previousValue !== null) {\n    if (previousValue === 0 && value > 0) {\n      trendPercentage = 100; // Or handle as 'new' or 'increased significantly'\n      trendDirection = \"up\";\n    } else if (previousValue === 0 && value === 0) {\n        trendPercentage = 0;\n        trendDirection = \"neutral\";\n    } else if (previousValue !== 0) {\n      trendPercentage = parseFloat((((value - previousValue) / previousValue) * 100).toFixed(1));\n      if (trendPercentage > 0) trendDirection = \"up\";\n      if (trendPercentage < 0) trendDirection = \"down\";\n    }\n  }\n\n  const displayValue = typeof value === 'number' ? `${value}${unit}` : value;\n  const displayPreviousValue = previousValue !== undefined ? `${previousValue}${unit}` : '';\n\n  if (interactive && !isLoading) {\n    return (\n      <motion.div\n        variants={cardVariants}\n        initial=\"initial\"\n        whileHover=\"hover\"\n        whileTap=\"tap\"\n        onClick={onClick}\n        className={cn(\n          \"rounded-lg border border-border bg-card text-card-foreground shadow-sm transition-all duration-200 overflow-hidden\",\n          interactive && \"cursor-pointer transition-colors hover:border-border/80 hover:bg-accent/40\",\n          className\n        )}\n      >\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-1\">\n            {title}\n            {interactive && !isLoading && (\n              <motion.svg \n                width=\"12\" \n                height=\"12\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                xmlns=\"http://www.w3.org/2000/svg\" \n                className=\"text-muted-foreground ml-1 opacity-70\"\n                animate={{ x: [0, 4, 0] }}\n                transition={{ \n                  repeat: Infinity, \n                  repeatType: \"reverse\", \n                  duration: 1.5,\n                  ease: \"easeInOut\",\n                  repeatDelay: 1\n                }}\n              >\n                <path \n                  d=\"M9 5L15 12L9 19\" \n                  stroke=\"currentColor\" \n                  strokeWidth=\"2\" \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\"\n                />\n              </motion.svg>\n            )}\n          </CardTitle>\n          <div className={cn(\"h-4 w-4\", iconColor)}>\n            {icon}\n          </div>\n        </CardHeader>\n        <CardContent>\n          <motion.div \n            className=\"text-2xl font-bold\"\n            initial={{ opacity: 0, y: 5 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {displayValue}\n          </motion.div>\n          {description && (\n            <p className=\"text-xs text-muted-foreground\">\n              {description}\n            </p>\n          )}\n          {trendPercentage !== null && (\n            <div className={cn(\n              \"text-xs flex items-center mt-1\",\n              trendDirection === \"up\" ? \"text-emerald-600\"\n                : trendDirection === \"down\" ? \"text-red-600\"\n                : \"text-muted-foreground\"\n            )}>\n              {trendDirection === \"up\" && (\n                <motion.div\n                  variants={trendArrowVariants}\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  custom=\"up\"\n                >\n                  <ArrowUp className=\"h-3 w-3 mr-0.5\" />\n                </motion.div>\n              )}\n              {trendDirection === \"down\" && (\n                <motion.div\n                  variants={trendArrowVariants}\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  custom=\"down\"\n                >\n                  <ArrowDown className=\"h-3 w-3 mr-0.5\" />\n                </motion.div>\n              )}\n              {trendPercentage !== 0 ? `${Math.abs(trendPercentage)}%` : ''}\n              {trendPercentage === 0 && trendDirection === \"neutral\" ? \"No change\" : \n                (trendPercentage !== 0 ? (trendDirection === \"up\" ? \" increase\" : \" decrease\") : '')}\n              {previousValue !== undefined && trendPercentage !== 0 && <span className=\"text-muted-foreground ml-1\">from {displayPreviousValue}</span>}\n            </div>\n          )}\n        </CardContent>\n      </motion.div>\n    );\n  }\n\n  return (\n    <Card className={cn(\"overflow-hidden\", className)}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-1\">\n          {title}\n        </CardTitle>\n        <div className={cn(\"h-4 w-4\", iconColor)}>\n          {icon}\n        </div>\n      </CardHeader>\n      <CardContent>\n        {isLoading ? (\n          <>\n            <Skeleton className=\"h-8 w-20 mb-1\" />\n            <Skeleton className=\"h-4 w-32\" />\n            {previousValue !== undefined && <Skeleton className=\"h-3 w-24 mt-1\" />} \n          </>\n        ) : (\n          <>\n            <motion.div \n              className=\"text-2xl font-bold\"\n              initial={{ opacity: 0, y: 5 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              {displayValue}\n            </motion.div>\n            {description && (\n              <p className=\"text-xs text-muted-foreground\">\n                {description}\n              </p>\n            )}\n            {trendPercentage !== null && (\n              <div className={cn(\n                \"text-xs flex items-center mt-1\",\n                trendDirection === \"up\" ? \"text-emerald-600\"\n                  : trendDirection === \"down\" ? \"text-red-600\"\n                  : \"text-muted-foreground\"\n              )}>\n                {trendDirection === \"up\" && (\n                  <motion.div\n                    variants={trendArrowVariants}\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    custom=\"up\"\n                  >\n                    <ArrowUp className=\"h-3 w-3 mr-0.5\" />\n                  </motion.div>\n                )}\n                {trendDirection === \"down\" && (\n                  <motion.div\n                    variants={trendArrowVariants}\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    custom=\"down\"\n                  >\n                    <ArrowDown className=\"h-3 w-3 mr-0.5\" />\n                  </motion.div>\n                )}\n                {trendPercentage !== 0 ? `${Math.abs(trendPercentage)}%` : ''}\n                {trendPercentage === 0 && trendDirection === \"neutral\" ? \"No change\" : \n                 (trendPercentage !== 0 ? (trendDirection === \"up\" ? \" increase\" : \" decrease\") : '')}\n                {previousValue !== undefined && trendPercentage !== 0 && <span className=\"text-muted-foreground ml-1\">from {displayPreviousValue}</span>}\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AANA;;;;;;;AA2DA,4BAA4B;AAC5B,MAAM,eAAe;IACnB,SAAS;QACP,OAAO;IACT;IACA,OAAO;QACL,OAAO;QACP,WAAW;QACX,YAAY;YACV,MAAM;YACN,WAAW;YACX,SAAS;QACX;IACF;IACA,KAAK;QACH,OAAO;QACP,YAAY;YACV,MAAM;YACN,WAAW;YACX,SAAS;QACX;IACF;AACF;AAEA,wCAAwC;AACxC,MAAM,qBAAqB;IACzB,SAAS;QAAE,GAAG;IAAE;IAChB,SAAS,CAAC,YAA6B,CAAC;YACtC,GAAG,cAAc,OAAO,CAAC,IAAI;YAC7B,YAAY;gBACV,QAAQ;gBACR,YAAY;gBACZ,UAAU;YACZ;QACF,CAAC;AACH;AAKO,SAAS,SAAS,EACvB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,YAAY,KAAK,EACjB,WAAW,EACX,aAAa,EACb,OAAO,EAAE,EACT,SAAS,EACT,YAAY,cAAc,EAC1B,OAAO,EACP,cAAc,KAAK,EACL;IACd,IAAI,kBAAiC;IACrC,IAAI,iBAA4C;IAEhD,IAAI,kBAAkB,aAAa,OAAO,UAAU,YAAY,kBAAkB,MAAM;QACtF,IAAI,kBAAkB,KAAK,QAAQ,GAAG;YACpC,kBAAkB,KAAK,kDAAkD;YACzE,iBAAiB;QACnB,OAAO,IAAI,kBAAkB,KAAK,UAAU,GAAG;YAC3C,kBAAkB;YAClB,iBAAiB;QACrB,OAAO,IAAI,kBAAkB,GAAG;YAC9B,kBAAkB,WAAW,CAAC,AAAC,CAAC,QAAQ,aAAa,IAAI,gBAAiB,GAAG,EAAE,OAAO,CAAC;YACvF,IAAI,kBAAkB,GAAG,iBAAiB;YAC1C,IAAI,kBAAkB,GAAG,iBAAiB;QAC5C;IACF;IAEA,MAAM,eAAe,OAAO,UAAU,WAAW,GAAG,QAAQ,MAAM,GAAG;IACrE,MAAM,uBAAuB,kBAAkB,YAAY,GAAG,gBAAgB,MAAM,GAAG;IAEvF,IAAI,eAAe,CAAC,WAAW;QAC7B,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;YACT,UAAU;YACV,SAAQ;YACR,YAAW;YACX,UAAS;YACT,SAAS;YACT,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sHACA,eAAe,8EACf;;8BAGF,8OAAC,yHAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,8OAAC,yHAAA,CAAA,YAAS;4BAAC,WAAU;;gCAClB;gCACA,eAAe,CAAC,2BACf,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,OAAM;oCACN,QAAO;oCACP,SAAQ;oCACR,MAAK;oCACL,OAAM;oCACN,WAAU;oCACV,SAAS;wCAAE,GAAG;4CAAC;4CAAG;4CAAG;yCAAE;oCAAC;oCACxB,YAAY;wCACV,QAAQ;wCACR,YAAY;wCACZ,UAAU;wCACV,MAAM;wCACN,aAAa;oCACf;8CAEA,cAAA,8OAAC;wCACC,GAAE;wCACF,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;;;;;;;;;;;;;;;;;sCAKvB,8OAAC;4BAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,WAAW;sCAC3B;;;;;;;;;;;;8BAGL,8OAAC,yHAAA,CAAA,cAAW;;sCACV,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,WAAU;4BACV,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;sCAE3B;;;;;;wBAEF,6BACC,8OAAC;4BAAE,WAAU;sCACV;;;;;;wBAGJ,oBAAoB,sBACnB,8OAAC;4BAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACf,kCACA,mBAAmB,OAAO,qBACtB,mBAAmB,SAAS,iBAC5B;;gCAEH,mBAAmB,sBAClB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,8OAAC,4MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;;;;;;gCAGtB,mBAAmB,wBAClB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;gCAGxB,oBAAoB,IAAI,GAAG,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG;gCAC1D,oBAAoB,KAAK,mBAAmB,YAAY,cACtD,oBAAoB,IAAK,mBAAmB,OAAO,cAAc,cAAe;gCAClF,kBAAkB,aAAa,oBAAoB,mBAAK,8OAAC;oCAAK,WAAU;;wCAA6B;wCAAM;;;;;;;;;;;;;;;;;;;;;;;;;IAMxH;IAEA,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;;0BACrC,8OAAC,yHAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,yHAAA,CAAA,YAAS;wBAAC,WAAU;kCAClB;;;;;;kCAEH,8OAAC;wBAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,WAAW;kCAC3B;;;;;;;;;;;;0BAGL,8OAAC,yHAAA,CAAA,cAAW;0BACT,0BACC;;sCACE,8OAAC,6HAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,6HAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBACnB,kBAAkB,2BAAa,8OAAC,6HAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;iDAGtD;;sCACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,WAAU;4BACV,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;sCAE3B;;;;;;wBAEF,6BACC,8OAAC;4BAAE,WAAU;sCACV;;;;;;wBAGJ,oBAAoB,sBACnB,8OAAC;4BAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACf,kCACA,mBAAmB,OAAO,qBACtB,mBAAmB,SAAS,iBAC5B;;gCAEH,mBAAmB,sBAClB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,8OAAC,4MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;;;;;;gCAGtB,mBAAmB,wBAClB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;gCAGxB,oBAAoB,IAAI,GAAG,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG;gCAC1D,oBAAoB,KAAK,mBAAmB,YAAY,cACvD,oBAAoB,IAAK,mBAAmB,OAAO,cAAc,cAAe;gCACjF,kBAAkB,aAAa,oBAAoB,mBAAK,8OAAC;oCAAK,WAAU;;wCAA6B;wCAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5H","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,8OAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,8OAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/quiz-list-item.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Calendar,\r\n  FileText,\r\n  PlayCircle, // Icon for Start Quiz\r\n  AlertTriangle, // Icon for urgency\r\n} from \"lucide-react\";\r\nimport {\r\n  format,\r\n  differenceInHours,\r\n  differenceInDays,\r\n  formatDistanceToNowStrict,\r\n  isPast,\r\n  isFuture,\r\n  isWithinInterval,\r\n  addHours,\r\n} from \"date-fns\";\r\n\r\ninterface UpcomingQuiz {\r\n  id: string;\r\n  title: string;\r\n  description: string | null;\r\n  startDate: string;\r\n  endDate: string | null;\r\n  timeLimit: number | null;\r\n  class: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n  _count: {\r\n    questions: number;\r\n  };\r\n  // We might need a status from API later for \"Continue Quiz\" logic\r\n  // status?: \"not-started\" | \"in-progress\" | \"completed\"; \r\n}\r\n\r\ninterface QuizListItemProps {\r\n  quiz: UpcomingQuiz;\r\n}\r\n\r\nconst formatDateToPrimary = (dateString: string) => {\r\n  return format(new Date(dateString), \"MMM d, yyyy h:mm a\");\r\n};\r\n\r\nconst getDynamicDateTimeDisplay = (startDateStr: string, endDateStr: string | null) => {\r\n  const startDate = new Date(startDateStr);\r\n  const endDate = endDateStr ? new Date(endDateStr) : null;\r\n  const now = new Date();\r\n\r\n  if (isFuture(startDate)) {\r\n    const hoursUntilStart = differenceInHours(startDate, now);\r\n    if (hoursUntilStart < 1) {\r\n      return `Starts in ${formatDistanceToNowStrict(startDate, { unit: 'minute' })}`;\r\n    } else if (hoursUntilStart < 48) { // Show hours up to 2 days\r\n      return `Starts in ${formatDistanceToNowStrict(startDate, { unit: 'hour', roundingMethod: 'ceil' })}`;\r\n    }\r\n    return `Starts: ${formatDateToPrimary(startDateStr)}`;\r\n  } else { // Quiz has started or is in the past\r\n    if (endDate && isFuture(endDate)) {\r\n      const hoursUntilEnd = differenceInHours(endDate, now);\r\n      if (hoursUntilEnd < 1) {\r\n        return `Ends in ${formatDistanceToNowStrict(endDate, { unit: 'minute' })}`;\r\n      } else if (hoursUntilEnd < 48) {\r\n        return `Ends in ${formatDistanceToNowStrict(endDate, { unit: 'hour', roundingMethod: 'ceil' })}`;\r\n      }\r\n      return `Ends: ${formatDateToPrimary(endDateStr!)}`;\r\n    }\r\n    if (endDate && isPast(endDate)) {\r\n      return `Ended: ${formatDateToPrimary(endDateStr!)}`;\r\n    }\r\n    // If started and no end date, or end date is far, just show start\r\n    return `Started: ${formatDateToPrimary(startDateStr)}`;\r\n  }\r\n};\r\n\r\nexport function QuizListItem({ quiz }: QuizListItemProps) {\r\n  const now = new Date();\r\n  const startDate = new Date(quiz.startDate);\r\n  const endDate = quiz.endDate ? new Date(quiz.endDate) : null;\r\n\r\n  const isUrgent = isFuture(startDate) && differenceInHours(startDate, now) <= 24;\r\n  \r\n  // Quiz can be started if its startDate has passed and it hasn't ended yet (if there's an endDate)\r\n  const canStartQuiz = isPast(startDate) && (!endDate || isFuture(endDate));\r\n  // For now, we assume if it's in the upcoming list and past startDate, it's not completed.\r\n  // A more robust solution would involve an explicit 'status' or 'isAttempted' field for the quiz by this user.\r\n\r\n  const dynamicDateTime = getDynamicDateTimeDisplay(quiz.startDate, quiz.endDate);\r\n\r\n  return (\r\n    <div \r\n      className={cn(\r\n        \"flex flex-col p-3 border rounded-md transition-colors\",\r\n        \"hover:bg-accent/50\",\r\n        isUrgent ? \"border-yellow-500/50 dark:border-yellow-400/40 bg-yellow-500/5 dark:bg-yellow-400/5\" : \"\",\r\n      )}\r\n    >\r\n      <div className=\"flex justify-between items-start gap-2\">\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"font-medium line-clamp-2 break-words\">{quiz.title}</div>\r\n          <div className=\"text-xs text-muted-foreground\">\r\n            {quiz.class.name} • {quiz._count.questions} questions\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col items-end flex-shrink-0\">\r\n          {isUrgent && (\r\n            <Badge variant=\"outline\" className=\"mb-1 border-yellow-600 text-yellow-700 dark:border-yellow-400 dark:text-yellow-300 bg-yellow-100 dark:bg-yellow-700/30\">\r\n              <AlertTriangle className=\"h-3 w-3 mr-1\" />\r\n              Urgent\r\n            </Badge>\r\n          )}\r\n          <Badge variant=\"outline\" className=\"whitespace-nowrap\">\r\n            {quiz.timeLimit ? `${quiz.timeLimit} min` : \"No time limit\"}\r\n          </Badge>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mt-2 flex items-center text-xs\">\r\n        <Calendar className=\"h-3.5 w-3.5 mr-1.5 text-muted-foreground flex-shrink-0\" />\r\n        <span title={`Starts: ${formatDateToPrimary(quiz.startDate)}${quiz.endDate ? ` | Ends: ${formatDateToPrimary(quiz.endDate)}` : ''}`}>\r\n          {dynamicDateTime}\r\n        </span>\r\n      </div>\r\n      \r\n      <div className=\"mt-3 flex flex-col sm:flex-row gap-2 items-center\">\r\n        {canStartQuiz && (\r\n          <Button variant=\"default\" size=\"sm\" asChild className=\"w-full sm:w-auto\">\r\n            <Link href={`/dashboard/student/exams/${quiz.id}`}>\r\n              <PlayCircle className=\"h-4 w-4 mr-1.5\" />\r\n              Start Quiz\r\n            </Link>\r\n          </Button>\r\n        )}\r\n        <Button \r\n          variant={canStartQuiz ? \"outline\" : \"default\"} \r\n          size=\"sm\" \r\n          asChild \r\n          className=\"w-full sm:w-auto\"\r\n        >\r\n          <Link href={`/dashboard/student/exams/${quiz.id}`}>\r\n            <FileText className=\"h-3.5 w-3.5 mr-1.5\" />\r\n            View Details\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface DialogProps extends DialogPrimitive.DialogProps {\n  /**\n   * If true, interaction with outside elements will be disabled and\n   * only dialog content will be accessible via keyboard navigation.\n   * @default true\n   */\n  modal?: boolean;\n}\n\nconst Dialog = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Root>,\n  DialogProps\n>(({ modal = true, ...props }, ref) => (\n  <DialogPrimitive.Root modal={modal} {...props} />\n))\nDialog.displayName = DialogPrimitive.Root.displayName\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 backdrop-blur-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {\n    size?: \"default\" | \"sm\" | \"lg\" | \"xl\" | \"full\";\n    hideClose?: boolean;\n    closeLabel?: string;\n  }\n>(({ className, children, size = \"default\", hideClose = false, closeLabel = \"Close\", ...props }, ref) => {\n  // Ref cho nút close để focus vào đó khi dialog mở\n  const closeButtonRef = React.useRef<HTMLButtonElement>(null);\n  \n  // Xử lý focus khi mở dialog\n  const handleOpenAutoFocus = React.useCallback((event: Event) => {\n    // Ngăn chặn hành vi focus mặc định\n    event.preventDefault();\n    \n    // Focus vào nút đóng dialog (hoặc có thể là phần tử khác trong dialog)\n    if (!hideClose && closeButtonRef.current) {\n      setTimeout(() => {\n        closeButtonRef.current?.focus();\n      }, 0);\n    }\n  }, [hideClose]);\n\n  // Xử lý focus khi đóng dialog\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Ngăn chặn hành vi focus trả về mặc định\n    event.preventDefault();\n  }, []);\n\n  return (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full translate-x-[-50%] translate-y-[-50%] gap-5 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\",\n        size === \"sm\" && \"max-w-sm rounded-lg\",\n        size === \"default\" && \"max-w-md rounded-lg\", \n        size === \"lg\" && \"max-w-xl rounded-lg\",\n        size === \"xl\" && \"max-w-3xl rounded-lg\",\n        size === \"full\" && \"max-w-[calc(100%-2rem)] h-[calc(100%-2rem)] rounded-lg\",\n        className\n      )}\n      onOpenAutoFocus={handleOpenAutoFocus}\n      onCloseAutoFocus={handleCloseAutoFocus}\n      {...props}\n    >\n      {children}\n      {!hideClose && (\n        <DialogPrimitive.Close\n          ref={closeButtonRef}\n          className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n          aria-label={closeLabel}\n        >\n        <X className=\"h-4 w-4\" />\n          <span className=\"sr-only\">{closeLabel}</span>\n      </DialogPrimitive.Close>\n      )}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n  );\n})\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/StatDetailDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { X } from \"lucide-react\";\nimport { ReactNode, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport interface StatDetailDialogProps {\n  /**\n   * Dialog open state\n   */\n  open: boolean;\n  /**\n   * Function to set dialog open state\n   */\n  setOpen: (open: boolean) => void;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Optional dialog description\n   */\n  description?: string;\n  /**\n   * Dialog content\n   */\n  children: ReactNode;\n  /**\n   * Optional max width for the dialog\n   * @default \"lg\"\n   */\n  maxWidth?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\" | \"full\";\n  /**\n   * Controls whether the dialog should trap focus\n   * @default true\n   */\n  trapFocus?: boolean;\n}\n\nconst maxWidthMap = {\n  sm: \"max-w-sm\",\n  md: \"max-w-md\",\n  lg: \"max-w-lg\",\n  xl: \"max-w-xl\",\n  \"2xl\": \"max-w-2xl\",\n  \"3xl\": \"max-w-3xl\",\n  \"4xl\": \"max-w-4xl\", \n  \"5xl\": \"max-w-5xl\",\n  \"full\": \"max-w-full\"\n};\n\n/**\n * Dialog component for displaying detailed analytics\n */\nexport function StatDetailDialog({\n  open,\n  setOpen,\n  title,\n  description,\n  children,\n  maxWidth = \"lg\",\n  trapFocus = true,\n}: StatDetailDialogProps) {\n  // Use useCallback to prevent recreation of the handler on each render\n  const handleOpenChange = useCallback((open: boolean) => {\n    // Use setTimeout to avoid focus management issues\n    setTimeout(() => {\n      setOpen(open);\n    }, 0);\n  }, [setOpen]);\n\n  // Simple animation variants without AnimatePresence which can cause focus issues\n  const fadeInAnimationVariants = {\n    hidden: { opacity: 0, y: -10 },\n    visible: (i: number) => ({\n      opacity: 1,\n      y: 0,\n      transition: {\n        delay: i * 0.1,\n        duration: 0.5,\n        ease: \"easeOut\",\n      },\n    }),\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onOpenChange={handleOpenChange}\n      modal={true} // Changed from false to true to enable overlay focus trapping\n    >\n      <DialogContent \n        className={`${maxWidthMap[maxWidth]} p-0 md:p-6 pt-6 gap-0 overflow-hidden`}\n        onInteractOutside={(e) => {\n          // Prevent closing when interacting with selects or popups\n          if ((e.target as HTMLElement).closest('[role=\"listbox\"]')) {\n            e.preventDefault();\n          }\n        }}\n        onEscapeKeyDown={(e) => {\n          // Handle escape key more carefully to avoid focus issues\n          e.preventDefault();\n          handleOpenChange(false);\n        }}\n      >\n        <DialogHeader className=\"px-4 md:px-0\">\n          <div className=\"flex items-start justify-between\">\n            <div>\n              <DialogTitle className=\"text-xl font-semibold\">{title}</DialogTitle>\n              {description && (\n                <DialogDescription className=\"mt-1.5\">{description}</DialogDescription>\n              )}\n            </div>\n            \n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8 absolute right-4 top-4 transition-all hover:bg-red-100 hover:text-red-600\"\n              onClick={() => handleOpenChange(false)}\n            >\n              <X className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Close</span>\n            </Button>\n          </div>\n        </DialogHeader>\n        \n        <div className=\"mt-4 px-4 md:px-0 pb-4 max-h-[80vh] overflow-y-auto\">\n          {children}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AASA;AACA;AACA;AAbA;;;;;;AAiDA,MAAM,cAAc;IAClB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,QAAQ;AACV;AAKO,SAAS,iBAAiB,EAC/B,IAAI,EACJ,OAAO,EACP,KAAK,EACL,WAAW,EACX,QAAQ,EACR,WAAW,IAAI,EACf,YAAY,IAAI,EACM;IACtB,sEAAsE;IACtE,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,kDAAkD;QAClD,WAAW;YACT,QAAQ;QACV,GAAG;IACL,GAAG;QAAC;KAAQ;IAEZ,iFAAiF;IACjF,MAAM,0BAA0B;QAC9B,QAAQ;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC7B,SAAS,CAAC,IAAc,CAAC;gBACvB,SAAS;gBACT,GAAG;gBACH,YAAY;oBACV,OAAO,IAAI;oBACX,UAAU;oBACV,MAAM;gBACR;YACF,CAAC;IACH;IAEA,qBACE,8OAAC,2HAAA,CAAA,SAAM;QACL,MAAM;QACN,cAAc;QACd,OAAO;kBAEP,cAAA,8OAAC,2HAAA,CAAA,gBAAa;YACZ,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,sCAAsC,CAAC;YAC3E,mBAAmB,CAAC;gBAClB,0DAA0D;gBAC1D,IAAI,AAAC,EAAE,MAAM,CAAiB,OAAO,CAAC,qBAAqB;oBACzD,EAAE,cAAc;gBAClB;YACF;YACA,iBAAiB,CAAC;gBAChB,yDAAyD;gBACzD,EAAE,cAAc;gBAChB,iBAAiB;YACnB;;8BAEA,8OAAC,2HAAA,CAAA,eAAY;oBAAC,WAAU;8BACtB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC,2HAAA,CAAA,cAAW;wCAAC,WAAU;kDAAyB;;;;;;oCAC/C,6BACC,8OAAC,2HAAA,CAAA,oBAAiB;wCAAC,WAAU;kDAAU;;;;;;;;;;;;0CAI3C,8OAAC,2HAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAQ;gCACR,MAAK;gCACL,WAAU;gCACV,SAAS,IAAM,iBAAiB;;kDAEhC,8OAAC,4LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;kDACb,8OAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;;;;;;;8BAKhC,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 1202, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1241, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/hooks/use-analytics-filter.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useMemo, useCallback } from \"react\";\n\nexport type TimeFrame = \"last7days\" | \"last30days\" | \"last3months\" | \"last6months\" | \"lastYear\" | \"allTime\";\nexport type SortDirection = \"asc\" | \"desc\";\nexport type GroupBy = \"day\" | \"week\" | \"month\" | \"subject\" | \"quizType\";\n\nexport type FilterOptions = {\n  /**\n   * Time frame for filtering data\n   */\n  timeFrame: TimeFrame;\n  /**\n   * Specific subjects to filter by (empty means all)\n   */\n  subjects: string[];\n  /**\n   * Sort direction for data\n   */\n  sortDirection: SortDirection;\n  /**\n   * Optional search term\n   */\n  searchTerm?: string;\n  /**\n   * Group data by\n   */\n  groupBy: GroupBy;\n  /**\n   * Include public quizzes\n   */\n  includePublicQuizzes: boolean;\n  /**\n   * Set minimum score threshold\n   */\n  minScoreThreshold?: number;\n  /**\n   * Set maximum score threshold\n   */\n  maxScoreThreshold?: number;\n};\n\nconst defaultFilters: FilterOptions = {\n  timeFrame: \"last30days\",\n  subjects: [],\n  sortDirection: \"desc\",\n  searchTerm: \"\",\n  groupBy: \"month\",\n  includePublicQuizzes: true,\n  minScoreThreshold: undefined,\n  maxScoreThreshold: undefined,\n};\n\nexport interface UseAnalyticsFilterResult<T> {\n  /**\n   * Current filter options\n   */\n  filters: FilterOptions;\n  /**\n   * Filtered data\n   */\n  filteredData: T[];\n  /**\n   * Update a single filter option\n   */\n  updateFilter: <K extends keyof FilterOptions>(key: K, value: FilterOptions[K]) => void;\n  /**\n   * Reset all filters to default values\n   */\n  resetFilters: () => void;\n}\n\n/**\n * Hook for filtering analytics data\n * @param data - The source data array to filter\n * @param filterFn - Function that applies filters to data\n * @returns Filtered data and filter controls\n */\nexport function useAnalyticsFilter<T>(\n  data: T[],\n  filterFn: (data: T[], filters: FilterOptions) => T[]\n): UseAnalyticsFilterResult<T> {\n  const [filters, setFilters] = useState<FilterOptions>(defaultFilters);\n\n  // Memoize update function to prevent unnecessary rerenders\n  const updateFilter = useCallback(<K extends keyof FilterOptions>(key: K, value: FilterOptions[K]) => {\n    setFilters((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  }, []);\n\n  // Reset filters to default values\n  const resetFilters = useCallback(() => setFilters(defaultFilters), []);\n\n  // Apply filters to data\n  const filteredData = useMemo(() => {\n    return filterFn(data, filters);\n  }, [data, filters, filterFn]);\n\n  return {\n    filters,\n    filteredData,\n    updateFilter,\n    resetFilters,\n  };\n} "],"names":[],"mappings":";;;AAEA;AAFA;;AA2CA,MAAM,iBAAgC;IACpC,WAAW;IACX,UAAU,EAAE;IACZ,eAAe;IACf,YAAY;IACZ,SAAS;IACT,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;AACrB;AA2BO,SAAS,mBACd,IAAS,EACT,QAAoD;IAEpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,2DAA2D;IAC3D,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAgC,KAAQ;QACvE,WAAW,CAAC,OAAS,CAAC;gBACpB,GAAG,IAAI;gBACP,CAAC,IAAI,EAAE;YACT,CAAC;IACH,GAAG,EAAE;IAEL,kCAAkC;IAClC,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,IAAM,WAAW,iBAAiB,EAAE;IAErE,wBAAwB;IACxB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,OAAO,SAAS,MAAM;IACxB,GAAG;QAAC;QAAM;QAAS;KAAS;IAE5B,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 1289, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  icon?: React.ReactNode\n  error?: boolean\n  hint?: string\n  endIcon?: React.ReactNode\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, icon, error, hint, endIcon, disabled, ...props }, ref) => {\n    return (\n      <div className=\"relative flex flex-col gap-1 w-full\">\n        {/* Input wrapper for icon positioning */}\n        <div className=\"relative\">\n          {/* Start icon if provided */}\n          {icon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center pointer-events-none\">\n              {icon}\n            </div>\n          )}\n          \n      <input\n        type={type}\n        className={cn(\n              \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 shadow-sm\",\n              icon && \"pl-10\",  // Add left padding if icon is present\n              endIcon && \"pr-10\", // Add right padding if end icon is present\n              error && \"border-destructive focus-visible:ring-destructive/50\",\n          className\n        )}\n            disabled={disabled}\n        ref={ref}\n            aria-invalid={error ? \"true\" : undefined}\n        {...props}\n      />\n          \n          {/* End icon if provided */}\n          {endIcon && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center\">\n              {endIcon}\n            </div>\n          )}\n        </div>\n        \n        {/* Hint or error message */}\n        {hint && (\n          <p \n            className={cn(\n              \"text-xs\",\n              error \n                ? \"text-destructive\" \n                : \"text-muted-foreground\"\n            )}\n            id={`${props.id || ''}-hint`}\n          >\n            {hint}\n          </p>\n        )}\n      </div>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAUA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;oBAEZ,sBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAIT,8OAAC;wBACC,MAAM;wBACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACN,+WACA,QAAQ,SACR,WAAW,SACX,SAAS,wDACb;wBAEE,UAAU;wBACd,KAAK;wBACD,gBAAc,QAAQ,SAAS;wBAClC,GAAG,KAAK;;;;;;oBAIN,yBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAMN,sBACC,8OAAC;gBACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,WACA,QACI,qBACA;gBAEN,IAAI,GAAG,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC;0BAE3B;;;;;;;;;;;;AAKX;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1363, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/EmptyAnalyticsState.tsx"],"sourcesContent":["import React from 'react'\r\nimport { AlertCircle, BarChart3, Info } from 'lucide-react'\r\nimport { Card } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\n\r\ninterface EmptyAnalyticsStateProps {\r\n  /**\r\n   * The title to display\r\n   */\r\n  title?: string\r\n  /**\r\n   * The description to display\r\n   */\r\n  description?: string\r\n  /**\r\n   * The icon to display\r\n   */\r\n  icon?: React.ReactNode\r\n  /**\r\n   * The action to display\r\n   */\r\n  action?: {\r\n    label: string\r\n    onClick: () => void\r\n  }\r\n  /**\r\n   * Visual style of the empty state\r\n   * @default \"default\"\r\n   */\r\n  variant?: \"default\" | \"error\" | \"warning\" | \"info\"\r\n}\r\n\r\n/**\r\n * Empty state component for analytics sections\r\n * Follows the design system for consistent empty states\r\n */\r\nexport function EmptyAnalyticsState({\r\n  title = \"No data available\",\r\n  description = \"There's no analytics data available for this section at the moment.\",\r\n  icon,\r\n  action,\r\n  variant = \"default\"\r\n}: EmptyAnalyticsStateProps) {\r\n  // Determine icon and colors based on variant\r\n  const getIcon = () => {\r\n    if (icon) return icon\r\n    \r\n    switch(variant) {\r\n      case \"error\":\r\n        return <AlertCircle className=\"h-12 w-12 text-destructive/60\" />\r\n      case \"warning\":\r\n        return <AlertCircle className=\"h-12 w-12 text-amber-500/60\" />\r\n      case \"info\":\r\n        return <Info className=\"h-12 w-12 text-blue-500/60\" />\r\n      default:\r\n        return <BarChart3 className=\"h-12 w-12 text-muted-foreground/60\" />\r\n    }\r\n  }\r\n  \r\n  // Determine title classes based on variant\r\n  const getTitleClass = () => {\r\n    switch(variant) {\r\n      case \"error\":\r\n        return \"text-destructive\"\r\n      case \"warning\":\r\n        return \"text-amber-500\"\r\n      case \"info\":\r\n        return \"text-blue-500\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex flex-col items-center justify-center text-center py-8\">\r\n        {getIcon()}\r\n        <h3 className={`mt-4 text-lg font-semibold ${getTitleClass()}`}>\r\n          {title}\r\n        </h3>\r\n        <p className=\"mt-2 text-sm text-muted-foreground max-w-xs mx-auto\">\r\n          {description}\r\n        </p>\r\n        {action && (\r\n          <Button \r\n            onClick={action.onClick} \r\n            variant={variant === \"default\" ? \"default\" : \"outline\"}\r\n            className=\"mt-6\"\r\n          >\r\n            {action.label}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  )\r\n} "],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;;;;;AAiCO,SAAS,oBAAoB,EAClC,QAAQ,mBAAmB,EAC3B,cAAc,qEAAqE,EACnF,IAAI,EACJ,MAAM,EACN,UAAU,SAAS,EACM;IACzB,6CAA6C;IAC7C,MAAM,UAAU;QACd,IAAI,MAAM,OAAO;QAEjB,OAAO;YACL,KAAK;gBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,8OAAC,kMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,8OAAC,oNAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;QAChC;IACF;IAEA,2CAA2C;IAC3C,MAAM,gBAAgB;QACpB,OAAO;YACL,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;gBACZ;8BACD,8OAAC;oBAAG,WAAW,CAAC,2BAA2B,EAAE,iBAAiB;8BAC3D;;;;;;8BAEH,8OAAC;oBAAE,WAAU;8BACV;;;;;;gBAEF,wBACC,8OAAC,2HAAA,CAAA,SAAM;oBACL,SAAS,OAAO,OAAO;oBACvB,SAAS,YAAY,YAAY,YAAY;oBAC7C,WAAU;8BAET,OAAO,KAAK;;;;;;;;;;;;;;;;;AAMzB","debugId":null}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/AnalyticsSkeletons.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { BarChart3 } from \"lucide-react\";\r\n\r\ninterface AnalyticsSkeletonProps {\r\n  /**\r\n   * The type of analytics skeleton to display\r\n   */\r\n  type: \"score\" | \"class\" | \"quiz\";\r\n  /**\r\n   * The title to display in the skeleton\r\n   */\r\n  title?: string;\r\n}\r\n\r\n/**\r\n * Skeleton loading component for analytics sections\r\n * Follows the design system for consistent loading states\r\n */\r\nexport function AnalyticsSkeleton({\r\n  type = \"score\",\r\n  title = \"Loading Analytics...\"\r\n}: AnalyticsSkeletonProps) {\r\n  // Renders a metrics card skeleton\r\n  const renderMetricCardSkeleton = (count: number = 4) => {\r\n    return (\r\n      <div className=\"grid gap-4 md:grid-cols-4\">\r\n        {Array.from({ length: count }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader className=\"pb-2\">\r\n              <Skeleton className=\"h-4 w-24\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Skeleton className=\"h-8 w-16 mb-2\" />\r\n              <Skeleton className=\"h-3 w-28\" />\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renders a chart skeleton\r\n  const renderChartSkeleton = (height: string = \"h-[300px]\") => {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <Skeleton className=\"h-6 w-48 mb-2\" />\r\n          <Skeleton className=\"h-4 w-64\" />\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className={`${height} flex items-center justify-center`}>\r\n            <div className=\"w-full h-full bg-muted/20 rounded-md flex items-center justify-center\">\r\n              <BarChart3 className=\"h-12 w-12 text-muted-foreground/30\" />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  // Renders a tabbed interface skeleton\r\n  const renderTabbedSkeleton = () => {\r\n    return (\r\n      <Tabs defaultValue=\"tab1\" className=\"space-y-4\">\r\n        <TabsList className=\"grid grid-cols-3 w-full sm:w-[400px]\">\r\n          <TabsTrigger value=\"tab1\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tab2\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tab3\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n        </TabsList>\r\n        \r\n        <TabsContent value=\"tab1\">\r\n          {renderChartSkeleton()}\r\n        </TabsContent>\r\n      </Tabs>\r\n    );\r\n  };\r\n  \r\n  // Different skeleton types based on analytics component\r\n  if (type === \"score\") {\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-32\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(4)}\r\n        \r\n        <div className=\"space-y-6\">\r\n          {renderChartSkeleton()}\r\n          {renderChartSkeleton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (type === \"class\") {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-40\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(4)}\r\n        {renderTabbedSkeleton()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (type === \"quiz\") {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-32\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(3)}\r\n        {renderTabbedSkeleton()}\r\n        \r\n        <Card>\r\n          <CardHeader>\r\n            <Skeleton className=\"h-6 w-48 mb-2\" />\r\n            <Skeleton className=\"h-4 w-64\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n              {Array.from({ length: 6 }).map((_, i) => (\r\n                <Card key={i} className=\"overflow-hidden\">\r\n                  <div className=\"p-4\">\r\n                    <Skeleton className=\"h-5 w-full mb-3\" />\r\n                    <div className=\"space-y-2\">\r\n                      <Skeleton className=\"h-3 w-3/4\" />\r\n                      <Skeleton className=\"h-3 w-1/2\" />\r\n                      <Skeleton className=\"h-3 w-2/3\" />\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Default fallback skeleton\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>\r\n          <Skeleton className=\"h-4 w-2/3\" />\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[400px] flex items-center justify-center\">\r\n          <div className=\"w-full h-full bg-muted/20 rounded-md flex items-center justify-center\">\r\n            <BarChart3 className=\"h-12 w-12 text-muted-foreground/30\" />\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1972, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/ScoreAnalytics.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useMemo, useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { format, subMonths, isBefore, isAfter, parseISO } from \"date-fns\";\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell,\n} from \"recharts\";\nimport {\n  Award,\n  TrendingUp,\n  TrendingDown,\n  Target,\n  BarChart3,\n  LineChart as LineChartIcon,\n  AlarmClock,\n  Brain,\n  Search,\n  SortAsc,\n  SortDesc,\n  AlertCircle,\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport { useAnalyticsFilter, FilterOptions } from \"@/hooks/use-analytics-filter\";\nimport { useAnalytics } from \"@/components/providers/analytics-provider\";\nimport { TimePointScoreData, SubjectScorePerformance, TimeFrame } from \"@/components/providers/analytics-provider\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\n\n/**\n * ScoreAnalytics Component\n * Displays detailed score analytics visualization for the student\n */\nexport function ScoreAnalytics() {\n  // --- Stage 1: Core State and Effect Hooks ---\n  const { \n    scoreAnalyticsData,\n    scoreAnalyticsError,\n    isLoadingScoreAnalytics,\n    timeFrame,\n    setTimeFrame,\n    fetchScoreAnalytics\n  } = useAnalytics();\n  \n  const { isStudent } = useAuth();\n  \n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\n\n  useEffect(() => {\n    if (!hasInitialFetch && isStudent && !isLoadingScoreAnalytics) {\n      fetchScoreAnalytics().finally(() => {\n        setHasInitialFetch(true);\n      });\n    }\n  }, [fetchScoreAnalytics, hasInitialFetch, isStudent, isLoadingScoreAnalytics]);\n\n  const handleTimeFrameChange = (value: string) => {\n    setTimeFrame(value as TimeFrame);\n  };\n\n  // --- Stage 2: Memoization/Callback Hooks and Custom Hooks that depend on Stage 1 ---\n  const timeSeriesDataForHooks = scoreAnalyticsData?.timeSeriesData || [];\n  const subjectPerformanceForHooks = scoreAnalyticsData?.subjectPerformance || [];\n\n  const filterTimeSeriesData = useCallback((data: TimePointScoreData[], filters: FilterOptions) => {\n    let filteredData = [...data];\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filteredData = filteredData.filter(item => \n        item.date.toLowerCase().includes(term)\n      );\n    }\n    return filteredData;\n  }, []); \n  \n  const filterSubjectData = useCallback((data: SubjectScorePerformance[], filters: FilterOptions) => {\n    let filteredData = [...data];\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filteredData = filteredData.filter(item => \n        item.subject.toLowerCase().includes(term)\n      );\n    }\n    filteredData.sort((a, b) => {\n      return filters.sortDirection === \"asc\" \n        ? a.averageScore - b.averageScore \n        : b.averageScore - a.averageScore;\n    });\n    return filteredData;\n  }, []);\n\n  const {\n    filters: timeFilters,\n    filteredData: filteredTimeData, \n    updateFilter: updateTimeFilter,\n    resetFilters: resetTimeFilters,\n  } = useAnalyticsFilter(timeSeriesDataForHooks, filterTimeSeriesData);\n\n  const {\n    filters: subjectFilters,\n    filteredData: filteredSubjectData, // Using this name for consistency with original chart\n    updateFilter: updateSubjectFilter,\n    resetFilters: resetSubjectFilters,\n  } = useAnalyticsFilter(subjectPerformanceForHooks, filterSubjectData);\n\n  const getActiveFilterCount = useCallback((filters: FilterOptions): number => {\n    let count = 0;\n    if (filters.searchTerm) count++;\n    if (filters.sortDirection !== \"desc\") count++;\n    return count;\n  }, []);\n\n  const sortedSubjects = useMemo(() => \n    [...filteredSubjectData].sort((a, b) => b.averageScore - a.averageScore), \n    [filteredSubjectData]\n  );\n  \n  // --- Stage 3: Conditional rendering checks ---\n  const isComponentLoading = isLoadingScoreAnalytics;\n  if (isComponentLoading) {\n    return <AnalyticsSkeleton type=\"score\" title=\"Score Analytics\" />;\n  }\n\n  if (scoreAnalyticsError) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"error\"\n        title=\"Error Loading Analytics\"\n        description={scoreAnalyticsError || \"There was a problem loading your score analytics. Please try again later.\"}\n        action={{\n          label: \"Try Again\",\n          onClick: () => fetchScoreAnalytics()\n        }}\n      />\n    );\n  }\n\n  if (!isStudent) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"warning\"\n        title=\"Analytics not available\"\n        description=\"Score analytics are only available for student accounts.\"\n      />\n    );\n  }\n  \n  if (scoreAnalyticsData === null) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"info\"\n        title=\"No Score Data Yet\"\n        description=\"Start completing quizzes and assessments to see your score analytics and track your progress here.\"\n      />\n    );\n  }\n\n  // --- Stage 4: Prepare data for rendering (scoreAnalyticsData is non-null here) ---\n  const timeSeriesData = scoreAnalyticsData.timeSeriesData || [];\n  const subjectPerformance = scoreAnalyticsData.subjectPerformance || [];\n  // Use original default object for overallStats if scoreAnalyticsData.overallStats is missing\n  const overallStats = scoreAnalyticsData.overallStats || {\n    averageScore: 0,\n    previousAverageScore: null,\n    improvement: null,\n    totalAssessments: 0,\n    currentPeriodLabel: \"No data available\",\n    previousPeriodLabel: null,\n  };\n\n  const hasSubjectData = subjectPerformance.length > 0;\n  const showImprovement = overallStats.improvement !== null && overallStats.previousAverageScore !== null;\n  \n  const improvementDisplay = showImprovement \n    ? overallStats.improvement! > 0 \n      ? `+${overallStats.improvement!.toFixed(1)}%`\n      : `${overallStats.improvement!.toFixed(1)}%`\n    : null;\n  \n  const improvementColor = showImprovement \n    ? overallStats.improvement! > 0 \n      ? \"text-success\"\n      : overallStats.improvement! < 0 \n        ? \"text-destructive\"\n        : \"text-muted-foreground\"\n    : \"text-muted-foreground\";\n\n  const timePeriodLabels = {\n    last7days: \"Last 7 Days\",\n    last30days: \"Last 30 Days\",\n    last90days: \"Last 3 Months\",\n    allTime: \"All Time\"\n  };\n\n  const strongestSubject = sortedSubjects.length > 0 ? sortedSubjects[0] : null;\n  const weakestSubject = sortedSubjects.length > 0 ? sortedSubjects[sortedSubjects.length - 1] : null;\n\n  const colors = {\n    score: \"#10b981\", // emerald-500\n    average: \"#94a3b8\", // slate-400\n  };\n\n  const cardVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: (i: number) => ({\n      opacity: 1,\n      y: 0,\n      transition: {\n        delay: i * 0.1,\n        duration: 0.5,\n        ease: \"easeOut\",\n      },\n    }),\n  };\n\n  const formatTimeSeriesForChart = (data: TimePointScoreData[]) => {\n    return data.map(item => ({\n      date: item.date,\n      score: item.averageScore,\n      assessmentCount: item.assessmentCount\n    }));\n  };\n  \n  const availableSubjects = Array.from(\n    new Set(subjectPerformance.map((item) => item.subject))\n  );\n\n  // --- Stage 5: Main JSX Return ---\n  return (\n    <div className=\"space-y-6\">\n      {/* Time frame selector and filter */}\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 mb-4\">\n        <div>\n          <h2 className=\"text-2xl font-bold tracking-tight\">Score Analytics</h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            {overallStats.currentPeriodLabel}\n          </p>\n        </div>\n        \n        <div className=\"flex gap-2 self-start\">\n          <Tabs value={timeFrame} onValueChange={handleTimeFrameChange}>\n            <TabsList>\n              <TabsTrigger value=\"last7days\">7 Days</TabsTrigger>\n              <TabsTrigger value=\"last30days\">30 Days</TabsTrigger>\n              <TabsTrigger value=\"last90days\">3 Months</TabsTrigger>\n              <TabsTrigger value=\"allTime\">All Time</TabsTrigger>\n            </TabsList>\n          </Tabs>\n        </div>\n      </div>\n\n      {/* Key Stats Cards */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        {/* Average Score Card */}\n        <motion.div\n          custom={0}\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={cardVariants}\n        >\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-base font-medium\">Average Score</CardTitle>\n              <CardDescription>\n                {overallStats.currentPeriodLabel}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex flex-col gap-1\">\n                  <span className=\"text-3xl font-bold\">\n                    {Math.round(overallStats.averageScore)}%\n                  </span>\n                  {showImprovement && (\n                    <div className={`flex items-center ${improvementColor}`}>\n                      <span className=\"flex items-center mr-1\">\n                        {overallStats.improvement! > 0 ? (\n                          <TrendingUp className=\"h-4 w-4 mr-1 text-emerald-500\" />\n                        ) : (\n                          <TrendingDown className=\"h-4 w-4 mr-1 text-destructive\" />\n                        )}\n                        {improvementDisplay}\n                      </span>\n                      {overallStats.previousPeriodLabel && `vs ${overallStats.previousPeriodLabel}`}\n                    </div>\n                  )}\n                </div>\n                <div className=\"h-12 w-12 rounded-full bg-emerald-100 flex items-center justify-center\">\n                  <BarChart3 className=\"h-6 w-6 text-emerald-600\" />\n                </div>\n              </div>\n              <Progress\n                value={Math.min(overallStats.averageScore, 100)}\n                className=\"h-2 mt-2\"\n              />\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Strongest Subject Card */}\n        <motion.div\n          custom={1}\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={cardVariants}\n        >\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-base font-medium\">\n                Strongest Subject\n              </CardTitle>\n              <CardDescription>Your highest performing area</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {strongestSubject ? (\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex flex-col gap-1\">\n                    <span className=\"text-3xl font-bold\">\n                      {Math.round(strongestSubject.averageScore)}%\n                    </span>\n                    <div className=\"flex items-center\">\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {strongestSubject.subject}\n                      </Badge>\n                      <span className=\"text-xs text-muted-foreground ml-2\">\n                        {strongestSubject.assessmentCount} assessments\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-100 flex items-center justify-center\">\n                    <Award className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex flex-col gap-1\">\n                    <span className=\"text-xl font-bold text-muted-foreground\">No data available</span>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Weakest Subject Card */}\n        <motion.div\n          custom={2}\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={cardVariants}\n        >\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-base font-medium\">\n                Focus Area\n              </CardTitle>\n              <CardDescription>Subject needing improvement</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {weakestSubject ? (\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex flex-col gap-1\">\n                    <span className=\"text-3xl font-bold\">\n                      {Math.round(weakestSubject.averageScore)}%\n                    </span>\n                    <div className=\"flex items-center\">\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {weakestSubject.subject}\n                      </Badge>\n                      <span className=\"text-xs text-muted-foreground ml-2\">\n                        {weakestSubject.assessmentCount} assessments\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"h-12 w-12 rounded-full bg-amber-100 flex items-center justify-center\">\n                    <Target className=\"h-6 w-6 text-amber-600\" />\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex flex-col gap-1\">\n                    <span className=\"text-xl font-bold text-muted-foreground\">No data available</span>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </motion.div>\n      </div>\n\n      {/* Performance Over Time Chart */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.3, duration: 0.5 }}\n      >\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <CardTitle>Performance Over Time</CardTitle>\n                <CardDescription>\n                  Your score trends for {overallStats.currentPeriodLabel}\n                </CardDescription>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"secondary\" className=\"flex items-center gap-1 py-1\">\n                  <LineChartIcon className=\"h-3.5 w-3.5\" />\n                  <span>{timeSeriesData.length} data points</span>\n                </Badge>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            {timeSeriesData.length > 0 ? (\n              <div className=\"h-[300px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart\n                    data={formatTimeSeriesForChart(timeSeriesData)}\n                    margin={{ top: 5, right: 30, left: 0, bottom: 25 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\n                    <XAxis \n                      dataKey=\"date\" \n                      tick={{ fontSize: 12 }}\n                      tickMargin={10}\n                    />\n                    <YAxis \n                      tick={{ fontSize: 12 }}\n                      domain={[0, 100]}\n                      tickFormatter={(value) => `${value}%`}\n                    />\n                    <Tooltip\n                      contentStyle={{ \n                        backgroundColor: \"#fff\", \n                        borderRadius: \"8px\",\n                        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n                        border: \"none\"\n                      }}\n                      formatter={(value: any) => [`${value}%`, \"Score\"]}\n                      labelFormatter={(label) => `Date: ${label}`}\n                    />\n                    <Legend verticalAlign=\"top\" height={36} />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"score\"\n                      name=\"Your Score\"\n                      stroke={colors.score}\n                      strokeWidth={2}\n                      activeDot={{ r: 6 }}\n                      dot={{ r: 3 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            ) : (\n              <div className=\"h-[300px] flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <LineChartIcon className=\"h-12 w-12 mx-auto text-muted-foreground opacity-20\" />\n                  <p className=\"mt-2 text-lg font-medium\">No data available for this period</p>\n                  <p className=\"text-muted-foreground\">\n                    Complete more assessments to see your performance over time\n                  </p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Subject Performance Chart */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.4, duration: 0.5 }}\n      >\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between flex-wrap gap-4\">\n              <div>\n                <CardTitle>Subject Performance</CardTitle>\n                <CardDescription>\n                  Your performance across different subjects\n                </CardDescription>\n              </div>\n\n              <div className=\"flex items-center gap-2\">\n                {/* Simplified Subject Filter Bar */}\n                <div className=\"flex items-center gap-2\">\n                  {/* Search Input */}\n                  <div className=\"relative w-[180px]\">\n                    <Search className=\"absolute left-2 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                    <Input \n                      placeholder=\"Search subjects...\" \n                      className=\"pl-8 h-9 text-sm\"\n                      value={subjectFilters.searchTerm || ''}\n                      onChange={(e) => updateSubjectFilter('searchTerm', e.target.value)} \n                    />\n                  </div>\n                  \n                  {/* Sort Toggle Button */}\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => updateSubjectFilter('sortDirection', subjectFilters.sortDirection === 'asc' ? 'desc' : 'asc')}\n                    className=\"h-9 px-3\"\n                    title={subjectFilters.sortDirection === 'asc' ? 'Sort Descending' : 'Sort Ascending'}\n                  >\n                    {subjectFilters.sortDirection === 'asc' ? (\n                      <SortAsc className=\"h-4 w-4\" />\n                    ) : (\n                      <SortDesc className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            {filteredSubjectData.length > 0 ? (\n              <div className=\"h-[300px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={filteredSubjectData.map(item => ({\n                      subject: item.subject,\n                      score: Math.round(item.averageScore),\n                      assessmentCount: item.assessmentCount,\n                    }))}\n                    margin={{ top: 5, right: 30, left: 20, bottom: 50 }}\n                    barSize={40}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\n                    <XAxis\n                      dataKey=\"subject\"\n                      tick={{ fontSize: 12 }}\n                      angle={-45}\n                      textAnchor=\"end\"\n                      height={60}\n                    />\n                    <YAxis\n                      domain={[0, 100]}\n                      tickFormatter={(value) => `${value}%`}\n                    />\n                    <Tooltip\n                      formatter={(value: any, name: string, props: any) => {\n                        if (name === \"score\") {\n                          return [`${value}%`, \"Average Score\"];\n                        }\n                        return [value, name];\n                      }}\n                      contentStyle={{ \n                        backgroundColor: \"#fff\", \n                        borderRadius: \"8px\",\n                        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n                        border: \"none\"\n                      }}\n                      cursor={{ fill: \"rgba(0, 0, 0, 0.05)\" }}\n                    />\n                    <Legend formatter={(value) => value === \"score\" ? \"Average Score\" : value} />\n                    <Bar dataKey=\"score\" name=\"score\">\n                      {filteredSubjectData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={colors.score}\n                          fillOpacity={0.8}\n                        />\n                      ))}\n                    </Bar>\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            ) : (\n              <div className=\"h-[300px] flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <BarChart3 className=\"h-12 w-12 mx-auto text-muted-foreground opacity-20\" />\n                  <p className=\"mt-2 text-lg font-medium\">\n                    No subject data available\n                  </p>\n                  <p className=\"text-muted-foreground\">\n                    Complete assessments across different subjects to see analysis\n                  </p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3256, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3366, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3574, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/ClassParticipationAnalytics.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n  PieChart,\n  Pie,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport {\n  Users,\n  Clock,\n  CalendarClock,\n  BarChart3,\n  PieChart as PieChartIcon,\n  LineChart as LineChartIcon,\n  MessageSquare,\n  Calendar,\n  AlertCircle,\n  Timer,\n  BarChart2,\n} from \"lucide-react\";\nimport { format, parseISO } from \"date-fns\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Alert, AlertTitle, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { \n  useAnalytics, \n  ClassParticipationData,\n  generateEmptyClassParticipationData,\n  TimeFrame,\n  convertToLegacyFormat,\n  LegacyClassParticipationData\n} from \"@/components/providers/analytics-provider\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\n\ninterface ClassParticipationAnalyticsProps {\n  /**\n   * Total number of classes joined (fallback value)\n   */\n  classesJoined?: number;\n  /**\n   * Loading state\n   */\n  isLoading?: boolean;\n}\n\nconst COLORS = [\"#10b981\", \"#f59e0b\", \"#ef4444\", \"#3b82f6\", \"#8b5cf6\"];\n\n// Helper function to format seconds into hours and minutes\nconst formatTimeSpent = (seconds: number): string => {\n  if (seconds < 60) return `${seconds}s`;\n  \n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  \n  if (hours === 0) return `${minutes}m`;\n  return `${hours}h ${minutes}m`;\n};\n\n// Helper to format dates for different time frames\nconst formatDateLabel = (dateStr: string, timeFrame: TimeFrame): string => {\n  try {\n    // Format depends on date format and time frame\n    if (timeFrame === \"last7days\" || timeFrame === \"last30days\") {\n      // For days format: \"yyyy-MM-dd\" to \"MMM d\"\n      return format(parseISO(dateStr), \"MMM d\");\n    } else if (timeFrame === \"last90days\") {\n      // For weeks format: \"yyyy-MM-dd\" (start of week) to \"MMM d\"\n      return format(parseISO(dateStr), \"MMM d\");\n    } else {\n      // For months format: \"yyyy-MM\" to \"MMM yyyy\"\n      return format(parseISO(`${dateStr}-01`), \"MMM yyyy\");\n    }\n  } catch (e) {\n    return dateStr;\n  }\n};\n\n/**\n * Detailed class participation analytics component for student dashboard\n */\nexport function ClassParticipationAnalytics({\n  classesJoined = 0,\n}: ClassParticipationAnalyticsProps) {\n  const { \n    classParticipationData: analyticsData,\n    classParticipationError: error,\n    isLoadingClassParticipation: isLoadingData,\n    timeFrame,\n    setTimeFrame,\n    fetchClassParticipation\n  } = useAnalytics();\n  \n  const { isStudent } = useAuth();\n  \n  // State to track if initial fetch has been done\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\n  \n  // Fetch analytics data when component mounts - only if user is a student\n  useEffect(() => {\n    // Only try to fetch data if user is a student and we haven't fetched yet\n    if (!hasInitialFetch && isStudent && !isLoadingData) {\n      fetchClassParticipation().finally(() => {\n        setHasInitialFetch(true);\n      });\n    }\n  }, [fetchClassParticipation, hasInitialFetch, isStudent, isLoadingData]);\n  \n  // Handle time frame change\n  const handleTimeFrameChange = useCallback((value: string) => {\n    if (value !== timeFrame) {\n      setTimeFrame(value as TimeFrame);\n    }\n  }, [timeFrame, setTimeFrame]);\n  \n  // Use fallback data if nothing is available\n  const data = analyticsData || generateEmptyClassParticipationData();\n  \n  // Generate legacy format data for backward compatibility with existing charts\n  const legacyData: LegacyClassParticipationData = convertToLegacyFormat(data);\n  \n  // Combined loading state\n  const isDataLoading = isLoadingData;\n\n  // Show loading state\n  if (isDataLoading) {\n    return <AnalyticsSkeleton type=\"class\" title=\"Class Participation\" />;\n  }\n\n  if (!isStudent) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"warning\"\n        title=\"Analytics not available\"\n        description=\"Class participation analytics are only available for student accounts.\"\n      />\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"error\"\n        title=\"Error loading class analytics\"\n        description={error || \"There was a problem loading your class participation data.\"}\n        action={{\n          label: \"Try Again\",\n          onClick: () => fetchClassParticipation()\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Key metrics cards */}\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Classes</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.keyMetrics.activeClasses}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Currently active classes\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Engagement Rate</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.keyMetrics.overallEngagementRate}%</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Overall quiz completion rate\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Study Time</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatTimeSpent(data.keyMetrics.totalStudyTimeSeconds)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Time spent on quizzes\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Performance</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {data.classPerformanceBreakdown.length > 0 \n                ? `${Math.round(data.classPerformanceBreakdown.reduce((sum, item) => sum + item.classCompletionRate, 0) / data.classPerformanceBreakdown.length)}%`\n                : \"N/A\"}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Average class completion\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Participation Over Time Chart */}\n      <Card>\n        <CardHeader className=\"pb-2\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <CardTitle className=\"flex items-center gap-2\">\n                <LineChartIcon className=\"h-5 w-5 text-blue-500\" />\n                Participation Over Time\n              </CardTitle>\n              <CardDescription>\n                Your quiz completions over the selected time period\n              </CardDescription>\n            </div>\n            \n            <Select value={timeFrame} onValueChange={handleTimeFrameChange}>\n              <SelectTrigger className=\"w-[160px]\">\n                <SelectValue placeholder=\"Select time frame\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\n                <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\n                <SelectItem value=\"last90days\">Last 90 Days</SelectItem>\n                <SelectItem value=\"allTime\">All Time</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {data.participationOverTime.length === 0 || data.participationOverTime.every(item => item.completedQuizzes === 0) ? (\n            <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\n              <LineChartIcon className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n              <h3 className=\"text-lg font-semibold\">No participation data yet</h3>\n              <p className=\"text-sm text-muted-foreground max-w-md\">\n                Start completing quizzes to see your participation trends over time.\n              </p>\n            </div>\n          ) : (\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                  data={data.participationOverTime}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"date\" \n                    tick={{ fontSize: 12 }}\n                    interval=\"preserveStartEnd\"\n                  />\n                  <YAxis \n                    allowDecimals={false}\n                    tick={{ fontSize: 12 }}\n                  />\n                  <Tooltip \n                    formatter={(value) => [`${value} quizzes`, 'Completed']}\n                    labelFormatter={(value, payload) => {\n                      if (payload && payload.length > 0 && payload[0].payload) {\n                        const originalDate = payload[0].payload.date;\n                        return `Date: ${formatDateLabel(originalDate, timeFrame)}`;\n                      }\n                      return value;\n                    }}\n                  />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"completedQuizzes\"\n                    name=\"Completed Quizzes\"\n                    stroke=\"#10b981\"\n                    activeDot={{ r: 8 }}\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Chart Tabs */}\n      <Tabs defaultValue=\"performance\" className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <TabsList>\n            <TabsTrigger value=\"performance\" className=\"flex items-center gap-1\">\n              <BarChart3 className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Class Performance</span>\n              <span className=\"sm:hidden\">Performance</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"activity\" className=\"flex items-center gap-1\">\n              <PieChartIcon className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Activity Distribution</span>\n              <span className=\"sm:hidden\">Activities</span>\n            </TabsTrigger>\n          </TabsList>\n        </div>\n\n        <TabsContent value=\"performance\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Class Performance Breakdown</CardTitle>\n              <CardDescription>\n                Your quiz completion rates across different classes\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              {data.classPerformanceBreakdown.length === 0 ? (\n                <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\n                  <Users className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n                  <h3 className=\"text-lg font-semibold\">No class data yet</h3>\n                  <p className=\"text-sm text-muted-foreground max-w-md\">\n                    Start participating in your classes by taking quizzes to see your performance analytics here.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"h-[350px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                      layout=\"vertical\"\n                      data={data.classPerformanceBreakdown}\n                      margin={{\n                        top: 20,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis type=\"number\" domain={[0, 100]} label={{ value: 'Completion Rate (%)', position: 'insideBottom', offset: -5 }} />\n                      <YAxis dataKey=\"className\" type=\"category\" width={100} />\n                      <Tooltip formatter={(value, name) => {\n                        if (name === \"classCompletionRate\") return [`${value}%`, 'Completion Rate'];\n                        return [value, name];\n                      }} />\n                      <Legend />\n                      <Bar \n                        dataKey=\"classCompletionRate\" \n                        name=\"Completion Rate\" \n                        fill=\"#10b981\" \n                        radius={[0, 4, 4, 0]}\n                      />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"activity\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Class Activity Distribution</CardTitle>\n              <CardDescription>\n                How your participation is distributed between active engagement and passive viewing\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              {legacyData.classActivities.every(activity => activity.value === 0) ? (\n                <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\n                  <PieChartIcon className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n                  <h3 className=\"text-lg font-semibold\">No activity data yet</h3>\n                  <p className=\"text-sm text-muted-foreground max-w-md\">\n                    Start participating in your classes to see how your activities are distributed.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"h-[350px] flex items-center justify-center\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"max-w-[500px] mx-auto\">\n                    <PieChart>\n                      <Pie\n                        data={legacyData.classActivities}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={120}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                      >\n                        {legacyData.classActivities.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => `${value}%`} />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Class Time Spent Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Timer className=\"h-5 w-5 text-blue-500\" />\n            Time Spent by Class\n          </CardTitle>\n          <CardDescription>\n            Detailed breakdown of your study time across classes\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {data.classPerformanceBreakdown.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n              <Clock className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n              <h3 className=\"text-lg font-semibold\">No time data available</h3>\n              <p className=\"text-sm text-muted-foreground max-w-md\">\n                Once you spend time on quizzes, your study time by class will appear here.\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Class</TableHead>\n                  <TableHead>Quizzes Completed</TableHead>\n                  <TableHead>Quizzes Assigned</TableHead>\n                  <TableHead className=\"text-right\">Time Spent</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {data.classPerformanceBreakdown.map((classData) => (\n                  <TableRow key={classData.classId}>\n                    <TableCell className=\"font-medium\">{classData.className}</TableCell>\n                    <TableCell>{classData.quizzesCompletedByStudent}</TableCell>\n                    <TableCell>{classData.quizzesAssigned}</TableCell>\n                    <TableCell className=\"text-right\">\n                      <Badge variant=\"outline\">\n                        <Clock className=\"h-3 w-3 mr-1\" />\n                        {formatTimeSpent(classData.timeSpentInClassSeconds)}\n                      </Badge>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4780, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/QuizCompletionAnalytics.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { format, parseISO } from \"date-fns\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport {\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\nimport {\n  CheckCircle,\n  Clock,\n  BarChart2,\n  LineChart as LineChartIcon,\n  CalendarDays,\n  Sigma,\n  Calendar,\n  AreaChart as AreaChartIcon,\n  PieChart as PieChartIcon,\n  Flame,\n  Target,\n  Clock3,\n  AlertCircle,\n  BookText,\n  Award,\n  School,\n} from \"lucide-react\";\nimport { useAnalytics, TimeFrame, QuizCompletionAnalyticsData } from \"@/components/providers/analytics-provider\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\nimport { Button } from \"@/components/ui/button\";\n\n// Chart colors\nconst COLORS = [\"#10b981\", \"#f59e0b\", \"#ef4444\", \"#3b82f6\", \"#8b5cf6\", \"#ec4899\", \"#14b8a6\"];\n\n/**\n * Detailed quiz completion analytics component for student dashboard\n * Shows completion rates, trends, categories and individual quiz breakdown\n */\nexport function QuizCompletionAnalytics() {\n  const { \n    quizCompletionData: analyticsData,\n    quizCompletionError: error,\n    isLoadingQuizCompletion: isLoading,\n    timeFrame,\n    setTimeFrame,\n    fetchQuizCompletion\n  } = useAnalytics();\n  \n  const { isStudent } = useAuth();\n  \n  // State to track if initial fetch has been done\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\n\n  const { toast } = useToast();\n\n  // Fetch analytics data when component mounts - only if user is a student\n  useEffect(() => {\n    // Only try to fetch data if user is a student and we haven't fetched yet and not already loading\n    if (!hasInitialFetch && isStudent && !isLoading) {\n      fetchQuizCompletion().finally(() => {\n        setHasInitialFetch(true);\n      });\n    }\n  }, [fetchQuizCompletion, hasInitialFetch, isStudent, isLoading]);\n\n  // Use useCallback to memoize handler function\n  const handleTimeFrameChange = useCallback((value: string) => {\n    if (value !== timeFrame) {\n      setTimeFrame(value as TimeFrame);\n    }\n  }, [timeFrame, setTimeFrame]);\n\n  // Thêm chức năng debug để kiểm tra dữ liệu API trực tiếp\n  const handleManualFetch = useCallback(async () => {\n    try {\n      const response = await fetch(`/api/users/me/quiz-completion-analytics?timeFrame=${timeFrame}`);\n      if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Direct API data:\", data);\n      if (data.success) {\n        toast({\n          title: \"API Data Successfully Retrieved\",\n          description: \"Check browser console for details.\",\n        });\n      } else {\n        toast({\n          title: \"API Error\",\n          description: data.message || \"No data returned from API\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Manual fetch error:\", error);\n      toast({\n        title: \"API Request Failed\",\n        description: error instanceof Error ? error.message : \"Unknown error\",\n        variant: \"destructive\",\n      });\n    }\n  }, [timeFrame, toast]);\n\n  // Determine if we're in a loading state (either from context or local state)\n  const showLoading = isLoading;\n\n  // Transform time-series data for charts\n  const completionTrendsData = useMemo(() => {\n    if (!analyticsData?.completionTrends) return [];\n    \n    return analyticsData.completionTrends.map(item => {\n      // Extract year and month from period (format: YYYY-MM)\n      const [year, month] = item.period.split('-');\n      const date = new Date(parseInt(year), parseInt(month) - 1);\n      \n      // Format based on time frame\n      let displayFormat = \"\";\n      if (timeFrame === \"last7days\" || timeFrame === \"last30days\") {\n        displayFormat = format(date, \"MMM d\");\n      } else if (timeFrame === \"last90days\") {\n        displayFormat = format(date, \"MMM d\");\n      } else {\n        displayFormat = format(date, \"MMM yyyy\");\n      }\n      \n      return {\n        date: displayFormat,\n        period: item.period,\n        completedCount: item.completedCount,\n        averageScore: item.averageScore\n      };\n    });\n  }, [analyticsData?.completionTrends, timeFrame]);\n\n  // Show skeleton during loading\n  if (isLoading) {\n    return <AnalyticsSkeleton type=\"quiz\" title=\"Quiz Completion\" />;\n  }\n\n  // Show not authenticated state for non-students\n  if (!isStudent) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"warning\"\n        title=\"Analytics not available\"\n        description=\"Quiz completion analytics are only available for student accounts.\"\n      />\n    );\n  }\n\n  if (error) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"error\"\n        title=\"Error loading analytics data\"\n        description={error}\n        action={{\n          label: \"Try Again\",\n          onClick: () => fetchQuizCompletion()\n        }}\n      />\n    );\n  }\n\n  // No data state\n  if (!analyticsData || !analyticsData.keyMetrics) {\n    return (\n      <div className=\"space-y-4\">\n        <EmptyAnalyticsState\n          variant=\"info\"\n          title=\"No quiz completion data available\"\n          description=\"We couldn't find any quiz data for your account. This could be because you haven't completed any quizzes yet or there was an issue loading your data.\"\n          action={{\n            label: \"Try Again\",\n            onClick: () => fetchQuizCompletion()\n          }}\n        />\n        \n        {/* Debug button for development only */}\n        <div className=\"flex justify-center\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleManualFetch}\n            className=\"text-xs\"\n          >\n            Check API Directly (Debug)\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Time frame selection */}\n      <div className=\"flex justify-end\">\n        <Select value={timeFrame} onValueChange={handleTimeFrameChange}>\n          <SelectTrigger className=\"w-[180px]\" id=\"time-frame-trigger\">\n            <SelectValue placeholder=\"Time Period\" />\n          </SelectTrigger>\n          <SelectContent position=\"popper\" sideOffset={4} avoidCollisions>\n            <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\n            <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\n            <SelectItem value=\"last90days\">Last 3 Months</SelectItem>\n            <SelectItem value=\"allTime\">All Time</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n      \n      {/* Key metrics cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <Target className=\"mr-2 h-4 w-4 text-emerald-500\" />\n              Completion Rate\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.completionRate || 0}%</div>\n              <Badge \n                variant={\n                  !analyticsData?.keyMetrics ? \"destructive\" :\n                  analyticsData.keyMetrics.completionRate >= 80 ? \"success\" : \n                  analyticsData.keyMetrics.completionRate >= 60 ? \"warning\" : \n                  \"destructive\"\n                }\n              >\n                {\n                  !analyticsData?.keyMetrics ? \"Needs improvement\" :\n                  analyticsData.keyMetrics.completionRate >= 80 ? \"Excellent\" : \n                  analyticsData.keyMetrics.completionRate >= 60 ? \"Good\" : \n                  \"Needs improvement\"\n                }\n              </Badge>\n            </div>\n            <Progress \n              value={analyticsData?.keyMetrics?.completionRate || 0}\n              className=\"h-2\"\n            />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              {analyticsData?.keyMetrics?.completedQuizzes} of {analyticsData?.keyMetrics?.totalQuizzes} assigned quizzes completed\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <Award className=\"mr-2 h-4 w-4 text-amber-500\" />\n              Average Score\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.averageScore || 0}%</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Your average score on completed quizzes\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <BookText className=\"mr-2 h-4 w-4 text-purple-500\" />\n              Completed Quizzes\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.completedQuizzes || 0}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Quizzes successfully completed\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <School className=\"mr-2 h-4 w-4 text-blue-500\" />\n              Average Attempts\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.averageAttempts || 0}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Average attempts per quiz\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Chart Tabs */}\n      <Tabs defaultValue=\"time-series\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"time-series\" className=\"flex items-center gap-1\">\n            <AreaChartIcon className=\"h-4 w-4\" />\n            <span className=\"hidden sm:inline\">Progress Over Time</span>\n            <span className=\"sm:hidden\">Progress</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"by-category\" className=\"flex items-center gap-1\">\n            <BarChart2 className=\"h-4 w-4\" />\n            <span className=\"hidden sm:inline\">By Category</span>\n            <span className=\"sm:hidden\">Categories</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"quiz-list\" className=\"flex items-center gap-1\">\n            <Calendar className=\"h-4 w-4\" />\n            <span className=\"hidden sm:inline\">Quizzes Breakdown</span>\n            <span className=\"sm:hidden\">Quizzes</span>\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"time-series\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Quiz Completion Over Time</CardTitle>\n              <CardDescription>\n                Number of quizzes completed by period\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              <div className=\"h-[300px]\">\n                {completionTrendsData.length > 0 ? (\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <AreaChart data={completionTrendsData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"date\" />\n                      <YAxis yAxisId=\"left\" />\n                      <YAxis yAxisId=\"right\" orientation=\"right\" />\n                      <Tooltip \n                        formatter={(value, name) => {\n                          if (name === \"completedCount\") return [value, \"Quizzes Completed\"];\n                          if (name === \"averageScore\") {\n                            const numValue = typeof value === 'number' ? value : parseFloat(String(value));\n                            return [isNaN(numValue) ? value : numValue.toFixed(1) + \"%\", \"Average Score\"];\n                          }\n                          return [value, name];\n                        }}\n                      />\n                      <Legend />\n                      <Area \n                        yAxisId=\"left\"\n                        type=\"monotone\" \n                        dataKey=\"completedCount\" \n                        name=\"Completed Quizzes\" \n                        stroke=\"#10b981\" \n                        fill=\"rgba(16, 185, 129, 0.2)\" \n                      />\n                      <Line\n                        yAxisId=\"right\"\n                        type=\"monotone\"\n                        dataKey=\"averageScore\"\n                        name=\"Average Score\"\n                        stroke=\"#8b5cf6\"\n                      />\n                    </AreaChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <div className=\"flex flex-col items-center justify-center h-full text-center\">\n                    <Calendar className=\"h-12 w-12 text-muted-foreground/50\" />\n                    <h3 className=\"mt-4 text-lg font-medium\">No completion data available</h3>\n                    <p className=\"mt-2 text-sm text-muted-foreground max-w-xs\">\n                      Complete more quizzes to see your progress over time.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"by-category\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Completion by Category</CardTitle>\n              <CardDescription>\n                How well you're completing quizzes across different categories\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {analyticsData?.categoryAnalysis && analyticsData.categoryAnalysis.length > 0 ? (\n                <div className=\"space-y-6\">\n                  {analyticsData.categoryAnalysis.map((category, index) => {\n                    return (\n                      <div key={category.category} className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-2\">\n                            <div \n                              className=\"w-3 h-3 rounded-full\" \n                              style={{ backgroundColor: COLORS[index % COLORS.length] }}\n                            />\n                            <div className=\"font-medium\">{category.category}</div>\n                            <Badge variant=\"outline\" className=\"ml-2\">{category.completedCount}/{category.quizCount}</Badge>\n                          </div>\n                          <div className={`text-sm font-semibold ${\n                            category.completionRate >= 80 ? \"text-green-600\" : \n                            category.completionRate >= 60 ? \"text-amber-600\" : \n                            \"text-red-600\"\n                          }`}>\n                            {category.completionRate}%\n                          </div>\n                        </div>\n                        <Progress \n                          value={category.completionRate} \n                          className={`h-2 ${\n                            category.completionRate >= 80 ? \"bg-green-600\" :\n                            category.completionRate >= 60 ? \"bg-amber-600\" :\n                            \"bg-red-600\"\n                          }`}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <BookText className=\"h-12 w-12 text-muted-foreground/50\" />\n                  <h3 className=\"mt-4 text-lg font-medium\">No category data available</h3>\n                  <p className=\"mt-2 text-sm text-muted-foreground max-w-xs\">\n                    Complete more quizzes to see your performance breakdown by category.\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"quiz-list\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Quiz Details</CardTitle>\n              <CardDescription>\n                Status and performance on individual quizzes\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {analyticsData?.quizBreakdown && analyticsData.quizBreakdown.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {analyticsData.quizBreakdown.map((quiz, index) => (\n                    <Card key={`${quiz.quizId}-${index}`} className=\"overflow-hidden\">\n                      <div className=\"p-4\">\n                        <div className=\"flex justify-between items-start\">\n                          <div>\n                            <h3 className=\"font-medium text-sm\">{quiz.title}</h3>\n                            <p className=\"text-xs text-muted-foreground\">{quiz.className}</p>\n                          </div>\n                          <Badge\n                            variant={\n                              quiz.completionStatus === \"completed\" ? \"success\" :\n                              quiz.completionStatus === \"in_progress\" ? \"warning\" :\n                              \"outline\"\n                            }\n                          >\n                            {quiz.completionStatus === \"completed\" ? \"Completed\" :\n                             quiz.completionStatus === \"in_progress\" ? \"In Progress\" :\n                             \"Not Started\"}\n                          </Badge>\n                        </div>\n                        <div className=\"grid grid-cols-2 gap-2 mt-3\">\n                          <div className=\"text-xs\">\n                            <span className=\"text-muted-foreground\">Score: </span>\n                            {quiz.bestScore !== null ? `${quiz.bestScore}%` : \"N/A\"}\n                          </div>\n                          <div className=\"text-xs\">\n                            <span className=\"text-muted-foreground\">Attempts: </span>\n                            {quiz.attemptCount}\n                          </div>\n                          <div className=\"col-span-2 text-xs\">\n                            <span className=\"text-muted-foreground\">Last attempt: </span>\n                            {quiz.lastAttemptDate ? format(new Date(quiz.lastAttemptDate), \"MMM d, yyyy\") : \"N/A\"}\n                          </div>\n                        </div>\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <BookText className=\"h-12 w-12 text-muted-foreground/50\" />\n                  <h3 className=\"mt-4 text-lg font-medium\">No quiz data available</h3>\n                  <p className=\"mt-2 text-sm text-muted-foreground max-w-xs\">\n                    You don't have any assigned quizzes in the selected time period.\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6035, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/debug/ScoreAnalyticsDebug.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useAnalytics } from \"@/components/providers/analytics-provider\";\nimport { useAuth } from \"@/hooks/use-auth\";\n\n/**\n * Debug component to test score analytics API and data flow\n * This component helps identify issues with the score analytics popup\n */\nexport function ScoreAnalyticsDebug() {\n  const [apiTestResult, setApiTestResult] = useState<any>(null);\n  const [isTestingApi, setIsTestingApi] = useState(false);\n  const { toast } = useToast();\n  const { isStudent, user } = useAuth();\n  \n  const { \n    scoreAnalyticsData,\n    scoreAnalyticsError,\n    isLoadingScoreAnalytics,\n    timeFrame,\n    fetchScoreAnalytics\n  } = useAnalytics();\n\n  const testApiDirectly = async () => {\n    setIsTestingApi(true);\n    setApiTestResult(null);\n    \n    try {\n      const response = await fetch(`/api/users/me/score-analytics?timeFrame=${timeFrame}`);\n      const result = await response.json();\n      \n      setApiTestResult({\n        status: response.status,\n        success: result.success,\n        data: result.data,\n        error: result.error,\n        headers: Object.fromEntries(response.headers.entries())\n      });\n      \n      if (result.success) {\n        toast({\n          title: \"API Test Successful\",\n          description: \"Score analytics API returned data successfully\",\n        });\n      } else {\n        toast({\n          variant: \"destructive\",\n          title: \"API Test Failed\",\n          description: result.error || \"Unknown error occurred\",\n        });\n      }\n    } catch (error) {\n      setApiTestResult({\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        status: \"Network Error\"\n      });\n      \n      toast({\n        variant: \"destructive\",\n        title: \"API Test Failed\",\n        description: \"Network error or server not responding\",\n      });\n    } finally {\n      setIsTestingApi(false);\n    }\n  };\n\n  const testProviderFetch = async () => {\n    try {\n      const result = await fetchScoreAnalytics();\n      toast({\n        title: \"Provider Test\",\n        description: result ? \"Analytics provider returned data\" : \"Analytics provider returned null\",\n      });\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Provider Test Failed\",\n        description: error instanceof Error ? error.message : \"Unknown error\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Score Analytics Debug Panel</CardTitle>\n          <CardDescription>\n            Test and debug the score analytics data flow\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* User Info */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium\">User Info</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                Name: {user?.name || 'Not available'}\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Role: {user?.role || 'Not available'}\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Is Student: {isStudent ? 'Yes' : 'No'}\n              </p>\n            </div>\n            <div>\n              <h4 className=\"font-medium\">Analytics State</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                Time Frame: {timeFrame}\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Loading: {isLoadingScoreAnalytics ? 'Yes' : 'No'}\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Has Data: {scoreAnalyticsData ? 'Yes' : 'No'}\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Error: {scoreAnalyticsError || 'None'}\n              </p>\n            </div>\n          </div>\n\n          {/* Test Buttons */}\n          <div className=\"flex gap-2\">\n            <Button \n              onClick={testApiDirectly} \n              disabled={isTestingApi}\n              variant=\"outline\"\n            >\n              {isTestingApi ? 'Testing API...' : 'Test API Directly'}\n            </Button>\n            <Button \n              onClick={testProviderFetch}\n              variant=\"outline\"\n            >\n              Test Provider Fetch\n            </Button>\n          </div>\n\n          {/* Provider Data Display */}\n          {scoreAnalyticsData && (\n            <div>\n              <h4 className=\"font-medium mb-2\">Provider Data</h4>\n              <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <Badge variant=\"secondary\">Overall Stats</Badge>\n                  <p>Average Score: {scoreAnalyticsData.overallStats.averageScore}%</p>\n                  <p>Total Assessments: {scoreAnalyticsData.overallStats.totalAssessments}</p>\n                  <p>Period: {scoreAnalyticsData.overallStats.currentPeriodLabel}</p>\n                </div>\n                <div>\n                  <Badge variant=\"secondary\">Time Series</Badge>\n                  <p>Data Points: {scoreAnalyticsData.timeSeriesData.length}</p>\n                </div>\n                <div>\n                  <Badge variant=\"secondary\">Subject Performance</Badge>\n                  <p>Subjects: {scoreAnalyticsData.subjectPerformance.length}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* API Test Results */}\n          {apiTestResult && (\n            <div>\n              <h4 className=\"font-medium mb-2\">API Test Results</h4>\n              <div className=\"bg-muted p-3 rounded text-sm\">\n                <pre>{JSON.stringify(apiTestResult, null, 2)}</pre>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6468, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/hooks/use-score-analytics.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useQueryState, parseAsString, parseAsInteger } from \"nuqs\";\n\nexport interface ScoreAnalyticsData {\n  timeSeriesData: {\n    period: string;\n    score: number | null;\n    average: number | null;\n  }[];\n  subjectPerformance: {\n    subject: string;\n    score: number;\n    trend: number;\n    quizCount: number;\n  }[];\n  strengthWeakness: {\n    strongestSubject: string;\n    strongestScore: number;\n    weakestSubject: string;\n    weakestScore: number;\n  };\n  overallStats: {\n    averageScore: number;\n    previousAverageScore: number;\n    improvement: number;\n    totalAssessments: number;\n  };\n  classComparison?: {\n    averageClassScore: number;\n    percentile: number;\n  } | null;\n}\n\nexport interface ScoreAnalyticsMetadata {\n  page: number;\n  limit: number;\n  totalCount: number;\n  totalPages: number;\n  timeFrame: string;\n  filters: {\n    subject?: string;\n    minScore?: string;\n    maxScore?: string;\n  };\n}\n\nexport interface ScoreAnalyticsFilters {\n  timeFrame?: string;\n  subject?: string;\n  minScore?: string;\n  maxScore?: string;\n  page?: string;\n  limit?: string;\n  sortBy?: string;\n  sortDirection?: string;\n}\n\n/**\n * Hook to fetch and manage student score analytics data\n * @param initialFilters - Initial filter values\n * @returns Score analytics data, state, and pagination controls\n */\nexport function useScoreAnalytics(initialFilters?: ScoreAnalyticsFilters) {\n  const [data, setData] = useState<ScoreAnalyticsData | null>(null);\n  const [metadata, setMetadata] = useState<ScoreAnalyticsMetadata | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  // Use URL query params with parsers for persistent filters\n  const [timeFrame, setTimeFrame] = useQueryState('timeFrame', \n    parseAsString.withDefault(initialFilters?.timeFrame || 'last30days')\n  );\n  const [subject, setSubject] = useQueryState('subject', \n    parseAsString.withDefault('')\n  );\n  const [minScore, setMinScore] = useQueryState('minScore', \n    parseAsString.withDefault('')\n  );\n  const [maxScore, setMaxScore] = useQueryState('maxScore', \n    parseAsString.withDefault('')\n  );\n  const [page, setPage] = useQueryState('page', \n    parseAsString.withDefault(initialFilters?.page || '1')\n  );\n  const [limit, setLimit] = useQueryState('limit', \n    parseAsString.withDefault(initialFilters?.limit || '10')\n  );\n  const [sortBy, setSortBy] = useQueryState('sortBy', \n    parseAsString.withDefault(initialFilters?.sortBy || 'completedAt')\n  );\n  const [sortDirection, setSortDirection] = useQueryState('sortDirection', \n    parseAsString.withDefault(initialFilters?.sortDirection || 'desc')\n  );\n\n  /**\n   * Builds the query string from current filters\n   */\n  const buildQueryString = useCallback(() => {\n    const params = new URLSearchParams();\n    if (timeFrame) params.append('timeFrame', timeFrame);\n    if (subject) params.append('subject', subject);\n    if (minScore) params.append('minScore', minScore);\n    if (maxScore) params.append('maxScore', maxScore);\n    if (page) params.append('page', page);\n    if (limit) params.append('limit', limit);\n    if (sortBy) params.append('sortBy', sortBy);\n    if (sortDirection) params.append('sortDirection', sortDirection);\n    return params.toString();\n  }, [timeFrame, subject, minScore, maxScore, page, limit, sortBy, sortDirection]);\n\n  /**\n   * Updates filters and fetches data\n   */\n  const updateFilters = useCallback((newFilters: Partial<ScoreAnalyticsFilters>) => {\n    // Update all the filters that were provided\n    const updatePromises = [];\n    if ('timeFrame' in newFilters) updatePromises.push(setTimeFrame(newFilters.timeFrame || ''));\n    if ('subject' in newFilters) updatePromises.push(setSubject(newFilters.subject || ''));\n    if ('minScore' in newFilters) updatePromises.push(setMinScore(newFilters.minScore || ''));\n    if ('maxScore' in newFilters) updatePromises.push(setMaxScore(newFilters.maxScore || ''));\n    if ('page' in newFilters) updatePromises.push(setPage(newFilters.page || '1'));\n    if ('limit' in newFilters) updatePromises.push(setLimit(newFilters.limit || '10'));\n    if ('sortBy' in newFilters) updatePromises.push(setSortBy(newFilters.sortBy || 'completedAt'));\n    if ('sortDirection' in newFilters) updatePromises.push(setSortDirection(newFilters.sortDirection || 'desc'));\n    \n    // Wait for all updates to complete before fetching data\n    Promise.all(updatePromises).then(() => {\n      fetchData();\n    });\n  }, [setTimeFrame, setSubject, setMinScore, setMaxScore, setPage, setLimit, setSortBy, setSortDirection]);\n\n  /**\n   * Fetches analytics data with current filters\n   */\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const queryString = buildQueryString();\n      const response = await fetch(`/api/users/me/score-analytics?${queryString}`, {\n        cache: 'no-store', // Don't cache this request client-side\n        headers: {\n          'Cache-Control': 'no-cache', // Don't cache this request server-side\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error fetching score analytics: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (!result.success) {\n        throw new Error(result.error || \"Failed to load score analytics\");\n      }\n\n      setData(result.data);\n      setMetadata(result.meta);\n    } catch (err) {\n      console.error(\"Error fetching score analytics:\", err);\n      setError(\n        err instanceof Error\n          ? err.message\n          : \"An unknown error occurred while fetching score analytics\"\n      );\n      toast({\n        variant: \"destructive\",\n        title: \"Failed to load analytics\",\n        description:\n          err instanceof Error\n            ? err.message\n            : \"Could not load your score analytics. Please try again later.\",\n      });\n      \n      // Return fallback data during development to avoid UI breakage\n      if (process.env.NODE_ENV !== \"production\") {\n        setData(getFallbackData());\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [buildQueryString, toast]);\n\n  /**\n   * Pagination controls\n   */\n  const gotoPage = useCallback((newPage: number) => {\n    updateFilters({ page: newPage.toString() });\n  }, [updateFilters]);\n\n  const nextPage = useCallback(() => {\n    if (metadata && metadata.page < metadata.totalPages) {\n      gotoPage(metadata.page + 1);\n    }\n  }, [metadata, gotoPage]);\n\n  const prevPage = useCallback(() => {\n    if (metadata && metadata.page > 1) {\n      gotoPage(metadata.page - 1);\n    }\n  }, [metadata, gotoPage]);\n\n  // Reset page when filters change\n  useEffect(() => {\n    if (page !== '1') {\n      setPage('1');\n    }\n  }, [timeFrame, subject, minScore, maxScore, sortBy, sortDirection, setPage]);\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    data,\n    metadata,\n    isLoading,\n    error,\n    // Filter controls\n    filters: {\n      timeFrame,\n      subject,\n      minScore,\n      maxScore,\n      page,\n      limit,\n      sortBy,\n      sortDirection,\n    },\n    updateFilters,\n    // Pagination controls\n    gotoPage,\n    nextPage,\n    prevPage,\n    // Manual refetch\n    refetch: fetchData,\n  };\n}\n\n/**\n * Generate fallback data for development environment when API fails\n * This helps developers see the UI even when the backend is not working\n */\nfunction getFallbackData(): ScoreAnalyticsData {\n  return {\n    timeSeriesData: Array.from({ length: 6 }, (_, i) => ({\n      period: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"][i],\n      score: Math.floor(Math.random() * 30) + 70,\n      average: Math.floor(Math.random() * 20) + 70,\n    })),\n    subjectPerformance: [\n      \"Mathematics\",\n      \"Physics\",\n      \"Chemistry\",\n      \"Biology\",\n      \"Literature\",\n      \"History\",\n    ].map((subject) => ({\n      subject,\n      score: Math.floor(Math.random() * 30) + 70,\n      trend: Math.floor(Math.random() * 20) - 10,\n      quizCount: Math.floor(Math.random() * 5) + 1,\n    })),\n    strengthWeakness: {\n      strongestSubject: \"Mathematics\",\n      strongestScore: 92,\n      weakestSubject: \"History\",\n      weakestScore: 75,\n    },\n    overallStats: {\n      averageScore: 85,\n      previousAverageScore: 82,\n      improvement: 3.7,\n      totalAssessments: 24,\n    },\n    classComparison: {\n      averageClassScore: 79,\n      percentile: 85,\n    }\n  };\n}\n\n// PHASE 1: SCORE ANALYTICS API UPGRADE - COMPLETED\n// Successfully migrated from basic API to advanced implementation with filtering, pagination, caching\n// Key improvements:\n// - Added filtering by timeFrame, subject, score range\n// - Added pagination support\n// - Added data caching for performance\n// - Added real class comparison data\n// - Implemented auto-generated analytics for faster access\n// - Enhanced time series data to support different time frames "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6717, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/pagination.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationLink,\n  PaginationItem,\n  PaginationPrevious,\n  PaginationNext,\n  PaginationEllipsis,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;AAEA,MAAM,aAAa,CAAC,EAAE,SAAS,EAAE,GAAG,OAAoC,iBACtE,8OAAC;QACC,MAAK;QACL,cAAW;QACX,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC;QACjD,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAG,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,IAAI;QAAa,GAAG,KAAK;;;;;;AAEvD,eAAe,WAAW,GAAG;AAO7B,MAAM,iBAAiB,CAAC,EACtB,SAAS,EACT,QAAQ,EACR,OAAO,MAAM,EACb,GAAG,OACiB,iBACpB,8OAAC;QACC,gBAAc,WAAW,SAAS;QAClC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE;YACb,SAAS,WAAW,YAAY;YAChC;QACF,IACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG;AAE7B,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OACyC,iBAC5C,8OAAC;QACC,cAAW;QACX,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;0BAET,8OAAC,oNAAA,CAAA,cAAW;gBAAC,WAAU;;;;;;0BACvB,8OAAC;0BAAK;;;;;;;;;;;;AAGV,mBAAmB,WAAW,GAAG;AAEjC,MAAM,iBAAiB,CAAC,EACtB,SAAS,EACT,GAAG,OACyC,iBAC5C,8OAAC;QACC,cAAW;QACX,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;0BAET,8OAAC;0BAAK;;;;;;0BACN,8OAAC,sNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG5B,eAAe,WAAW,GAAG;AAE7B,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OAC0B,iBAC7B,8OAAC;QACC,aAAW;QACX,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4CAA4C;QACzD,GAAG,KAAK;;0BAET,8OAAC,0NAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAG9B,mBAAmB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6870, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/StudentOverviewPageClient.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport { StatCard } from \"@/components/dashboard/student/cards/StatCard\";\nimport { \n  BookOpen, \n  BarChart, \n  ClipboardCheck,\n  AlertCircle, \n  Calendar,\n  CheckCircle, \n  Clock,\n  FileText,\n  PieChart,\n  TrendingUp,\n  Target,\n  Award,\n  ClipboardX,\n  Search,\n  ChevronRight,\n  Filter,\n  ArrowUpDown,\n  RefreshCw\n} from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { format, parseISO } from \"date-fns\";\nimport Link from \"next/link\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { QuizListItem } from \"@/components/dashboard/student/quiz-list-item\";\nimport { ResultListItem } from \"@/components/dashboard/student/result-list-item\";\nimport { StatDetailDialog } from \"@/components/dashboard/student/analytics/StatDetailDialog\";\nimport { ScoreAnalytics } from \"@/components/dashboard/student/analytics/ScoreAnalytics\";\nimport { ClassParticipationAnalytics } from \"@/components/dashboard/student/analytics/ClassParticipationAnalytics\";\nimport { QuizCompletionAnalytics } from \"@/components/dashboard/student/analytics/QuizCompletionAnalytics\";\nimport { ScoreAnalyticsDebug } from \"@/components/debug/ScoreAnalyticsDebug\";\nimport { useScoreAnalytics } from \"@/hooks/use-score-analytics\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink } from \"@/components/ui/pagination\";\nimport { subDays, formatDistanceToNow } from \"date-fns\";\nimport { useAnalytics } from \"@/components/providers/analytics-provider\";\n\ninterface StudentStats {\n  classesJoined: number;\n  totalQuizzesCompleted: number;\n  averageScore: number;\n  assignedQuizCompletionRate: number;\n  assignedAverageScorePreviousPeriod?: number;\n  assignedPublishedQuizzesCurrentMonthCount?: number;\n  assignedCompletedQuizzesCurrentMonthCount?: number;\n}\n\ninterface UpcomingQuiz {\n  id: string;\n  title: string;\n  description: string | null;\n  startDate: string;\n  endDate: string | null;\n  timeLimit: number | null;\n  class: {\n    id: string;\n    name: string;\n  };\n  _count: {\n    questions: number;\n  };\n}\n\ninterface QuizResultItem {\n  attemptId: string;\n  quizId: string;\n  quizTitle: string;\n  quizDescription: string | null;\n  className: string | null;\n  category: string | null;\n  score: number;\n  maxScore?: number;\n  totalQuestions: number;\n  correctQuestions: number;\n  completedAt: string;\n  timeTakenMinutes: number | null;\n  feedbackAvailable: boolean;\n}\n\n/**\n * Client component for student dashboard overview\n * Fetches and displays student statistics and upcoming quizzes\n */\nexport function StudentOverviewPageClient() {\n  const [stats, setStats] = useState<StudentStats | null>(null);\n  const [upcomingQuizzes, setUpcomingQuizzes] = useState<UpcomingQuiz[]>([]);\n  const [quizResults, setQuizResults] = useState<QuizResultItem[]>([]);\n  const [isLoadingStats, setIsLoadingStats] = useState(true);\n  const [isLoadingQuizzes, setIsLoadingQuizzes] = useState(true);\n  const [isLoadingResults, setIsLoadingResults] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n  \n  // Use refs to prevent duplicate fetches\n  const fetchingStats = useRef(false);\n  const fetchingQuizzes = useRef(false);\n  const fetchingResults = useRef(false);\n  const initialFetchDone = useRef(false);\n\n  // Analytics dialogs state\n  const [scoreAnalyticsOpen, setScoreAnalyticsOpen] = useState(false);\n  const [classAnalyticsOpen, setClassAnalyticsOpen] = useState(false);\n  const [completionAnalyticsOpen, setCompletionAnalyticsOpen] = useState(false);\n  const scoreAnalytics = useScoreAnalytics();\n\n  // Thêm state mới cho phân trang và filter của tab results\n  const [resultsPage, setResultsPage] = useState(1);\n  const [resultsPageSize, setResultsPageSize] = useState(5);\n  const [resultsTotalPages, setResultsTotalPages] = useState(1);\n  const [resultsTotalItems, setResultsTotalItems] = useState(0);\n  const [resultsSearchTerm, setResultsSearchTerm] = useState(\"\");\n  const [resultsTimeFrame, setResultsTimeFrame] = useState(\"last30days\");\n  const [filteredResults, setFilteredResults] = useState<QuizResultItem[]>([]);\n  const [resultsSortConfig, setResultsSortConfig] = useState<{\n    key: 'date' | 'score' | 'title';\n    direction: 'asc' | 'desc';\n  }>({\n    key: 'date',\n    direction: 'desc'\n  });\n\n  const [activeTab, setActiveTab] = useState<string>(\"all\");\n  const [quizzesData, setQuizzesData] = useState<any[]>([]);\n  const [isLoadingQuizzesData, setIsLoadingQuizzesData] = useState(true);\n  const [quizzesError, setQuizzesError] = useState<string | null>(null);\n  const [quizzesFilters, setQuizzesFilters] = useState({\n    status: \"upcoming\",\n    page: 1,\n    pageSize: 5\n  });\n\n  // Get analytics methods directly from the provider\n  const { \n    fetchQuizCompletion,\n    isLoadingQuizCompletion,\n    quizCompletionData,\n    quizCompletionError\n  } = useAnalytics();\n\n  const fetchStudentStats = useCallback(async () => {\n    // Prevent duplicate fetches\n    if (fetchingStats.current) return;\n    \n    fetchingStats.current = true;\n    setIsLoadingStats(true);\n    \n    try {\n      const response = await fetch(\"/api/users/me/dashboard-summary\");\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error(data.error || \"Failed to load statistics\");\n      }\n      \n      setStats(data.data as StudentStats);\n    } catch (err) {\n      console.error(\"Error fetching student stats:\", err);\n      setError((prevError) => prevError || \"Could not load some dashboard data. Please try again later.\");\n      toast({\n        variant: \"destructive\",\n        title: \"Failed to load statistics\",\n        description: err instanceof Error ? err.message : \"An unknown error occurred\",\n      });\n    } finally {\n      setIsLoadingStats(false);\n      fetchingStats.current = false;\n    }\n  }, [toast]);\n\n  const fetchUpcomingQuizzes = useCallback(async () => {\n    // Prevent duplicate fetches\n    if (fetchingQuizzes.current) return;\n    \n    fetchingQuizzes.current = true;\n    setIsLoadingQuizzes(true);\n    \n    try {\n      const response = await fetch(\"/api/users/me/upcoming-assessments\");\n      if (!response.ok) {\n        throw new Error(`Error fetching quizzes: ${response.status}`);\n      }\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error(data.message || \"Failed to load upcoming quizzes\");\n      }\n      \n      // Assign the quizzes from actual data\n      setUpcomingQuizzes(data.data || []);\n      setError(\"\");\n    } catch (error) {\n      console.error(\"Failed to fetch upcoming quizzes:\", error);\n      setError(\"Could not load your upcoming quizzes. Please try again later.\");\n    } finally {\n      setIsLoadingQuizzes(false);\n      fetchingQuizzes.current = false;\n    }\n  }, []);\n\n  const fetchQuizResults = useCallback(async () => {\n    // Prevent duplicate fetches\n    if (fetchingResults.current) return;\n    \n    fetchingResults.current = true;\n    setIsLoadingResults(true);\n    \n    try {\n      const response = await fetch(`/api/users/me/quiz-results?timeFrame=${resultsTimeFrame}&page=${resultsPage}&pageSize=${resultsPageSize}`);\n      if (!response.ok) {\n        throw new Error(`Error fetching results: ${response.status}`);\n      }\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error(data.message || \"Failed to load quiz results\");\n      }\n      \n      // Properly handle the API response structure\n      setQuizResults(data.data?.results || []);\n      setResultsTotalPages(data.data?.pagination?.totalPages || 1);\n      setResultsTotalItems(data.data?.pagination?.totalItems || 0);\n      \n      // Filtered results được tạo từ quizResults\n      setFilteredResults(data.data?.results || []);\n      \n      setError(\"\");\n    } catch (error) {\n      console.error(\"Failed to fetch quiz results:\", error);\n      setError(\"Could not load your quiz results. Please try again later.\");\n    } finally {\n      setIsLoadingResults(false);\n      fetchingResults.current = false;\n    }\n  }, [resultsTimeFrame, resultsPage, resultsPageSize]);\n\n  // Function to fetch quizzes data using the same API as the dedicated quizzes page\n  const fetchQuizzesData = useCallback(async () => {\n    setIsLoadingQuizzesData(true);\n    \n    try {\n      const params = new URLSearchParams();\n      params.set('status', quizzesFilters.status);\n      params.set('page', quizzesFilters.page.toString());\n      params.set('pageSize', quizzesFilters.pageSize.toString());\n      \n      const response = await fetch(`/api/users/me/quizzes?${params.toString()}`);\n      \n      if (!response.ok) {\n        throw new Error(`Error fetching quizzes: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setQuizzesData(data.data.items || []);\n      } else {\n        throw new Error(data.message || \"Failed to load quizzes\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching quizzes data:\", error);\n      setQuizzesError((error as Error).message);\n      toast({\n        title: \"Error\",\n        description: (error as Error).message,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoadingQuizzesData(false);\n    }\n  }, [quizzesFilters, toast]);\n\n  // Combined fetch function to load all dashboard data\n  const fetchDashboardData = useCallback(() => {\n    if (initialFetchDone.current) return;\n    \n    setError(null);\n    Promise.all([\n      fetchStudentStats(),\n      fetchUpcomingQuizzes(),\n      fetchQuizResults(),\n      fetchQuizzesData()\n    ]).then(() => {\n      initialFetchDone.current = true;\n    }).catch((err) => {\n      console.error(\"Error loading dashboard data:\", err);\n      setError(\"Failed to load dashboard data\");\n    });\n  }, [fetchStudentStats, fetchUpcomingQuizzes, fetchQuizResults, fetchQuizzesData]);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, [fetchDashboardData]);\n\n  const handleRefresh = () => {\n    setError(null);\n    initialFetchDone.current = false;\n    fetchDashboardData();\n  };\n\n  const formatDate = useCallback((dateString: string) => {\n    if (!dateString) return \"N/A\";\n    try {\n    const date = new Date(dateString);\n    return format(date, \"MMM d, yyyy h:mm a\");\n    } catch (error) {\n      console.error(\"Error formatting date:\", dateString, error);\n      return \"Invalid Date\";\n    }\n  }, []);\n\n  const monthlyAssignedQuizCompletionRate =\n    stats && stats.assignedPublishedQuizzesCurrentMonthCount && stats.assignedPublishedQuizzesCurrentMonthCount > 0 && typeof stats.assignedCompletedQuizzesCurrentMonthCount === 'number'\n      ? parseFloat(((stats.assignedCompletedQuizzesCurrentMonthCount / stats.assignedPublishedQuizzesCurrentMonthCount) * 100).toFixed(1))\n    : 0;\n\n  const isLoading = isLoadingStats;\n\n  // Effect để lọc kết quả khi search term thay đổi\n  useEffect(() => {\n    if (quizResults.length === 0) return;\n    \n    const filtered = quizResults.filter(result => {\n      if (!resultsSearchTerm) return true;\n      return (\n        result.quizTitle.toLowerCase().includes(resultsSearchTerm.toLowerCase()) ||\n        (result.className?.toLowerCase().includes(resultsSearchTerm.toLowerCase())) ||\n        (result.category?.toLowerCase().includes(resultsSearchTerm.toLowerCase()))\n      );\n    });\n    \n    setFilteredResults(filtered);\n  }, [quizResults, resultsSearchTerm]);\n  \n  // Xử lý sắp xếp kết quả\n  const handleResultsSort = (key: 'date' | 'score' | 'title') => {\n    setResultsSortConfig(prevConfig => ({\n      key,\n      direction: prevConfig.key === key && prevConfig.direction === 'desc' ? 'asc' : 'desc'\n    }));\n    \n    // Sắp xếp kết quả\n    const sortedResults = [...filteredResults].sort((a, b) => {\n      let comparison = 0;\n      \n      if (key === 'date') {\n        comparison = new Date(a.completedAt).getTime() - new Date(b.completedAt).getTime();\n      } else if (key === 'score') {\n        comparison = a.score - b.score;\n      } else if (key === 'title') {\n        comparison = a.quizTitle.localeCompare(b.quizTitle);\n      }\n      \n      return resultsSortConfig.direction === 'desc' ? -comparison : comparison;\n    });\n    \n    setFilteredResults(sortedResults);\n  };\n  \n  // Xử lý thay đổi timeFrame cho results\n  const handleResultsTimeFrameChange = (value: string) => {\n    setResultsTimeFrame(value);\n    setResultsPage(1); // Reset về trang 1\n    fetchingResults.current = false; // Reset trạng thái fetching\n    fetchQuizResults(); // Fetch lại kết quả với timeFrame mới\n  };\n\n  // Khai báo hàm để tạo các mục phân trang cho tab Results\n  const generateResultsPagination = () => {\n    const items = [];\n    const maxVisiblePages = 5;\n    \n    // Nút Previous\n    items.push(\n      <PaginationItem key=\"prev\">\n        <PaginationLink\n          onClick={() => setResultsPage(p => Math.max(1, p - 1))}\n          className={resultsPage === 1 || isLoadingResults ? \"pointer-events-none opacity-50\" : \"\"}\n          aria-disabled={resultsPage === 1 || isLoadingResults}\n        >\n          <span className=\"sr-only\">Previous</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"h-4 w-4\"\n          >\n            <path d=\"M15 18l-6-6 6-6\" />\n          </svg>\n        </PaginationLink>\n      </PaginationItem>\n    );\n    \n    // Always show the first page\n    items.push(\n      <PaginationItem key=\"page-1\">\n        <PaginationLink \n          isActive={resultsPage === 1} \n          onClick={() => setResultsPage(1)}\n        >\n          1\n        </PaginationLink>\n      </PaginationItem>\n    );\n    \n    if (resultsTotalPages <= maxVisiblePages) {\n      // If few pages, show all\n      for (let i = 2; i <= resultsTotalPages; i++) {\n        items.push(\n          <PaginationItem key={`page-${i}`}>\n            <PaginationLink \n              isActive={resultsPage === i}\n              onClick={() => setResultsPage(i)}\n            >\n              {i}\n            </PaginationLink>\n          </PaginationItem>\n        );\n      }\n    } else {\n      // If many pages, show a subset\n      // Display ellipsis if current page is far from the start\n      if (resultsPage > 3) {\n        items.push(\n          <PaginationItem key=\"ellipsis-1\">\n            <PaginationEllipsis />\n          </PaginationItem>\n        );\n      }\n      \n      // Display nearby pages\n      const startPage = Math.max(2, resultsPage - 1);\n      const endPage = Math.min(resultsTotalPages - 1, resultsPage + 1);\n      \n      for (let i = startPage; i <= endPage; i++) {\n        items.push(\n          <PaginationItem key={`page-${i}`}>\n            <PaginationLink \n              isActive={resultsPage === i}\n              onClick={() => setResultsPage(i)}\n            >\n              {i}\n            </PaginationLink>\n          </PaginationItem>\n        );\n      }\n      \n      // Display ellipsis if current page is far from the end\n      if (resultsPage < resultsTotalPages - 2) {\n        items.push(\n          <PaginationItem key=\"ellipsis-2\">\n            <PaginationEllipsis />\n          </PaginationItem>\n        );\n      }\n      \n      // Always show the last page\n      if (resultsTotalPages > 1) {\n        items.push(\n          <PaginationItem key={`page-${resultsTotalPages}`}>\n            <PaginationLink \n              isActive={resultsPage === resultsTotalPages}\n              onClick={() => setResultsPage(resultsTotalPages)}\n            >\n              {resultsTotalPages}\n            </PaginationLink>\n          </PaginationItem>\n        );\n      }\n    }\n    \n    // Nút Next\n    items.push(\n      <PaginationItem key=\"next\">\n        <PaginationLink\n          onClick={() => setResultsPage(p => Math.min(resultsTotalPages, p + 1))}\n          className={resultsPage === resultsTotalPages || isLoadingResults ? \"pointer-events-none opacity-50\" : \"\"}\n          aria-disabled={resultsPage === resultsTotalPages || isLoadingResults}\n        >\n          <span className=\"sr-only\">Next</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\" \n            width=\"24\" \n            height=\"24\" \n            viewBox=\"0 0 24 24\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            strokeWidth=\"2\" \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\"\n            className=\"h-4 w-4\"\n          >\n            <path d=\"M9 18l6-6-6-6\" />\n          </svg>\n        </PaginationLink>\n      </PaginationItem>\n    );\n    \n    return items;\n  };\n\n  // Thêm formatDateToPrimary để sử dụng trong QuizListItem\n  const formatDateToPrimary = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      return format(date, \"MMM d, yyyy\");\n    } catch (error) {\n      console.error(\"Error formatting date:\", dateString, error);\n      return \"Invalid date\";\n    }\n  };\n\n  // Handle opening completion analytics dialog\n  const handleOpenCompletionAnalytics = useCallback(async () => {\n    try {\n      // Attempt to fetch quiz completion data before opening the dialog\n      await fetchQuizCompletion();\n      setCompletionAnalyticsOpen(true);\n    } catch (err) {\n      console.error(\"Error fetching quiz completion data:\", err);\n      toast({\n        title: \"Error\",\n        description: \"Failed to fetch quiz completion analytics data. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  }, [fetchQuizCompletion, toast]);\n\n  return (\n    <div className=\"grid gap-6\">\n      {error && !isLoadingStats && !isLoadingQuizzes && !isLoadingResults && !isLoadingQuizzesData && (\n        <Alert variant=\"destructive\" className=\"mb-4\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>Error</AlertTitle>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n      \n      {/* Analytics Dialogs */}\n      <StatDetailDialog\n        open={scoreAnalyticsOpen}\n        setOpen={setScoreAnalyticsOpen}\n        title=\"Score Analytics\"\n        description=\"Detailed analysis of your academic performance\"\n        maxWidth=\"3xl\"\n      >\n        <ScoreAnalytics />\n      </StatDetailDialog>\n\n      <StatDetailDialog\n        open={classAnalyticsOpen}\n        setOpen={setClassAnalyticsOpen}\n        title=\"Class Participation Analytics\"\n        description=\"Detailed analysis of your class participation and activities\"\n        maxWidth=\"3xl\"\n      >\n        <ClassParticipationAnalytics\n          classesJoined={stats?.classesJoined ?? 0}\n          isLoading={isLoading}\n        />\n      </StatDetailDialog>\n\n      <StatDetailDialog\n        open={completionAnalyticsOpen}\n        setOpen={setCompletionAnalyticsOpen}\n        title=\"Quiz Completion Analytics\"\n        description=\"Detailed analysis of your quiz completion patterns and rates\"\n        maxWidth=\"3xl\"\n      >\n        <div className=\"relative\">\n          {isLoadingQuizCompletion && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-background/80 z-10\">\n              <div className=\"flex flex-col items-center gap-2\">\n                <div className=\"h-8 w-8 animate-spin rounded-full border-4 border-primary border-t-transparent\"></div>\n                <p className=\"text-sm text-muted-foreground\">Loading quiz completion data...</p>\n              </div>\n            </div>\n          )}\n          \n          {quizCompletionError && !isLoadingQuizCompletion && (\n            <Alert variant=\"destructive\" className=\"mb-4\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertTitle>Error</AlertTitle>\n              <AlertDescription>\n                {quizCompletionError}\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\" \n                  onClick={() => fetchQuizCompletion()}\n                  className=\"ml-2\"\n                >\n                  Retry\n                </Button>\n              </AlertDescription>\n            </Alert>\n          )}\n          \n          <QuizCompletionAnalytics />\n        </div>\n      </StatDetailDialog>\n      \n      {/* Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4\">\n        <StatCard\n          title=\"Classes Joined\"\n          value={stats?.classesJoined ?? 0}\n          icon={<BookOpen className=\"h-4 w-4\" />}\n          isLoading={isLoadingStats}\n          description=\"Total classes you're enrolled in\"\n          iconColor=\"text-blue-500\"\n          interactive={true}\n          onClick={() => setClassAnalyticsOpen(true)}\n        />\n        \n        <StatCard\n          title=\"Total Quizzes Completed\"\n          value={stats?.totalQuizzesCompleted ?? 0}\n          unit=\" quizzes\"\n          icon={<ClipboardCheck className=\"h-4 w-4\" />}\n          isLoading={isLoadingStats}\n          description=\"All quizzes you've finished (public & assigned)\"\n          iconColor=\"text-emerald-500\"\n          interactive={true}\n          onClick={handleOpenCompletionAnalytics}\n        />\n        \n        <StatCard\n          title=\"Average Score (Assigned)\"\n          value={stats?.averageScore ?? 0}\n          unit=\"%\"\n          previousValue={stats?.assignedAverageScorePreviousPeriod}\n          icon={<TrendingUp className=\"h-4 w-4\" />}\n          isLoading={isLoadingStats}\n          description=\"Your average score on assigned quizzes\"\n          iconColor=\"text-purple-500\"\n          interactive={true}\n          onClick={() => setScoreAnalyticsOpen(true)}\n        />\n\n        <StatCard\n          title=\"Assigned Quiz Completion Rate\"\n          value={stats?.assignedQuizCompletionRate ?? 0}\n          unit=\"%\"\n          icon={<Target className=\"h-4 w-4\" />}\n          isLoading={isLoadingStats}\n          description=\"Overall completion of your assigned quizzes\"\n          iconColor=\"text-orange-500\"\n          interactive={true}\n          onClick={handleOpenCompletionAnalytics}\n        />\n      </div>\n\n      {/* Debug Component - Remove in production */}\n      {process.env.NODE_ENV === 'development' && (\n        <ScoreAnalyticsDebug />\n      )}\n\n      {/* Overview Tabs */}\n      <Tabs defaultValue=\"overview\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"quizzes\">Quizzes</TabsTrigger>\n          <TabsTrigger value=\"results\">Results</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2\">\n            <Card className=\"lg:col-span-1\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n                <div>\n                  <CardTitle>Upcoming Assessments</CardTitle>\n                  <CardDescription>\n                    Quizzes you need to complete soon\n                  </CardDescription>\n                </div>\n                <Button variant=\"outline\" size=\"sm\" asChild className=\"h-8 gap-1\">\n                  <Link href=\"/dashboard/student/quizzes\">\n                    View all\n                    <ChevronRight className=\"h-3.5 w-3.5\" />\n                  </Link>\n                </Button>\n              </CardHeader>\n              <CardContent className=\"pl-2\">\n                {isLoadingQuizzes && (\n                  <>\n                    <Skeleton className=\"h-10 w-full mb-2\" />\n                    <Skeleton className=\"h-10 w-full mb-2\" />\n                    <Skeleton className=\"h-10 w-full\" />\n                  </>\n                )}\n                {!isLoadingQuizzes && upcomingQuizzes.length === 0 && (\n                  <div className=\"text-center text-muted-foreground py-6\">\n                    <CheckCircle className=\"mx-auto h-12 w-12 opacity-50\" />\n                    <p className=\"mt-2\">No upcoming assessments available</p>\n                  </div>\n                )}\n                {!isLoadingQuizzes && upcomingQuizzes.slice(0, 3).map((quiz) => (\n                  <QuizListItem key={quiz.id} quiz={quiz} />\n                ))}\n              </CardContent>\n            </Card>\n            \n            <Card className=\"lg:col-span-1\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n                <div>\n                  <CardTitle>Monthly Progress</CardTitle>\n                  <CardDescription>\n                    Your completion rate for assigned quizzes\n                  </CardDescription>\n                </div>\n                <Button variant=\"outline\" size=\"sm\" className=\"h-8 gap-1\" onClick={handleOpenCompletionAnalytics}>\n                  Analytics\n                  <BarChart className=\"h-3.5 w-3.5\" />\n                </Button>\n              </CardHeader>\n              <CardContent>\n                {isLoadingStats && (\n                  <>\n                    <Skeleton className=\"h-8 w-1/4 mb-2\" />\n                    <Skeleton className=\"h-4 w-1/2 mb-4\" />\n                    <Skeleton className=\"h-20 w-full\" />\n                  </>\n                )}\n                {!isLoadingStats && stats && (\n                  <div className=\"flex flex-col items-center justify-center h-full\">\n                    <div className=\"text-4xl font-bold text-primary\">\n                      {monthlyAssignedQuizCompletionRate}%\n                    </div>\n                    <div className=\"w-full mt-2\">\n                      <Progress \n                        value={monthlyAssignedQuizCompletionRate} \n                        max={100} \n                        className=\"h-2\"\n                      />\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      {stats.assignedCompletedQuizzesCurrentMonthCount} of {stats.assignedPublishedQuizzesCurrentMonthCount} assigned quizzes completed this month\n                    </p>\n                  </div>\n                )}\n                {!isLoadingStats && !stats && !error && (\n                  <div className=\"text-center text-muted-foreground py-6\">\n                    <p>No data available</p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n        \n        <TabsContent value=\"quizzes\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n              <div>\n                <CardTitle>Available Assessments</CardTitle>\n                <CardDescription>\n                  Quizzes assigned to you and ready to take\n                </CardDescription>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Select \n                  value={quizzesFilters.status}\n                  onValueChange={(value) => setQuizzesFilters(prev => ({...prev, status: value}))}\n                >\n                  <SelectTrigger className=\"w-[140px] h-8\">\n                    <SelectValue placeholder=\"Select status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All</SelectItem>\n                    <SelectItem value=\"upcoming\">Upcoming</SelectItem>\n                    <SelectItem value=\"ongoing\">Available now</SelectItem>\n                    <SelectItem value=\"completed\">Completed</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"h-8\"\n                  onClick={() => fetchQuizzesData()}\n                >\n                  <RefreshCw className=\"h-3.5 w-3.5\" />\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {isLoadingQuizzesData ? (\n                <div className=\"space-y-3\">\n                  <Skeleton className=\"h-[125px] w-full rounded-md\" />\n                  <Skeleton className=\"h-[125px] w-full rounded-md\" />\n                </div>\n              ) : quizzesError ? (\n                <Alert variant=\"destructive\">\n                  <AlertTitle>Error</AlertTitle>\n                  <AlertDescription>{quizzesError}</AlertDescription>\n                </Alert>\n              ) : quizzesData.length > 0 ? (\n                <div className=\"space-y-3\">\n                  {quizzesData.slice(0, 3).map((quiz) => (\n                    <div key={quiz.id} className=\"border rounded-md p-4\">\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h4 className=\"font-medium\">{quiz.title}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {quiz.class?.name || quiz.category || \"No class\"}\n                          </p>\n                        </div>\n                        <Badge variant=\"outline\">\n                          {quiz._count?.questions || 0} questions\n                        </Badge>\n                      </div>\n                      <p className=\"text-sm mt-2 line-clamp-2\">\n                        {quiz.description || \"No description available.\"}\n                      </p>\n                      <div className=\"mt-2 flex justify-between items-center\">\n                        <div className=\"text-sm flex gap-2 items-center\">\n                          <Calendar className=\"h-3.5 w-3.5 text-muted-foreground\" />\n                          <span>\n                            {new Date(quiz.startDate).toLocaleDateString()}\n                            {quiz.endDate && ` - ${new Date(quiz.endDate).toLocaleDateString()}`}\n                          </span>\n                        </div>\n                        <Button variant=\"default\" size=\"sm\" asChild>\n                          <Link href={`/quiz/${quiz.id}`}>\n                            {quiz.status === \"completed\" ? \"View Results\" : \"Take Quiz\"}\n                          </Link>\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center h-48 border rounded-md border-dashed\">\n                  <ClipboardX className=\"h-8 w-8 text-muted-foreground mb-2\" />\n                  <h3 className=\"text-lg font-medium\">No quizzes found</h3>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    You don't have any {quizzesFilters.status === \"all\" ? \"\" : quizzesFilters.status} quizzes at this time\n                  </p>\n                </div>\n              )}\n            </CardContent>\n            <CardFooter className=\"flex justify-between border-t pt-4\">\n              <div className=\"text-sm text-muted-foreground\">\n                {!isLoadingQuizzesData && quizzesData.length > 0 && (\n                  <span>Showing {Math.min(3, quizzesData.length)} of {quizzesData.length} quizzes</span>\n                )}\n              </div>\n              <Button variant=\"outline\" size=\"sm\" asChild>\n                <Link href=\"/dashboard/student/quizzes\">View all quizzes</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"results\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex flex-col sm:flex-row justify-between sm:items-center gap-4\">\n                <div>\n                  <CardTitle>Assessment Results</CardTitle>\n                  <CardDescription>\n                    Results from your completed assessments\n                  </CardDescription>\n                </div>\n                \n                <Select \n                  value={resultsTimeFrame} \n                  onValueChange={handleResultsTimeFrameChange}\n                >\n                  <SelectTrigger className=\"w-[180px] h-9\">\n                    <Calendar className=\"h-4 w-4 mr-2 text-muted-foreground\" />\n                    <SelectValue placeholder=\"Select time period\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"last7days\">Last 7 days</SelectItem>\n                    <SelectItem value=\"last30days\">Last 30 days</SelectItem>\n                    <SelectItem value=\"last90days\">Last 90 days</SelectItem>\n                    <SelectItem value=\"last6months\">Last 6 months</SelectItem>\n                    <SelectItem value=\"lastYear\">Last year</SelectItem>\n                    <SelectItem value=\"allTime\">All time</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardHeader>\n            \n            <CardContent>\n              <div className=\"flex items-center gap-4 mb-4\">\n                <div className=\"relative flex-1\">\n                  <Search \n                    className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" \n                    aria-hidden=\"true\"\n                  />\n                  <Input \n                    type=\"search\" \n                    placeholder=\"Search results...\" \n                    className=\"pl-8\"\n                    value={resultsSearchTerm}\n                    onChange={(e) => setResultsSearchTerm(e.target.value)}\n                  />\n                </div>\n              </div>\n              \n              {isLoadingResults && (\n                <div className=\"space-y-3\">\n                  <Skeleton className=\"h-[170px] w-full rounded-md\" />\n                  <Skeleton className=\"h-[170px] w-full rounded-md\" />\n                </div>\n              )}\n              \n              {!isLoadingResults && filteredResults.length === 0 && !error && (\n                <div className=\"flex flex-col items-center justify-center h-48 border rounded-md border-dashed\">\n                  <ClipboardX className=\"h-8 w-8 text-muted-foreground mb-2\" />\n                  <h3 className=\"text-lg font-medium\">No results yet</h3>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    You haven't completed any assessments{resultsSearchTerm ? \" matching your search\" : \"\" }\n                  </p>\n                </div>\n              )}\n              \n              {!isLoadingResults && error && (\n                <Alert variant=\"destructive\">\n                  <AlertTitle>Error</AlertTitle>\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n              \n              {!isLoadingResults && filteredResults.length > 0 && !error && (\n                <>\n                  <div className=\"relative w-full overflow-auto\">\n                    <table \n                      className=\"w-full caption-bottom text-sm\"\n                      aria-label=\"Assessment results table\"\n                    >\n                      <thead>\n                        <tr className=\"border-b\">\n                          <th \n                            scope=\"col\"\n                            className=\"h-12 px-4 text-left align-middle font-medium\"\n                          >\n                            <button \n                              onClick={() => handleResultsSort('title')}\n                              className=\"flex items-center gap-1 hover:text-primary\"\n                            >\n                              Assessment\n                              {resultsSortConfig.key === 'title' && (\n                                <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                              )}\n                            </button>\n                          </th>\n                          <th \n                            scope=\"col\"\n                            className=\"h-12 px-4 text-left align-middle font-medium\"\n                          >\n                            Subject\n                          </th>\n                          <th \n                            scope=\"col\"\n                            className=\"h-12 px-4 text-left align-middle font-medium\"\n                          >\n                            <button \n                              onClick={() => handleResultsSort('date')}\n                              className=\"flex items-center gap-1 hover:text-primary\"\n                            >\n                              Date\n                              {resultsSortConfig.key === 'date' && (\n                                <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                              )}\n                            </button>\n                          </th>\n                          <th \n                            scope=\"col\"\n                            className=\"h-12 px-4 text-right align-middle font-medium\"\n                          >\n                            <button \n                              onClick={() => handleResultsSort('score')}\n                              className=\"flex items-center gap-1 hover:text-primary ml-auto\"\n                            >\n                              Score\n                              {resultsSortConfig.key === 'score' && (\n                                <ArrowUpDown className=\"h-3.5 w-3.5\" />\n                              )}\n                            </button>\n                          </th>\n                          <th \n                            scope=\"col\"\n                            className=\"h-12 px-4 text-center align-middle font-medium\"\n                          >\n                            Details\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {filteredResults.map((result) => (\n                          <tr \n                            key={result.attemptId} \n                            className=\"border-b transition-colors hover:bg-muted/50\"\n                          >\n                            <td className=\"p-4 align-middle\">\n                              <div className=\"font-medium\">{result.quizTitle}</div>\n                              <div className=\"text-xs text-muted-foreground\">\n                                {result.correctQuestions}/{result.totalQuestions} questions correct\n                              </div>\n                            </td>\n                            <td className=\"p-4 align-middle\">\n                              <Badge variant=\"outline\">\n                                {result.category || result.className || \"No subject\"}\n                              </Badge>\n                            </td>\n                            <td className=\"p-4 align-middle text-muted-foreground\">\n                              {format(new Date(result.completedAt), \"dd/MM/yyyy\")}\n                            </td>\n                            <td className=\"p-4 align-middle text-right\">\n                              <Badge\n                                variant={result.score >= 70 ? \"default\" : result.score >= 50 ? \"secondary\" : \"destructive\"}\n                              >\n                                {result.score.toFixed(1)}%\n                              </Badge>\n                            </td>\n                            <td className=\"p-4 align-middle text-center\">\n                              <Button \n                                variant=\"ghost\" \n                                size=\"icon\"\n                                asChild\n                              >\n                                <Link \n                                  href={`/dashboard/student/quizzes/results/${result.attemptId}`}\n                                  aria-label={`View details for ${result.quizTitle}`}\n                                >\n                                  <ChevronRight className=\"h-4 w-4\" />\n                                </Link>\n                              </Button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                  \n                  {resultsTotalPages > 1 && (\n                    <Pagination className=\"mt-4\">\n                      <PaginationContent>\n                        {generateResultsPagination()}\n                      </PaginationContent>\n                    </Pagination>\n                  )}\n                </>\n              )}\n            </CardContent>\n            \n            <CardFooter className=\"flex justify-between border-t pt-6\">\n              <div className=\"text-sm text-muted-foreground\">\n                {!isLoadingResults && filteredResults.length > 0 && (\n                  <span>Showing {filteredResults.length} of {resultsTotalItems} results</span>\n                )}\n              </div>\n              <Button variant=\"outline\" asChild>\n                <Link href=\"/dashboard/student/quizzes/results\">\n                  View full results page\n                </Link>\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
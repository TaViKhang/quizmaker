{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/prisma.ts"],"sourcesContent":["import { db } from './db';\n\n// Re-export với tên khác để không phá vỡ code đang sử dụng\nexport const prisma = db;"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,SAAS,yGAAA,CAAA,KAAE","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    variant?: \"default\" | \"outline\" | \"accent\" | \"highlight\" | \"interactive\"\n  }\n>(({ className, variant = \"default\", ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm transition-all duration-200\",\n      variant === \"default\" && \"border-border\", \n      variant === \"outline\" && \"border-2 border-border shadow-none\",\n      variant === \"accent\" && \"border-border border-l-4 border-l-accent\",\n      variant === \"highlight\" && \"border-border bg-accent/5\",\n      variant === \"interactive\" && \"border-border hover:border-accent hover:shadow-md cursor-pointer\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-h3 font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\n// New components for more expressive cards\nconst CardBadge = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    variant?: \"default\" | \"success\" | \"warning\" | \"destructive\" | \"info\"\n  }\n>(({ className, variant = \"default\", ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium\",\n      variant === \"default\" && \"bg-secondary text-secondary-foreground\",\n      variant === \"success\" && \"bg-success/20 text-success\",\n      variant === \"warning\" && \"bg-warning/20 text-warning\",\n      variant === \"destructive\" && \"bg-destructive/20 text-destructive\",\n      variant === \"info\" && \"bg-info/20 text-info\",\n      className\n    )}\n    {...props}\n  />\n))\nCardBadge.displayName = \"CardBadge\"\n\nconst CardMedia = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"relative overflow-hidden rounded-t-lg\", className)}\n    {...props}\n  />\n))\nCardMedia.displayName = \"CardMedia\"\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardBadge,\n  CardMedia,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAK1B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC/C,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wFACA,YAAY,aAAa,iBACzB,YAAY,aAAa,sCACzB,YAAY,YAAY,4CACxB,YAAY,eAAe,6BAC3B,YAAY,iBAAiB,oEAC7B;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,2CAA2C;AAC3C,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAK/B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC/C,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2EACA,YAAY,aAAa,0CACzB,YAAY,aAAa,8BACzB,YAAY,aAAa,8BACzB,YAAY,iBAAiB,sCAC7B,YAAY,UAAU,wBACtB;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \n          \"text-foreground hover:bg-secondary\",\n        success:\n          \"border-transparent bg-success text-success-foreground hover:bg-success/80\",\n        warning:\n          \"border-transparent bg-warning text-warning-foreground hover:bg-warning/80\",\n        info:\n          \"border-transparent bg-info text-info-foreground hover:bg-info/80\",\n        accent:\n          \"border-transparent bg-accent text-accent-foreground hover:bg-accent/80\",\n      },\n      size: {\n        default: \"text-xs px-2.5 py-0.5\",\n        sm: \"text-[10px] px-2 py-0.25\",\n        lg: \"text-sm px-3 py-1\",\n      },\n      rounded: {\n        default: \"rounded-full\",\n        md: \"rounded-md\",\n        none: \"rounded-none\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      rounded: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {\n  icon?: React.ReactNode\n}\n\nfunction Badge({\n  className,\n  variant,\n  size,\n  rounded,\n  icon,\n  children,\n  ...props\n}: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant, size, rounded, className }))} {...props}>\n      {icon && <span className=\"mr-1\">{icon}</span>}\n      {children}\n    </div>\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;YACF,SACE;YACF,SACE;YACF,MACE;YACF,QACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,SAAS;YACP,SAAS;YACT,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,SAAS;IACX;AACF;AASF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,IAAI,EACJ,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,GAAG,OACQ;IACX,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAS;QAAU;QAAM,GAAG,KAAK;;YAChF,sBAAQ,8OAAC;gBAAK,WAAU;0BAAQ;;;;;;YAChC;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/navigation-adapter.ts"],"sourcesContent":["import { Role } from \"@prisma/client\";\r\nimport { ClipboardCheck } from \"lucide-react\";\r\nimport { DashboardNavItem } from \"./constants\";\r\n\r\n/**\r\n * Navigation adapter để thêm routes mới mà không ảnh hưởng đến hệ thống cũ\r\n * Dùng adapter pattern để ánh xạ các routes mới vào hệ thống navigation hiện tại\r\n */\r\n\r\n// Map between old routes và new routes\r\nconst ROUTE_MAPPINGS = {\r\n  // Student routes\r\n  studentResults: {\r\n    oldRoute: \"/dashboard/student/results\",\r\n    newRoutePattern: \"/dashboard/student/quizzes/results/\",\r\n  },\r\n  // Teacher routes\r\n  teacherResults: {\r\n    oldRoute: \"/dashboard/teacher/results\", \r\n    newRoutePattern: \"/dashboard/teacher/grading\",\r\n  }\r\n};\r\n\r\n/**\r\n * Function kiểm tra xem một route hiện tại có tương ứng với \r\n * route mới nào không để hiển thị active state\r\n */\r\nexport function isActiveRoute(currentPath: string, navItemPath: string): boolean {\r\n  // Kiểm tra exact match\r\n  if (currentPath === navItemPath) return true;\r\n  \r\n  // Kiểm tra mapping\r\n  for (const key in ROUTE_MAPPINGS) {\r\n    const mapping = ROUTE_MAPPINGS[key as keyof typeof ROUTE_MAPPINGS];\r\n    \r\n    // Nếu đang ở route mới nhưng menu item là route cũ\r\n    if (\r\n      currentPath.startsWith(mapping.newRoutePattern) && \r\n      navItemPath === mapping.oldRoute\r\n    ) {\r\n      return true;\r\n    }\r\n    \r\n    // Nếu đang ở route cũ nhưng menu item là route mới\r\n    if (\r\n      currentPath === mapping.oldRoute && \r\n      navItemPath.startsWith(mapping.newRoutePattern)\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\n/**\r\n * Function để lấy nav items bổ sung cho các tính năng mới\r\n * mà không cần sửa đổi DASHBOARD_NAV_LINKS\r\n */\r\nexport function getAdditionalNavItems(): DashboardNavItem[] {\r\n  return [\r\n    {\r\n      title: \"Grading\",\r\n      href: \"/dashboard/teacher/grading\",\r\n      icon: ClipboardCheck,\r\n      roles: [Role.TEACHER],\r\n      hideInTopNav: true, // Ẩn trên top nav, giữ chỉ trong sidebar\r\n    },\r\n  ];\r\n}\r\n\r\n/**\r\n * Function để lấy breadcrumb title cho các route mới\r\n */\r\nexport function getExtendedPathMap(): Record<string, string> {\r\n  return {\r\n    // Existing paths stay the same\r\n    \"dashboard\": \"Dashboard\",\r\n    \"teacher\": \"Teacher\",\r\n    \"student\": \"Student\",\r\n    \"quizzes\": \"Quizzes\",\r\n    \"results\": \"Results\",\r\n    \"exams\": \"Exams\",\r\n    \r\n    // New paths\r\n    \"grading\": \"Grading\",\r\n    \"attempt\": \"Quiz Attempt\",\r\n  };\r\n}\r\n\r\n/**\r\n * Function ánh xạ từ route cũ sang route mới (cho navigation)\r\n */\r\nexport function mapToNewRoute(oldRoute: string): string {\r\n  for (const key in ROUTE_MAPPINGS) {\r\n    const mapping = ROUTE_MAPPINGS[key as keyof typeof ROUTE_MAPPINGS];\r\n    if (oldRoute === mapping.oldRoute) {\r\n      return mapping.newRoutePattern;\r\n    }\r\n  }\r\n  return oldRoute; // Nếu không có mapping thì giữ nguyên\r\n}\r\n\r\n/**\r\n * Function ánh xạ từ route mới sang route cũ (cho breadcrumbs)\r\n */\r\nexport function mapToOldRoute(newRoute: string): string {\r\n  for (const key in ROUTE_MAPPINGS) {\r\n    const mapping = ROUTE_MAPPINGS[key as keyof typeof ROUTE_MAPPINGS];\r\n    if (newRoute.startsWith(mapping.newRoutePattern)) {\r\n      return mapping.oldRoute;\r\n    }\r\n  }\r\n  return newRoute; // Nếu không có mapping thì giữ nguyên\r\n} "],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAGA;;;CAGC,GAED,uCAAuC;AACvC,MAAM,iBAAiB;IACrB,iBAAiB;IACjB,gBAAgB;QACd,UAAU;QACV,iBAAiB;IACnB;IACA,iBAAiB;IACjB,gBAAgB;QACd,UAAU;QACV,iBAAiB;IACnB;AACF;AAMO,SAAS,cAAc,WAAmB,EAAE,WAAmB;IACpE,uBAAuB;IACvB,IAAI,gBAAgB,aAAa,OAAO;IAExC,mBAAmB;IACnB,IAAK,MAAM,OAAO,eAAgB;QAChC,MAAM,UAAU,cAAc,CAAC,IAAmC;QAElE,mDAAmD;QACnD,IACE,YAAY,UAAU,CAAC,QAAQ,eAAe,KAC9C,gBAAgB,QAAQ,QAAQ,EAChC;YACA,OAAO;QACT;QAEA,mDAAmD;QACnD,IACE,gBAAgB,QAAQ,QAAQ,IAChC,YAAY,UAAU,CAAC,QAAQ,eAAe,GAC9C;YACA,OAAO;QACT;IACF;IAEA,OAAO;AACT;AAMO,SAAS;IACd,OAAO;QACL;YACE,OAAO;YACP,MAAM;YACN,MAAM,0NAAA,CAAA,iBAAc;YACpB,OAAO;gBAAC,6HAAA,CAAA,OAAI,CAAC,OAAO;aAAC;YACrB,cAAc;QAChB;KACD;AACH;AAKO,SAAS;IACd,OAAO;QACL,+BAA+B;QAC/B,aAAa;QACb,WAAW;QACX,WAAW;QACX,WAAW;QACX,WAAW;QACX,SAAS;QAET,YAAY;QACZ,WAAW;QACX,WAAW;IACb;AACF;AAKO,SAAS,cAAc,QAAgB;IAC5C,IAAK,MAAM,OAAO,eAAgB;QAChC,MAAM,UAAU,cAAc,CAAC,IAAmC;QAClE,IAAI,aAAa,QAAQ,QAAQ,EAAE;YACjC,OAAO,QAAQ,eAAe;QAChC;IACF;IACA,OAAO,UAAU,sCAAsC;AACzD;AAKO,SAAS,cAAc,QAAgB;IAC5C,IAAK,MAAM,OAAO,eAAgB;QAChC,MAAM,UAAU,cAAc,CAAC,IAAmC;QAClE,IAAI,SAAS,UAAU,CAAC,QAAQ,eAAe,GAAG;YAChD,OAAO,QAAQ,QAAQ;QACzB;IACF;IACA,OAAO,UAAU,sCAAsC;AACzD","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/grading/page.tsx"],"sourcesContent":["import React from 'react';\r\nimport { getServerSession } from 'next-auth';\r\nimport { authOptions } from '@/app/api/auth/[...nextauth]/route';\r\nimport { prisma } from '@/lib/prisma';\r\nimport { redirect } from 'next/navigation';\r\nimport { format } from 'date-fns';\r\nimport Link from 'next/link';\r\nimport { QuestionType } from '@prisma/client';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { CalendarDays, Clock, FileSpreadsheet, User } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Breadcrumbs } from \"@/components/navigation/breadcrumbs\";\r\nimport { getExtendedPathMap } from \"@/lib/navigation-adapter\";\r\n\r\nexport default async function GradingPage() {\r\n  const session = await getServerSession(authOptions);\r\n  \r\n  if (!session?.user || session.user.role !== 'TEACHER') {\r\n    redirect('/dashboard');\r\n  }\r\n  \r\n  // Find all attempts that need manual grading\r\n  // This could be attempts with essay questions or other manually graded types\r\n  const attemptsNeedingGrading = await prisma.quizAttempt.findMany({\r\n    where: {\r\n      quiz: {\r\n        authorId: session.user.id,\r\n      },\r\n      completedAt: {\r\n        not: null, // Must be completed\r\n      },\r\n      // Join answers and check if any are null for isCorrect (meaning they need manual grading)\r\n      answers: {\r\n        some: {\r\n          isCorrect: null,\r\n          score: null,\r\n        },\r\n      },\r\n    },\r\n    include: {\r\n      user: {\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          email: true,\r\n        }\r\n      },\r\n      quiz: {\r\n        select: {\r\n          id: true,\r\n          title: true,\r\n        }\r\n      },\r\n      answers: {\r\n        where: {\r\n          isCorrect: null,\r\n          score: null,\r\n        },\r\n        include: {\r\n          question: {\r\n            select: {\r\n              id: true,\r\n              type: true,\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    orderBy: {\r\n      completedAt: 'desc',\r\n    },\r\n  });\r\n  \r\n  // Group questions by type to show statistics\r\n  const questionTypeCounts: Record<QuestionType, number> = attemptsNeedingGrading.reduce((acc, attempt) => {\r\n    attempt.answers.forEach(answer => {\r\n      const type = answer.question.type;\r\n      acc[type] = (acc[type] || 0) + 1;\r\n    });\r\n    return acc;\r\n  }, {} as Record<QuestionType, number>);\r\n  \r\n  return (\r\n    <div className=\"container px-4 py-6 space-y-6\">\r\n      <Breadcrumbs \r\n        pathMap={getExtendedPathMap()} \r\n        background=\"transparent\"\r\n      />\r\n      <h1 className=\"text-2xl font-bold sm:text-3xl\">Grading Dashboard</h1>\r\n      \r\n      {attemptsNeedingGrading.length === 0 ? (\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <p className=\"text-center text-muted-foreground py-8\">\r\n              No submissions need manual grading at this time.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n            <Card>\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle>Total Submissions</CardTitle>\r\n                <CardDescription>Needing manual grading</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-4xl font-bold\">{attemptsNeedingGrading.length}</p>\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card>\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle>Total Questions</CardTitle>\r\n                <CardDescription>Questions to grade manually</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-4xl font-bold\">\r\n                  {attemptsNeedingGrading.reduce((sum, attempt) => sum + attempt.answers.length, 0)}\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card>\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle>Question Types</CardTitle>\r\n                <CardDescription>Breakdown by type</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {Object.entries(questionTypeCounts).map(([type, count]) => (\r\n                    <Badge key={type} variant=\"outline\" className=\"px-2 py-1\">\r\n                      {type.replace('_', ' ')}: {count}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            {attemptsNeedingGrading.map((attempt) => (\r\n              <Card key={attempt.id} className=\"overflow-hidden\">\r\n                <CardHeader className=\"pb-3\">\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <CardTitle>{attempt.quiz.title}</CardTitle>\r\n                      <CardDescription className=\"flex items-center mt-1\">\r\n                        <User className=\"h-3.5 w-3.5 mr-1\" />\r\n                        {attempt.user.name}\r\n                      </CardDescription>\r\n                    </div>\r\n                    <Badge variant={attempt.score ? \"default\" : \"outline\"}>\r\n                      {attempt.score ? `${attempt.score}%` : 'Needs Grading'}\r\n                    </Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent className=\"pb-3\">\r\n                  <div className=\"flex flex-wrap gap-4 mb-3 text-sm text-muted-foreground\">\r\n                    <div className=\"flex items-center\">\r\n                      <CalendarDays className=\"h-4 w-4 mr-1\" />\r\n                      {format(new Date(attempt.completedAt!), 'PPP')}\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <Clock className=\"h-4 w-4 mr-1\" />\r\n                      {formatTime(attempt.timeSpent || 0)}\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <FileSpreadsheet className=\"h-4 w-4 mr-1\" />\r\n                      {attempt.answers.length} questions need grading\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 mb-3\">\r\n                    {attempt.answers.map(answer => (\r\n                      <Badge \r\n                        key={answer.id} \r\n                        variant=\"outline\"\r\n                        className=\"justify-start py-1\"\r\n                      >\r\n                        {formatQuestionType(answer.question.type)}\r\n                      </Badge>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  <Button \r\n                    asChild \r\n                    className=\"mt-2\"\r\n                  >\r\n                    <Link href={`/dashboard/teacher/grading/${attempt.id}`}>\r\n                      Grade Submission\r\n                    </Link>\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatTime(seconds: number): string {\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const remainingSeconds = seconds % 60;\r\n  \r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m ${remainingSeconds}s`;\r\n  } else if (minutes > 0) {\r\n    return `${minutes}m ${remainingSeconds}s`;\r\n  } else {\r\n    return `${remainingSeconds}s`;\r\n  }\r\n}\r\n\r\nfunction formatQuestionType(type: QuestionType): string {\r\n  return type\r\n    .split('_')\r\n    .map(word => word.charAt(0) + word.slice(1).toLowerCase())\r\n    .join(' ');\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}
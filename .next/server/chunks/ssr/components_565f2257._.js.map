{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/teacher/student-details-client.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport {\r\n  AlertCircle,\r\n  BookOpen,\r\n  Calendar,\r\n  CheckCircle2,\r\n  Clock,\r\n  Hourglass,\r\n  LineChart,\r\n  School,\r\n  Trophy,\r\n  XCircle,\r\n} from \"lucide-react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n} from \"recharts\";\r\nimport { formatDistanceToNow, format } from \"date-fns\";\r\nimport { toast } from \"@/components/ui/use-toast\";\r\n\r\n// Define types for the component\r\ninterface ClassStats {\r\n  classId: string;\r\n  className: string;\r\n  subject: string;\r\n  type: string;\r\n  isActive: boolean;\r\n  enrollmentId: string;\r\n  joinedAt: string;\r\n  lastActive: string | null;\r\n  attemptCount: number;\r\n  completedCount: number;\r\n  averageScore: number | null;\r\n  passRate: number | null;\r\n}\r\n\r\ninterface QuizAttempt {\r\n  id: string;\r\n  quizId: string;\r\n  quizTitle: string;\r\n  classId: string;\r\n  className: string;\r\n  score: number | null;\r\n  startedAt: string;\r\n  completedAt: string | null;\r\n  passed: boolean | null;\r\n}\r\n\r\ninterface StudentData {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  createdAt: string;\r\n  classes: ClassStats[];\r\n  quizAttempts: QuizAttempt[];\r\n}\r\n\r\ninterface OverallStats {\r\n  totalAttempts: number;\r\n  completedAttempts: number;\r\n  averageScore: number | null;\r\n  classesEnrolled: number;\r\n  lastActive: string | null;\r\n}\r\n\r\ninterface StudentDetailsClientProps {\r\n  student: StudentData;\r\n  stats: OverallStats;\r\n}\r\n\r\nexport default function StudentDetailsClient({\r\n  student,\r\n  stats,\r\n}: StudentDetailsClientProps) {\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n\r\n  // Prepare data for score distribution chart\r\n  const prepareScoreDistribution = () => {\r\n    const completedAttempts = student.quizAttempts.filter(\r\n      (attempt) => attempt.completedAt && attempt.score !== null\r\n    );\r\n    \r\n    if (completedAttempts.length === 0) return [];\r\n    \r\n    const scoreRanges = [\r\n      { name: \"0-20\", min: 0, max: 20, count: 0 },\r\n      { name: \"21-40\", min: 21, max: 40, count: 0 },\r\n      { name: \"41-60\", min: 41, max: 60, count: 0 },\r\n      { name: \"61-80\", min: 61, max: 80, count: 0 },\r\n      { name: \"81-100\", min: 81, max: 100, count: 0 },\r\n    ];\r\n    \r\n    completedAttempts.forEach(attempt => {\r\n      if (attempt.score !== null) {\r\n        const range = scoreRanges.find(\r\n          range => attempt.score! >= range.min && attempt.score! <= range.max\r\n        );\r\n        if (range) range.count++;\r\n      }\r\n    });\r\n    \r\n    return scoreRanges;\r\n  };\r\n\r\n  // Prepare data for class performance chart\r\n  const prepareClassPerformance = () => {\r\n    return student.classes\r\n      .filter(cls => cls.averageScore !== null)\r\n      .map(cls => ({\r\n        name: cls.className,\r\n        score: cls.averageScore,\r\n        attempts: cls.attemptCount,\r\n      }));\r\n  };\r\n\r\n  const renderActivityTimeline = () => {\r\n    // Sort attempts by date (newest first)\r\n    const sortedAttempts = [...student.quizAttempts].sort((a, b) => \r\n      new Date(b.startedAt).getTime() - new Date(a.startedAt).getTime()\r\n    );\r\n    \r\n    if (sortedAttempts.length === 0) {\r\n      return (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-muted-foreground\">No activity recorded yet</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {sortedAttempts.slice(0, 10).map(attempt => (\r\n          <div key={attempt.id} className=\"flex items-start gap-4 border-b pb-4\">\r\n            <div className=\"rounded-full bg-primary/10 p-2\">\r\n              {attempt.completedAt ? \r\n                attempt.passed ? <CheckCircle2 className=\"h-4 w-4 text-green-500\" /> \r\n                : <XCircle className=\"h-4 w-4 text-red-500\" />\r\n                : <Hourglass className=\"h-4 w-4 text-amber-500\" />\r\n              }\r\n            </div>\r\n            <div className=\"flex-1 space-y-1\">\r\n              <p className=\"text-sm font-medium leading-none\">\r\n                {attempt.completedAt ? \r\n                  (attempt.passed ? \"Completed and passed\" : \"Completed but failed\") \r\n                  : \"Started\"} quiz: {attempt.quizTitle}\r\n              </p>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Class: {attempt.className}\r\n              </p>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {attempt.completedAt ? \r\n                  `Completed ${formatDistanceToNow(new Date(attempt.completedAt), { addSuffix: true })}` \r\n                  : `Started ${formatDistanceToNow(new Date(attempt.startedAt), { addSuffix: true })}`\r\n                }\r\n              </p>\r\n              {attempt.score !== null && (\r\n                <Badge className={attempt.passed ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}>\r\n                  Score: {attempt.score}%\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">\r\n              Classes Enrolled\r\n            </CardTitle>\r\n            <School className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{stats.classesEnrolled}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Active in {student.classes.filter(c => c.isActive).length} classes\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">\r\n              Quiz Attempts\r\n            </CardTitle>\r\n            <BookOpen className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{stats.totalAttempts}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              {stats.completedAttempts} completed ({Math.round((stats.completedAttempts / Math.max(stats.totalAttempts, 1)) * 100)}%)\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">\r\n              Average Score\r\n            </CardTitle>\r\n            <Trophy className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {stats.averageScore !== null ? `${stats.averageScore}%` : \"N/A\"}\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              {stats.completedAttempts > 0 \r\n                ? `Based on ${stats.completedAttempts} completed quizzes` \r\n                : \"No completed quizzes yet\"}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">\r\n              Last Active\r\n            </CardTitle>\r\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {stats.lastActive \r\n                ? formatDistanceToNow(new Date(stats.lastActive), { addSuffix: true }) \r\n                : \"Never\"}\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              {stats.lastActive \r\n                ? `On ${format(new Date(stats.lastActive), 'MMM d, yyyy')}` \r\n                : \"Student has not been active yet\"}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-4\" onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"classes\">Classes</TabsTrigger>\r\n          <TabsTrigger value=\"quizzes\">Quizzes</TabsTrigger>\r\n          <TabsTrigger value=\"activity\">Activity</TabsTrigger>\r\n        </TabsList>\r\n        \r\n        <TabsContent value=\"overview\" className=\"space-y-4\">\r\n          <div className=\"grid gap-4 md:grid-cols-2\">\r\n            <Card className=\"col-span-1\">\r\n              <CardHeader>\r\n                <CardTitle>Student Information</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">Name:</span>\r\n                    <span className=\"font-medium\">{student.name}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">Email:</span>\r\n                    <span className=\"font-medium\">{student.email}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">Member Since:</span>\r\n                    <span className=\"font-medium\">{format(new Date(student.createdAt), 'MMM d, yyyy')}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">Classes Enrolled:</span>\r\n                    <span className=\"font-medium\">{stats.classesEnrolled}</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card className=\"col-span-1\">\r\n              <CardHeader>\r\n                <CardTitle>Score Distribution</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"h-[220px]\">\r\n                {stats.completedAttempts > 0 ? (\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                      layout=\"vertical\"\r\n                      data={prepareScoreDistribution()}\r\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis type=\"number\" />\r\n                      <YAxis dataKey=\"name\" type=\"category\" />\r\n                      <Tooltip formatter={(value) => [`${value} attempts`, 'Count']} />\r\n                      <Legend />\r\n                      <Bar dataKey=\"count\" fill=\"#8884d8\" name=\"Quiz Attempts\" />\r\n                    </BarChart>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <div className=\"flex h-full items-center justify-center\">\r\n                    <div className=\"text-center\">\r\n                      <AlertCircle className=\"mx-auto h-12 w-12 text-muted-foreground opacity-50\" />\r\n                      <p className=\"mt-2 text-sm text-muted-foreground\">\r\n                        No quiz data available yet\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          \r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Recent Activity</CardTitle>\r\n              <CardDescription>\r\n                Recent quiz attempts and class activities\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {renderActivityTimeline()}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"classes\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Class Performance</CardTitle>\r\n              <CardDescription>\r\n                Average scores across enrolled classes\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"h-[300px]\">\r\n              {prepareClassPerformance().length > 0 ? (\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={prepareClassPerformance()}\r\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis domain={[0, 100]} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"score\" fill=\"#8884d8\" name=\"Average Score (%)\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              ) : (\r\n                <div className=\"flex h-full items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <LineChart className=\"mx-auto h-12 w-12 text-muted-foreground opacity-50\" />\r\n                    <p className=\"mt-2 text-sm text-muted-foreground\">\r\n                      No class performance data available yet\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Enrolled Classes</CardTitle>\r\n              <CardDescription>\r\n                Classes this student is enrolled in\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Class Name</TableHead>\r\n                    <TableHead>Subject</TableHead>\r\n                    <TableHead>Joined</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Quiz Attempts</TableHead>\r\n                    <TableHead>Avg. Score</TableHead>\r\n                    <TableHead>Pass Rate</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {student.classes.map((cls) => (\r\n                    <TableRow key={cls.classId}>\r\n                      <TableCell className=\"font-medium\">\r\n                        <a href={`/dashboard/teacher/classes/${cls.classId}`} className=\"text-blue-600 hover:underline\">\r\n                          {cls.className}\r\n                        </a>\r\n                      </TableCell>\r\n                      <TableCell>{cls.subject}</TableCell>\r\n                      <TableCell>{format(new Date(cls.joinedAt), 'MMM d, yyyy')}</TableCell>\r\n                      <TableCell>\r\n                        <Badge variant={cls.isActive ? \"default\" : \"secondary\"}>\r\n                          {cls.isActive ? \"Active\" : \"Inactive\"}\r\n                        </Badge>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {cls.completedCount}/{cls.attemptCount}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {cls.averageScore !== null ? `${cls.averageScore}%` : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {cls.passRate !== null ? `${cls.passRate}%` : \"N/A\"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"quizzes\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Quiz Attempts</CardTitle>\r\n              <CardDescription>\r\n                All quiz attempts by this student\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Quiz</TableHead>\r\n                    <TableHead>Class</TableHead>\r\n                    <TableHead>Started</TableHead>\r\n                    <TableHead>Completed</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Score</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {student.quizAttempts.length > 0 ? (\r\n                    student.quizAttempts.map((attempt) => (\r\n                      <TableRow key={attempt.id}>\r\n                        <TableCell className=\"font-medium\">\r\n                          <a href={`/dashboard/teacher/quizzes/${attempt.quizId}`} className=\"text-blue-600 hover:underline\">\r\n                            {attempt.quizTitle}\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <a href={`/dashboard/teacher/classes/${attempt.classId}`} className=\"text-blue-600 hover:underline\">\r\n                            {attempt.className}\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell>{format(new Date(attempt.startedAt), 'MMM d, yyyy')}</TableCell>\r\n                        <TableCell>\r\n                          {attempt.completedAt ? format(new Date(attempt.completedAt), 'MMM d, yyyy') : \"-\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {attempt.completedAt ? (\r\n                            attempt.passed ? (\r\n                              <Badge className=\"bg-green-100 text-green-800\">Passed</Badge>\r\n                            ) : (\r\n                              <Badge className=\"bg-red-100 text-red-800\">Failed</Badge>\r\n                            )\r\n                          ) : (\r\n                            <Badge variant=\"outline\">In Progress</Badge>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {attempt.score !== null ? `${attempt.score}%` : \"-\"}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell colSpan={6} className=\"text-center py-4\">\r\n                        No quiz attempts recorded\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"activity\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Activity Timeline</CardTitle>\r\n              <CardDescription>\r\n                Recent student activity and quiz attempts\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {renderActivityTimeline()}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}
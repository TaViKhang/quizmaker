{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gMACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  icon?: React.ReactNode\n  error?: boolean\n  hint?: string\n  endIcon?: React.ReactNode\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, icon, error, hint, endIcon, disabled, ...props }, ref) => {\n    return (\n      <div className=\"relative flex flex-col gap-1 w-full\">\n        {/* Input wrapper for icon positioning */}\n        <div className=\"relative\">\n          {/* Start icon if provided */}\n          {icon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center pointer-events-none\">\n              {icon}\n            </div>\n          )}\n          \n      <input\n        type={type}\n        className={cn(\n              \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 shadow-sm\",\n              icon && \"pl-10\",  // Add left padding if icon is present\n              endIcon && \"pr-10\", // Add right padding if end icon is present\n              error && \"border-destructive focus-visible:ring-destructive/50\",\n          className\n        )}\n            disabled={disabled}\n        ref={ref}\n            aria-invalid={error ? \"true\" : undefined}\n        {...props}\n      />\n          \n          {/* End icon if provided */}\n          {endIcon && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center\">\n              {endIcon}\n            </div>\n          )}\n        </div>\n        \n        {/* Hint or error message */}\n        {hint && (\n          <p \n            className={cn(\n              \"text-xs\",\n              error \n                ? \"text-destructive\" \n                : \"text-muted-foreground\"\n            )}\n            id={`${props.id || ''}-hint`}\n          >\n            {hint}\n          </p>\n        )}\n      </div>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAUA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpE,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;oBAEZ,sBACC,6LAAC;wBAAI,WAAU;kCACZ;;;;;;kCAIT,6LAAC;wBACC,MAAM;wBACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACN,+WACA,QAAQ,SACR,WAAW,SACX,SAAS,wDACb;wBAEE,UAAU;wBACd,KAAK;wBACD,gBAAc,QAAQ,SAAS;wBAClC,GAAG,KAAK;;;;;;oBAIN,yBACC,6LAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAMN,sBACC,6LAAC;gBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,WACA,QACI,qBACA;gBAEN,IAAI,GAAG,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC;0BAE3B;;;;;;;;;;;;AAKX;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/preview/components/QuestionPreview.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useMemo } from \"react\";\r\nimport { Question, QuestionType } from \"@prisma/client\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Code, CheckCircle } from \"lucide-react\";\r\n\r\ninterface QuestionPreviewProps {\r\n  question: Question & {\r\n    options: {\r\n      id: string;\r\n      content: string;\r\n      isCorrect: boolean;\r\n      order: number;\r\n      group?: string | null;\r\n      matchId?: string | null;\r\n    }[];\r\n  };\r\n}\r\n\r\nexport function QuestionPreview({ question }: QuestionPreviewProps) {\r\n  // Parse metadata based on question type\r\n  const metadata = useMemo(() => {\r\n    try {\r\n      return question.metadata ? JSON.parse(JSON.stringify(question.metadata)) : {};\r\n    } catch (e) {\r\n      console.error(\"Error parsing question metadata\", e);\r\n      return {};\r\n    }\r\n  }, [question.metadata]);\r\n\r\n  // Render question content with HTML\r\n  const renderContent = () => {\r\n    return (\r\n      <div \r\n        className=\"mb-6 text-lg\"\r\n        dangerouslySetInnerHTML={{ __html: question.content }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Multiple Choice Question\r\n  const renderMultipleChoice = () => {\r\n    // Check if this is a multi-select or single-select question\r\n    const isMultiSelect = question.options.filter(o => o.isCorrect).length > 1;\r\n    \r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {renderContent()}\r\n        \r\n        {isMultiSelect ? (\r\n          <div className=\"space-y-3\">\r\n            {question.options\r\n              .sort((a, b) => a.order - b.order)\r\n              .map((option) => (\r\n                <div key={option.id} className=\"flex items-start space-x-3 p-3 rounded-md border\">\r\n                  <Checkbox id={option.id} disabled />\r\n                  <Label \r\n                    htmlFor={option.id} \r\n                    className=\"text-base cursor-pointer\"\r\n                    dangerouslySetInnerHTML={{ __html: option.content }}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <RadioGroup className=\"space-y-3\">\r\n            {question.options\r\n              .sort((a, b) => a.order - b.order)\r\n              .map((option) => (\r\n                <div key={option.id} className=\"flex items-center space-x-3 p-3 rounded-md border\">\r\n                  <RadioGroupItem value={option.id} id={option.id} disabled />\r\n                  <Label \r\n                    htmlFor={option.id} \r\n                    className=\"text-base cursor-pointer\"\r\n                    dangerouslySetInnerHTML={{ __html: option.content }}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </RadioGroup>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // True/False Question\r\n  const renderTrueFalse = () => {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {renderContent()}\r\n        \r\n        <RadioGroup className=\"space-y-3\">\r\n          <div className=\"flex items-center space-x-3 p-3 rounded-md border\">\r\n            <RadioGroupItem value=\"true\" id=\"true\" disabled />\r\n            <Label htmlFor=\"true\" className=\"text-base cursor-pointer\">True</Label>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 p-3 rounded-md border\">\r\n            <RadioGroupItem value=\"false\" id=\"false\" disabled />\r\n            <Label htmlFor=\"false\" className=\"text-base cursor-pointer\">False</Label>\r\n          </div>\r\n        </RadioGroup>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Short Answer Question\r\n  const renderShortAnswer = () => {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {renderContent()}\r\n        \r\n        <div className=\"space-y-2\">\r\n          <Input \r\n            placeholder={metadata.placeholder || \"Enter your answer\"} \r\n            disabled \r\n          />\r\n          <p className=\"text-xs text-muted-foreground\">\r\n            Type a short answer (case {metadata.caseSensitive ? \"sensitive\" : \"insensitive\"})\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Essay Question\r\n  const renderEssay = () => {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {renderContent()}\r\n        \r\n        <div className=\"space-y-2\">\r\n          <Textarea \r\n            placeholder={metadata.placeholder || \"Enter your answer...\"} \r\n            className=\"min-h-[150px]\" \r\n            disabled \r\n          />\r\n          {(metadata.minWords > 0 || metadata.maxWords > 0) && (\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              {metadata.minWords > 0 && `Minimum ${metadata.minWords} words`}\r\n              {metadata.minWords > 0 && metadata.maxWords > 0 && \" | \"}\r\n              {metadata.maxWords > 0 && `Maximum ${metadata.maxWords} words`}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Matching Question\r\n  const renderMatching = () => {\r\n    // Organize options into groups (premises and responses)\r\n    const premises = question.options\r\n      .filter(o => o.group === \"premise\")\r\n      .sort((a, b) => a.order - b.order);\r\n      \r\n    const responses = question.options\r\n      .filter(o => o.group === \"response\")\r\n      .sort((a, b) => a.order - b.order);\r\n    \r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {renderContent()}\r\n        \r\n        <div className=\"grid md:grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <h3 className=\"font-medium\">Items</h3>\r\n            <div className=\"space-y-2\">\r\n              {premises.map((premise, index) => (\r\n                <div key={premise.id} className=\"flex items-center p-3 rounded-md border\">\r\n                  <div className=\"flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary font-medium mr-3\">\r\n                    {index + 1}\r\n                  </div>\r\n                  <span dangerouslySetInnerHTML={{ __html: premise.content }} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <h3 className=\"font-medium\">Matches</h3>\r\n            <div className=\"space-y-2\">\r\n              {responses.map((response, index) => (\r\n                <div key={response.id} className=\"flex items-center p-3 rounded-md border\">\r\n                  <div className=\"flex items-center justify-center h-6 w-6 rounded-full bg-slate-100 text-slate-700 font-medium mr-3\">\r\n                    {String.fromCharCode(65 + index)}\r\n                  </div>\r\n                  <span dangerouslySetInnerHTML={{ __html: response.content }} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Fill-in-the-blank Question\r\n  const renderFillInBlank = () => {\r\n    let template = metadata.template || question.content;\r\n    const blanks = metadata.blanks || [];\r\n    \r\n    // Parse the template and replace blanks with input fields\r\n    const content = template.split(/(\\[blank_[a-z0-9]+\\])/).map((part: string, index: number) => {\r\n      if (part.match(/\\[blank_[a-z0-9]+\\]/)) {\r\n        const blankId = part.substring(1, part.length - 1);\r\n        const blank = blanks.find((b: any) => b.id === blankId);\r\n        \r\n        return (\r\n          <Input\r\n            key={index}\r\n            className=\"inline-block w-32 mx-1 px-2\"\r\n            placeholder=\"Fill blank\"\r\n            disabled\r\n          />\r\n        );\r\n      }\r\n      return <span key={index}>{part}</span>;\r\n    });\r\n\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        <div className=\"mb-6 text-lg\">\r\n          <div dangerouslySetInnerHTML={{ __html: question.content }} className=\"mb-4\" />\r\n          <div className=\"p-4 border rounded-md bg-slate-50\">\r\n            {content}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Code Question\r\n  const renderCode = () => {\r\n    const language = metadata.language || \"javascript\";\r\n    const starterCode = metadata.starterCode || \"// Write your code here\";\r\n    \r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {renderContent()}\r\n        \r\n        <div className=\"space-y-2\">\r\n          <div className=\"p-4 rounded-md border bg-slate-50 font-mono text-sm overflow-x-auto\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <div className=\"px-2 py-1 text-xs bg-primary/10 text-primary rounded\">\r\n                {language}\r\n              </div>\r\n              <Code className=\"h-4 w-4 text-muted-foreground\" />\r\n            </div>\r\n            <pre className=\"whitespace-pre-wrap\">{starterCode}</pre>\r\n          </div>\r\n          \r\n          {metadata.testCases && metadata.testCases.length > 0 && (\r\n            <div className=\"mt-4 border rounded-md p-3\">\r\n              <h4 className=\"font-medium mb-2\">Test Cases</h4>\r\n              <div className=\"space-y-2\">\r\n                {metadata.testCases\r\n                  .filter((tc: any) => !tc.hidden)\r\n                  .map((testCase: any, index: number) => (\r\n                    <div key={index} className=\"text-sm p-2 bg-slate-50 rounded\">\r\n                      <div>\r\n                        <span className=\"font-medium\">Input:</span> {testCase.input}\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"font-medium\">Expected Output:</span> {testCase.output}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n              \r\n              {metadata.testCases.some((tc: any) => tc.hidden) && (\r\n                <p className=\"text-xs text-muted-foreground mt-2\">\r\n                  <CheckCircle className=\"h-3 w-3 inline-block mr-1\" />\r\n                  There are also hidden test cases that will be used to evaluate your solution.\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render proper component based on question type\r\n  switch (question.type) {\r\n    case QuestionType.MULTIPLE_CHOICE:\r\n      return renderMultipleChoice();\r\n    case QuestionType.TRUE_FALSE:\r\n      return renderTrueFalse();\r\n    case QuestionType.SHORT_ANSWER:\r\n      return renderShortAnswer();\r\n    case QuestionType.ESSAY:\r\n      return renderEssay();\r\n    case QuestionType.MATCHING:\r\n      return renderMatching();\r\n    case QuestionType.FILL_BLANK:\r\n      return renderFillInBlank();\r\n    case QuestionType.CODE:\r\n      return renderCode();\r\n    default:\r\n      return (\r\n        <div className=\"p-6 text-center border rounded-md\">\r\n          <p>Unsupported question type: {question.type}</p>\r\n        </div>\r\n      );\r\n  }\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;AAXA;;;;;;;;;AA0BO,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;;IAChE,wCAAwC;IACxC,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;6CAAE;YACvB,IAAI;gBACF,OAAO,SAAS,QAAQ,GAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,SAAS,QAAQ,KAAK,CAAC;YAC9E,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,OAAO,CAAC;YACV;QACF;4CAAG;QAAC,SAAS,QAAQ;KAAC;IAEtB,oCAAoC;IACpC,MAAM,gBAAgB;QACpB,qBACE,6LAAC;YACC,WAAU;YACV,yBAAyB;gBAAE,QAAQ,SAAS,OAAO;YAAC;;;;;;IAG1D;IAEA,2BAA2B;IAC3B,MAAM,uBAAuB;QAC3B,4DAA4D;QAC5D,MAAM,gBAAgB,SAAS,OAAO,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,SAAS,EAAE,MAAM,GAAG;QAEzE,qBACE,6LAAC;YAAI,WAAU;;gBACZ;gBAEA,8BACC,6LAAC;oBAAI,WAAU;8BACZ,SAAS,OAAO,CACd,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAChC,GAAG,CAAC,CAAC,uBACJ,6LAAC;4BAAoB,WAAU;;8CAC7B,6LAAC,gIAAA,CAAA,WAAQ;oCAAC,IAAI,OAAO,EAAE;oCAAE,QAAQ;;;;;;8CACjC,6LAAC,6HAAA,CAAA,QAAK;oCACJ,SAAS,OAAO,EAAE;oCAClB,WAAU;oCACV,yBAAyB;wCAAE,QAAQ,OAAO,OAAO;oCAAC;;;;;;;2BAL5C,OAAO,EAAE;;;;;;;;;yCAWzB,6LAAC,sIAAA,CAAA,aAAU;oBAAC,WAAU;8BACnB,SAAS,OAAO,CACd,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAChC,GAAG,CAAC,CAAC,uBACJ,6LAAC;4BAAoB,WAAU;;8CAC7B,6LAAC,sIAAA,CAAA,iBAAc;oCAAC,OAAO,OAAO,EAAE;oCAAE,IAAI,OAAO,EAAE;oCAAE,QAAQ;;;;;;8CACzD,6LAAC,6HAAA,CAAA,QAAK;oCACJ,SAAS,OAAO,EAAE;oCAClB,WAAU;oCACV,yBAAyB;wCAAE,QAAQ,OAAO,OAAO;oCAAC;;;;;;;2BAL5C,OAAO,EAAE;;;;;;;;;;;;;;;;IAajC;IAEA,sBAAsB;IACtB,MAAM,kBAAkB;QACtB,qBACE,6LAAC;YAAI,WAAU;;gBACZ;8BAED,6LAAC,sIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,sIAAA,CAAA,iBAAc;oCAAC,OAAM;oCAAO,IAAG;oCAAO,QAAQ;;;;;;8CAC/C,6LAAC,6HAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAO,WAAU;8CAA2B;;;;;;;;;;;;sCAE7D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,sIAAA,CAAA,iBAAc;oCAAC,OAAM;oCAAQ,IAAG;oCAAQ,QAAQ;;;;;;8CACjD,6LAAC,6HAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAQ,WAAU;8CAA2B;;;;;;;;;;;;;;;;;;;;;;;;IAKtE;IAEA,wBAAwB;IACxB,MAAM,oBAAoB;QACxB,qBACE,6LAAC;YAAI,WAAU;;gBACZ;8BAED,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,6HAAA,CAAA,QAAK;4BACJ,aAAa,SAAS,WAAW,IAAI;4BACrC,QAAQ;;;;;;sCAEV,6LAAC;4BAAE,WAAU;;gCAAgC;gCAChB,SAAS,aAAa,GAAG,cAAc;gCAAc;;;;;;;;;;;;;;;;;;;IAK1F;IAEA,iBAAiB;IACjB,MAAM,cAAc;QAClB,qBACE,6LAAC;YAAI,WAAU;;gBACZ;8BAED,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,gIAAA,CAAA,WAAQ;4BACP,aAAa,SAAS,WAAW,IAAI;4BACrC,WAAU;4BACV,QAAQ;;;;;;wBAET,CAAC,SAAS,QAAQ,GAAG,KAAK,SAAS,QAAQ,GAAG,CAAC,mBAC9C,6LAAC;4BAAE,WAAU;;gCACV,SAAS,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,SAAS,QAAQ,CAAC,MAAM,CAAC;gCAC7D,SAAS,QAAQ,GAAG,KAAK,SAAS,QAAQ,GAAG,KAAK;gCAClD,SAAS,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,SAAS,QAAQ,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;;;IAM1E;IAEA,oBAAoB;IACpB,MAAM,iBAAiB;QACrB,wDAAwD;QACxD,MAAM,WAAW,SAAS,OAAO,CAC9B,MAAM,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,WACxB,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;QAEnC,MAAM,YAAY,SAAS,OAAO,CAC/B,MAAM,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,YACxB,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;QAEnC,qBACE,6LAAC;YAAI,WAAU;;gBACZ;8BAED,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAc;;;;;;8CAC5B,6LAAC;oCAAI,WAAU;8CACZ,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,6LAAC;4CAAqB,WAAU;;8DAC9B,6LAAC;oDAAI,WAAU;8DACZ,QAAQ;;;;;;8DAEX,6LAAC;oDAAK,yBAAyB;wDAAE,QAAQ,QAAQ,OAAO;oDAAC;;;;;;;2CAJjD,QAAQ,EAAE;;;;;;;;;;;;;;;;sCAU1B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAc;;;;;;8CAC5B,6LAAC;oCAAI,WAAU;8CACZ,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,6LAAC;4CAAsB,WAAU;;8DAC/B,6LAAC;oDAAI,WAAU;8DACZ,OAAO,YAAY,CAAC,KAAK;;;;;;8DAE5B,6LAAC;oDAAK,yBAAyB;wDAAE,QAAQ,SAAS,OAAO;oDAAC;;;;;;;2CAJlD,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYnC;IAEA,6BAA6B;IAC7B,MAAM,oBAAoB;QACxB,IAAI,WAAW,SAAS,QAAQ,IAAI,SAAS,OAAO;QACpD,MAAM,SAAS,SAAS,MAAM,IAAI,EAAE;QAEpC,0DAA0D;QAC1D,MAAM,UAAU,SAAS,KAAK,CAAC,yBAAyB,GAAG,CAAC,CAAC,MAAc;YACzE,IAAI,KAAK,KAAK,CAAC,wBAAwB;gBACrC,MAAM,UAAU,KAAK,SAAS,CAAC,GAAG,KAAK,MAAM,GAAG;gBAChD,MAAM,QAAQ,OAAO,IAAI,CAAC,CAAC,IAAW,EAAE,EAAE,KAAK;gBAE/C,qBACE,6LAAC,6HAAA,CAAA,QAAK;oBAEJ,WAAU;oBACV,aAAY;oBACZ,QAAQ;mBAHH;;;;;YAMX;YACA,qBAAO,6LAAC;0BAAkB;eAAR;;;;;QACpB;QAEA,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,yBAAyB;4BAAE,QAAQ,SAAS,OAAO;wBAAC;wBAAG,WAAU;;;;;;kCACtE,6LAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;;;;;;IAKX;IAEA,gBAAgB;IAChB,MAAM,aAAa;QACjB,MAAM,WAAW,SAAS,QAAQ,IAAI;QACtC,MAAM,cAAc,SAAS,WAAW,IAAI;QAE5C,qBACE,6LAAC;YAAI,WAAU;;gBACZ;8BAED,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACZ;;;;;;sDAEH,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;;;;;;;8CAElB,6LAAC;oCAAI,WAAU;8CAAuB;;;;;;;;;;;;wBAGvC,SAAS,SAAS,IAAI,SAAS,SAAS,CAAC,MAAM,GAAG,mBACjD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAmB;;;;;;8CACjC,6LAAC;oCAAI,WAAU;8CACZ,SAAS,SAAS,CAChB,MAAM,CAAC,CAAC,KAAY,CAAC,GAAG,MAAM,EAC9B,GAAG,CAAC,CAAC,UAAe,sBACnB,6LAAC;4CAAgB,WAAU;;8DACzB,6LAAC;;sEACC,6LAAC;4DAAK,WAAU;sEAAc;;;;;;wDAAa;wDAAE,SAAS,KAAK;;;;;;;8DAE7D,6LAAC;;sEACC,6LAAC;4DAAK,WAAU;sEAAc;;;;;;wDAAuB;wDAAE,SAAS,MAAM;;;;;;;;2CALhE;;;;;;;;;;gCAWf,SAAS,SAAS,CAAC,IAAI,CAAC,CAAC,KAAY,GAAG,MAAM,mBAC7C,6LAAC;oCAAE,WAAU;;sDACX,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;wCAA8B;;;;;;;;;;;;;;;;;;;;;;;;;IASrE;IAEA,iDAAiD;IACjD,OAAQ,SAAS,IAAI;QACnB,KAAK,yJAAA,CAAA,eAAY,CAAC,eAAe;YAC/B,OAAO;QACT,KAAK,yJAAA,CAAA,eAAY,CAAC,UAAU;YAC1B,OAAO;QACT,KAAK,yJAAA,CAAA,eAAY,CAAC,YAAY;YAC5B,OAAO;QACT,KAAK,yJAAA,CAAA,eAAY,CAAC,KAAK;YACrB,OAAO;QACT,KAAK,yJAAA,CAAA,eAAY,CAAC,QAAQ;YACxB,OAAO;QACT,KAAK,yJAAA,CAAA,eAAY,CAAC,UAAU;YAC1B,OAAO;QACT,KAAK,yJAAA,CAAA,eAAY,CAAC,IAAI;YACpB,OAAO;QACT;YACE,qBACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;;wBAAE;wBAA4B,SAAS,IAAI;;;;;;;;;;;;IAGpD;AACF;GA7RgB;KAAA","debugId":null}},
    {"offset": {"line": 1081, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/preview/QuizPreviewClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useMemo } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Check, ChevronLeft, ChevronRight, Eye, List, Settings, ArrowLeft } from \"lucide-react\";\r\nimport { formatDuration } from \"@/lib/utils\";\r\nimport { QuestionPreview } from \"./components/QuestionPreview\";\r\nimport { Quiz, Question, QuestionType } from \"@prisma/client\";\r\nimport Link from \"next/link\";\r\n\r\ninterface QuizPreviewClientProps {\r\n  quiz: Quiz & {\r\n    questions: (Question & {\r\n      options: {\r\n        id: string;\r\n        content: string;\r\n        isCorrect: boolean;\r\n        order: number;\r\n        group?: string | null;\r\n        matchId?: string | null;\r\n      }[];\r\n    })[];\r\n  };\r\n}\r\n\r\nexport function QuizPreviewClient({ quiz }: QuizPreviewClientProps) {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [viewMode, setViewMode] = useState<\"question\" | \"list\" | \"settings\">(\"question\");\r\n  \r\n  // Get current question\r\n  const currentQuestion = useMemo(() => {\r\n    return quiz.questions[currentQuestionIndex] || null;\r\n  }, [quiz.questions, currentQuestionIndex]);\r\n\r\n  // Calculate progress\r\n  const progress = useMemo(() => {\r\n    return quiz.questions.length > 0\r\n      ? ((currentQuestionIndex + 1) / quiz.questions.length) * 100\r\n      : 0;\r\n  }, [currentQuestionIndex, quiz.questions.length]);\r\n\r\n  // Handle navigation\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleQuestionSelect = (index: number) => {\r\n    setCurrentQuestionIndex(index);\r\n    setViewMode(\"question\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex flex-col sm:flex-row gap-4 justify-between items-start sm:items-center\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">{quiz.title}</h2>\r\n          {quiz.description && (\r\n            <p className=\"text-muted-foreground mt-1\">{quiz.description}</p>\r\n          )}\r\n        </div>\r\n        \r\n        <Button variant=\"outline\" asChild>\r\n          <Link href={`/dashboard/teacher/quizzes/${quiz.id}/edit`}>\r\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n            Back to Quiz Editor\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex flex-col\">\r\n              <CardTitle>Preview Mode</CardTitle>\r\n              <CardDescription>\r\n                This is how students will see your quiz. Questions are displayed in their set order.\r\n              </CardDescription>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"text-sm font-medium\">Time Limit:</span>\r\n              <span className=\"px-2 py-1 rounded-md bg-slate-100 text-sm\">\r\n                {formatDuration(quiz.timeLimit * 60 * 1000)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        \r\n        <CardContent className=\"pb-6\">\r\n          <Tabs value={viewMode} onValueChange={(value) => setViewMode(value as any)}>\r\n            <div className=\"flex justify-end mb-6\">\r\n              <TabsList className=\"grid w-72 grid-cols-3\">\r\n                <TabsTrigger value=\"question\">\r\n                  <Eye className=\"h-4 w-4 mr-2\" />\r\n                  Question\r\n                </TabsTrigger>\r\n                <TabsTrigger value=\"list\">\r\n                  <List className=\"h-4 w-4 mr-2\" />\r\n                  List\r\n                </TabsTrigger>\r\n                <TabsTrigger value=\"settings\">\r\n                  <Settings className=\"h-4 w-4 mr-2\" />\r\n                  Info\r\n                </TabsTrigger>\r\n              </TabsList>\r\n            </div>\r\n            \r\n            <TabsContent value=\"question\" className=\"mt-0\">\r\n              {quiz.questions.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <h3 className=\"text-lg font-semibold\">No questions added yet</h3>\r\n                  <p className=\"text-muted-foreground mt-2\">\r\n                    Go back to the quiz editor to add questions to this quiz.\r\n                  </p>\r\n                  <Button className=\"mt-4\" asChild>\r\n                    <a href={`/dashboard/teacher/quizzes/${quiz.id}/edit`}>Add Questions</a>\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"mb-6\">\r\n                    <div className=\"flex items-center justify-between mb-2 text-sm text-muted-foreground\">\r\n                      <span>Question {currentQuestionIndex + 1} of {quiz.questions.length}</span>\r\n                      <span>{currentQuestion?.points || 0} points</span>\r\n                    </div>\r\n                    <Progress value={progress} className=\"h-2\" />\r\n                  </div>\r\n\r\n                  {currentQuestion && (\r\n                    <div className=\"mt-6\">\r\n                      <QuestionPreview question={currentQuestion} />\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"flex items-center justify-between mt-8\">\r\n                    <Button\r\n                      onClick={handlePrevious}\r\n                      disabled={currentQuestionIndex === 0}\r\n                      variant=\"outline\"\r\n                    >\r\n                      <ChevronLeft className=\"h-4 w-4 mr-2\" />\r\n                      Previous\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                      onClick={handleNext}\r\n                      disabled={currentQuestionIndex === quiz.questions.length - 1}\r\n                    >\r\n                      Next\r\n                      <ChevronRight className=\"h-4 w-4 ml-2\" />\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"list\" className=\"mt-0\">\r\n              <div className=\"grid gap-2\">\r\n                {quiz.questions.length === 0 ? (\r\n                  <div className=\"text-center py-12\">\r\n                    <h3 className=\"text-lg font-semibold\">No questions added yet</h3>\r\n                    <p className=\"text-muted-foreground mt-2\">\r\n                      Go back to the quiz editor to add questions to this quiz.\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  quiz.questions.map((question, index) => (\r\n                    <div\r\n                      key={question.id}\r\n                      className=\"flex items-center justify-between p-3 rounded-md border hover:bg-slate-50 cursor-pointer\"\r\n                      onClick={() => handleQuestionSelect(index)}\r\n                    >\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-primary/10 text-primary font-medium mr-3\">\r\n                          {index + 1}\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"font-medium line-clamp-1\">\r\n                            {question.content.replace(/<[^>]*>/g, '').substring(0, 60)}\r\n                            {question.content.length > 60 ? \"...\" : \"\"}\r\n                          </span>\r\n                          <span className=\"text-xs text-muted-foreground\">{question.type} • {question.points} points</span>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {index === currentQuestionIndex && (\r\n                        <Check className=\"h-5 w-5 text-primary\" />\r\n                      )}\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"settings\" className=\"mt-0\">\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-2\">Quiz Settings</h3>\r\n                  <div className=\"grid gap-3\">\r\n                    <div className=\"grid grid-cols-2 gap-x-4 gap-y-2 text-sm\">\r\n                      <span className=\"text-muted-foreground\">Time Limit:</span>\r\n                      <span>{formatDuration(quiz.timeLimit * 60 * 1000)}</span>\r\n                      \r\n                      <span className=\"text-muted-foreground\">Total Points:</span>\r\n                      <span>{quiz.questions.reduce((sum, q) => sum + q.points, 0)} points</span>\r\n                      \r\n                      <span className=\"text-muted-foreground\">Total Questions:</span>\r\n                      <span>{quiz.questions.length} questions</span>\r\n                      \r\n                      <span className=\"text-muted-foreground\">Shuffle Questions:</span>\r\n                      <span>{quiz.shuffleQuestions ? \"Yes\" : \"No\"}</span>\r\n                      \r\n                      <span className=\"text-muted-foreground\">Max Attempts:</span>\r\n                      <span>{quiz.maxAttempts || \"Unlimited\"}</span>\r\n                      \r\n                      <span className=\"text-muted-foreground\">Passing Score:</span>\r\n                      <span>{quiz.passingScore ? `${quiz.passingScore}%` : \"None\"}</span>\r\n                      \r\n                      <span className=\"text-muted-foreground\">Show Results:</span>\r\n                      <span>{quiz.showResults ? \"Yes\" : \"No\"}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-2\">Question Types</h3>\r\n                  <div className=\"grid grid-cols-2 gap-2\">\r\n                    {Object.values(QuestionType).map(type => {\r\n                      const count = quiz.questions.filter(q => q.type === type).length;\r\n                      return count > 0 ? (\r\n                        <div key={type} className=\"flex items-center gap-2 p-2 border rounded-md\">\r\n                          <div className=\"h-4 w-4 rounded-full bg-primary/20\"></div>\r\n                          <span>{type}: {count}</span>\r\n                        </div>\r\n                      ) : null;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </CardContent>\r\n        \r\n        <CardFooter className=\"border-t pt-6 flex justify-between\">\r\n          <Button variant=\"outline\" asChild>\r\n            <a href={`/dashboard/teacher/quizzes/${quiz.id}/edit`}>\r\n              Back to Editor\r\n            </a>\r\n          </Button>\r\n          \r\n          <Button asChild disabled={!quiz.isPublished}>\r\n            <a href={quiz.isPublished ? `/dashboard/teacher/quizzes/${quiz.id}/results` : '#'}>\r\n              {quiz.isPublished ? \"View Results\" : \"Not Published Yet\"}\r\n            </a>\r\n          </Button>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}
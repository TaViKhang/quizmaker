{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/hooks/use-local-storage.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * Hook sử dụng localStorage để lưu trữ dữ liệu và đồng bộ giữa các tab\r\n * @param key Khóa lưu trữ trong localStorage\r\n * @param initialValue Giá trị mặc định khi chưa có dữ liệu\r\n */\r\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, (value: T | ((val: T) => T)) => void] {\r\n  // Kiểm tra xem đang ở phía client hay server\r\n  const isClient = typeof window !== 'undefined';\r\n\r\n  // State để lưu trữ giá trị của chúng ta\r\n  // Truyền vào hàm khởi tạo để useState chỉ chạy một lần\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      // Lấy từ local storage theo key\r\n      if (isClient) {\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse dữ liệu lưu trữ hoặc trả về initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      }\r\n      return initialValue;\r\n    } catch (error) {\r\n      // Nếu có lỗi, trả về initialValue\r\n      console.error(`Error reading localStorage key \"${key}\":`, error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Hàm để cập nhật cả state và localStorage\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // Cho phép value là một function như trong useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      \r\n      // Lưu state\r\n      setStoredValue(valueToStore);\r\n      \r\n      // Lưu vào localStorage\r\n      if (isClient) {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error setting localStorage key \"${key}\":`, error);\r\n    }\r\n  };\r\n\r\n  // Listen for changes to this localStorage key in other tabs\r\n  useEffect(() => {\r\n    if (!isClient) return;\r\n    \r\n    const handleStorageChange = (e: StorageEvent) => {\r\n      if (e.key === key && e.newValue) {\r\n        try {\r\n          setStoredValue(JSON.parse(e.newValue));\r\n        } catch (error) {\r\n          console.error(`Error parsing localStorage change for key \"${key}\":`, error);\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Listen for storage events\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [key, isClient]);\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage; "],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,gBAAmB,GAAW,EAAE,YAAe;;IAC7D,6CAA6C;IAC7C,MAAM,WAAW,aAAkB;IAEnC,wCAAwC;IACxC,uDAAuD;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;oCAAK;YAChD,IAAI;gBACF,gCAAgC;gBAChC,wCAAc;oBACZ,MAAM,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC;oBACzC,iDAAiD;oBACjD,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ;gBACnC;;YAEF,EAAE,OAAO,OAAO;gBACd,kCAAkC;gBAClC,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;gBAC1D,OAAO;YACT;QACF;;IAEA,2CAA2C;IAC3C,MAAM,WAAW,CAAC;QAChB,IAAI;YACF,oDAAoD;YACpD,MAAM,eACJ,iBAAiB,WAAW,MAAM,eAAe;YAEnD,YAAY;YACZ,eAAe;YAEf,uBAAuB;YACvB,wCAAc;gBACZ,OAAO,YAAY,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC;YAClD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;QAC5D;IACF;IAEA,4DAA4D;IAC5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,uCAAe;;YAAM;YAErB,MAAM;iEAAsB,CAAC;oBAC3B,IAAI,EAAE,GAAG,KAAK,OAAO,EAAE,QAAQ,EAAE;wBAC/B,IAAI;4BACF,eAAe,KAAK,KAAK,CAAC,EAAE,QAAQ;wBACtC,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,CAAC,2CAA2C,EAAE,IAAI,EAAE,CAAC,EAAE;wBACvE;oBACF;gBACF;;YAEA,4BAA4B;YAC5B,OAAO,gBAAgB,CAAC,WAAW;YACnC;6CAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;;QACrD;oCAAG;QAAC;QAAK;KAAS;IAElB,OAAO;QAAC;QAAa;KAAS;AAChC;GA7DgB;uCA+DD","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,6LAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,6LAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,6LAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface DialogProps extends DialogPrimitive.DialogProps {\n  /**\n   * If true, interaction with outside elements will be disabled and\n   * only dialog content will be accessible via keyboard navigation.\n   * @default true\n   */\n  modal?: boolean;\n}\n\nconst Dialog = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Root>,\n  DialogProps\n>(({ modal = true, ...props }, ref) => (\n  <DialogPrimitive.Root modal={modal} {...props} />\n))\nDialog.displayName = DialogPrimitive.Root.displayName\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 backdrop-blur-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {\n    size?: \"default\" | \"sm\" | \"lg\" | \"xl\" | \"full\";\n    hideClose?: boolean;\n    closeLabel?: string;\n  }\n>(({ className, children, size = \"default\", hideClose = false, closeLabel = \"Close\", ...props }, ref) => {\n  // Ref cho nút close để focus vào đó khi dialog mở\n  const closeButtonRef = React.useRef<HTMLButtonElement>(null);\n  \n  // Xử lý focus khi mở dialog\n  const handleOpenAutoFocus = React.useCallback((event: Event) => {\n    // Ngăn chặn hành vi focus mặc định\n    event.preventDefault();\n    \n    // Focus vào nút đóng dialog (hoặc có thể là phần tử khác trong dialog)\n    if (!hideClose && closeButtonRef.current) {\n      setTimeout(() => {\n        closeButtonRef.current?.focus();\n      }, 0);\n    }\n  }, [hideClose]);\n\n  // Xử lý focus khi đóng dialog\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Ngăn chặn hành vi focus trả về mặc định\n    event.preventDefault();\n  }, []);\n\n  return (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full translate-x-[-50%] translate-y-[-50%] gap-5 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\",\n        size === \"sm\" && \"max-w-sm rounded-lg\",\n        size === \"default\" && \"max-w-md rounded-lg\", \n        size === \"lg\" && \"max-w-xl rounded-lg\",\n        size === \"xl\" && \"max-w-3xl rounded-lg\",\n        size === \"full\" && \"max-w-[calc(100%-2rem)] h-[calc(100%-2rem)] rounded-lg\",\n        className\n      )}\n      onOpenAutoFocus={handleOpenAutoFocus}\n      onCloseAutoFocus={handleCloseAutoFocus}\n      {...props}\n    >\n      {children}\n      {!hideClose && (\n        <DialogPrimitive.Close\n          ref={closeButtonRef}\n          className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n          aria-label={closeLabel}\n        >\n        <X className=\"h-4 w-4\" />\n          <span className=\"sr-only\">{closeLabel}</span>\n      </DialogPrimitive.Close>\n      )}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n  );\n})\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {\n    variant?: \"default\" | \"info\" | \"success\" | \"warning\" | \"destructive\"\n  }\n>(({ className, variant = \"default\", sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md px-3 py-1.5 text-xs font-medium shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        variant === \"default\" && \"bg-primary text-primary-foreground\",\n        variant === \"info\" && \"bg-info text-info-foreground\",\n        variant === \"success\" && \"bg-success text-success-foreground\",\n        variant === \"warning\" && \"bg-warning text-warning-foreground\",\n        variant === \"destructive\" && \"bg-destructive text-destructive-foreground\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipProvider\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,sKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAKpC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC/D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wWACA,YAAY,aAAa,sCACzB,YAAY,UAAU,gCACtB,YAAY,aAAa,sCACzB,YAAY,aAAa,sCACzB,YAAY,iBAAiB,8CAC7B;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/multiple-choice-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from \"react\";\nimport { Question } from \"./components/question-renderer\";\n\ninterface MultipleChoiceQuestionProps {\n  question: Question;\n  selectedOptions: string[];\n  onChange: (selection: string[]) => void;\n}\n\nexport function MultipleChoiceQuestion({ \n  question, \n  selectedOptions = [],\n  onChange \n}: MultipleChoiceQuestionProps) {\n  // Extract metadata and options\n  const { options = [] } = question;\n  const allowMultiple = question.metadata?.allowMultiple || false;\n  \n  // For single selection\n  const handleRadioChange = (optionId: string) => {\n    onChange([optionId]);\n  };\n  \n  // For multiple selection\n  const handleCheckboxChange = (optionId: string) => {\n    if (allowMultiple) {\n      const newSelection = selectedOptions.includes(optionId)\n        ? selectedOptions.filter(id => id !== optionId)\n        : [...selectedOptions, optionId];\n        \n      onChange(newSelection);\n    } else {\n      // Ensure single selection even with checkbox\n      onChange([optionId]);\n    }\n  };\n  \n  // Sort options by order\n  const sortedOptions = [...(options || [])].sort((a, b) => a.order - b.order);\n  \n  if (allowMultiple) {\n    // Multiple selection version\n    return (\n      <div className=\"space-y-3\">\n        {sortedOptions.map(option => (\n          <div key={option.id} className=\"flex items-start space-x-2\">\n            <input \n              type=\"checkbox\" \n              id={option.id} \n              name=\"answer\"\n              value={option.id}\n              checked={selectedOptions.includes(option.id)}\n              onChange={() => handleCheckboxChange(option.id)}\n              className=\"mt-1\"\n            />\n            <label \n              htmlFor={option.id} \n              className=\"flex-1 cursor-pointer\"\n              dangerouslySetInnerHTML={{ __html: option.content || '' }}\n            />\n          </div>\n        ))}\n        <p className=\"text-sm text-muted-foreground mt-2\">\n          Select all that apply.\n        </p>\n      </div>\n    );\n  }\n  \n  // Single selection version\n  return (\n    <div className=\"space-y-3\">\n      {sortedOptions.map(option => (\n        <div key={option.id} className=\"flex items-start space-x-2\">\n          <input \n            type=\"radio\" \n            id={option.id} \n            name=\"answer\"\n            value={option.id}\n            checked={selectedOptions.length > 0 && selectedOptions[0] === option.id}\n            onChange={() => handleRadioChange(option.id)}\n            className=\"mt-1\"\n          />\n          <label \n            htmlFor={option.id} \n            className=\"flex-1 cursor-pointer\"\n            dangerouslySetInnerHTML={{ __html: option.content || '' }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;AAWO,SAAS,uBAAuB,EACrC,QAAQ,EACR,kBAAkB,EAAE,EACpB,QAAQ,EACoB;IAC5B,+BAA+B;IAC/B,MAAM,EAAE,UAAU,EAAE,EAAE,GAAG;IACzB,MAAM,gBAAgB,SAAS,QAAQ,EAAE,iBAAiB;IAE1D,uBAAuB;IACvB,MAAM,oBAAoB,CAAC;QACzB,SAAS;YAAC;SAAS;IACrB;IAEA,yBAAyB;IACzB,MAAM,uBAAuB,CAAC;QAC5B,IAAI,eAAe;YACjB,MAAM,eAAe,gBAAgB,QAAQ,CAAC,YAC1C,gBAAgB,MAAM,CAAC,CAAA,KAAM,OAAO,YACpC;mBAAI;gBAAiB;aAAS;YAElC,SAAS;QACX,OAAO;YACL,6CAA6C;YAC7C,SAAS;gBAAC;aAAS;QACrB;IACF;IAEA,wBAAwB;IACxB,MAAM,gBAAgB;WAAK,WAAW,EAAE;KAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IAE3E,IAAI,eAAe;QACjB,6BAA6B;QAC7B,qBACE,6LAAC;YAAI,WAAU;;gBACZ,cAAc,GAAG,CAAC,CAAA,uBACjB,6LAAC;wBAAoB,WAAU;;0CAC7B,6LAAC;gCACC,MAAK;gCACL,IAAI,OAAO,EAAE;gCACb,MAAK;gCACL,OAAO,OAAO,EAAE;gCAChB,SAAS,gBAAgB,QAAQ,CAAC,OAAO,EAAE;gCAC3C,UAAU,IAAM,qBAAqB,OAAO,EAAE;gCAC9C,WAAU;;;;;;0CAEZ,6LAAC;gCACC,SAAS,OAAO,EAAE;gCAClB,WAAU;gCACV,yBAAyB;oCAAE,QAAQ,OAAO,OAAO,IAAI;gCAAG;;;;;;;uBAblD,OAAO,EAAE;;;;;8BAiBrB,6LAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;IAKxD;IAEA,2BAA2B;IAC3B,qBACE,6LAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAA,uBACjB,6LAAC;gBAAoB,WAAU;;kCAC7B,6LAAC;wBACC,MAAK;wBACL,IAAI,OAAO,EAAE;wBACb,MAAK;wBACL,OAAO,OAAO,EAAE;wBAChB,SAAS,gBAAgB,MAAM,GAAG,KAAK,eAAe,CAAC,EAAE,KAAK,OAAO,EAAE;wBACvE,UAAU,IAAM,kBAAkB,OAAO,EAAE;wBAC3C,WAAU;;;;;;kCAEZ,6LAAC;wBACC,SAAS,OAAO,EAAE;wBAClB,WAAU;wBACV,yBAAyB;4BAAE,QAAQ,OAAO,OAAO,IAAI;wBAAG;;;;;;;eAblD,OAAO,EAAE;;;;;;;;;;AAmB3B;KAnFgB","debugId":null}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/toggle.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-2 min-w-9\",\n        sm: \"h-8 px-1.5 min-w-8\",\n        lg: \"h-10 px-2.5 min-w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,mYACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,oBACzC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;;AAIb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/toggle-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAGA;AACA;;;AAPA;;;;;AASA,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EAE3C;IACA,MAAM;IACN,SAAS;AACX;AAEA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAIjC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACnD,6LAAC,8KAAA,CAAA,OAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;kBAET,cAAA,6LAAC,mBAAmB,QAAQ;YAAC,OAAO;gBAAE;gBAAS;YAAK;sBACjD;;;;;;;;;;;;AAKP,YAAY,WAAW,GAAG,8KAAA,CAAA,OAAyB,CAAC,WAAW;AAE/D,MAAM,gCAAkB,GAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,WAIrC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;;IACnD,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,qBACE,6LAAC,8KAAA,CAAA,OAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;YACb,SAAS,QAAQ,OAAO,IAAI;YAC5B,MAAM,QAAQ,IAAI,IAAI;QACxB,IACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEA,gBAAgB,WAAW,GAAG,8KAAA,CAAA,OAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/editor/rich-text-editor.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEditor, EditorContent, type Editor as TiptapEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport Placeholder from '@tiptap/extension-placeholder';\nimport Heading from '@tiptap/extension-heading';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport ListItem from '@tiptap/extension-list-item';\nimport Link from '@tiptap/extension-link';\nimport { cn } from \"@/lib/utils\";\nimport { \n  Bold, \n  Italic, \n  List, \n  ListOrdered, \n  Heading1, \n  Heading2, \n  Link2,\n  AlignLeft,\n  AlignCenter,\n  AlignRight\n} from \"lucide-react\";\nimport { Toggle } from \"../toggle\";\nimport { \n  ToggleGroup, \n  ToggleGroupItem \n} from \"../toggle-group\";\n\ninterface RichTextEditorProps {\n  content: string;\n  onChange: (html: string) => void;\n  placeholder?: string;\n  className?: string;\n  minHeight?: string;\n  rawOutput?: boolean;\n}\n\nexport function RichTextEditor({\n  content,\n  onChange,\n  placeholder = \"Enter content...\",\n  className,\n  minHeight = \"200px\",\n  rawOutput = false\n}: RichTextEditorProps) {\n  \n  const sanitizeContent = (html: string): string => {\n    if (!rawOutput) {\n      const isSimpleText = html.startsWith('<p>') && html.endsWith('</p>') &&\n        !html.includes('<p>', 1) && !html.slice(0, html.length - 4).includes('</p>') &&\n        !/<[a-z][^>]*>/i.test(html.substring(3, html.length - 4));\n        \n      if (isSimpleText) {\n        return html.substring(3, html.length - 4);\n      }\n    }\n    \n    return html;\n  };\n  \n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Placeholder.configure({\n        placeholder,\n      }),\n      Heading.configure({\n        levels: [1, 2],\n      }),\n      BulletList,\n      OrderedList,\n      ListItem,\n      Link.configure({\n        openOnClick: false,\n      }),\n    ],\n    content,\n    onUpdate: ({ editor }: { editor: TiptapEditor }) => {\n      const html = editor.getHTML();\n      onChange(sanitizeContent(html));\n    },\n    editorProps: {\n      attributes: {\n        class: 'prose dark:prose-invert prose-sm sm:prose-base prose-stone focus:outline-none max-w-none h-full',\n      },\n    },\n  });\n\n  const setLink = () => {\n    if (!editor) return;\n    \n    const previousUrl = editor.getAttributes('link').href;\n    const url = window.prompt('URL', previousUrl);\n\n    if (url === null) return;\n\n    if (url === '') {\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\n      return;\n    }\n\n    editor.chain().focus().extendMarkRange('link').setLink({ href: url }).run();\n  };\n\n  if (!editor) {\n    return null;\n  }\n\n  return (\n    <div className={cn(\"flex flex-col gap-2\", className)}>\n      <div className=\"flex flex-wrap bg-muted/50 rounded-md border p-1 gap-1\">\n        <ToggleGroup type=\"multiple\">\n          <ToggleGroupItem \n            value=\"bold\" \n            aria-label=\"Bold\" \n            size=\"sm\"\n            data-state={editor.isActive('bold') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleBold().run()}\n          >\n            <Bold className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n          <ToggleGroupItem \n            value=\"italic\" \n            aria-label=\"Italic\" \n            size=\"sm\"\n            data-state={editor.isActive('italic') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleItalic().run()}\n          >\n            <Italic className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n\n        <div className=\"w-px h-6 bg-border mx-1\" />\n\n        <ToggleGroup type=\"single\" value={editor.isActive('heading', { level: 1 }) ? 'h1' : editor.isActive('heading', { level: 2 }) ? 'h2' : 'p'}>\n          <ToggleGroupItem \n            value=\"h1\" \n            aria-label=\"Heading 1\" \n            size=\"sm\"\n            data-state={editor.isActive('heading', { level: 1 }) ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\n          >\n            <Heading1 className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n          <ToggleGroupItem \n            value=\"h2\" \n            aria-label=\"Heading 2\" \n            size=\"sm\"\n            data-state={editor.isActive('heading', { level: 2 }) ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\n          >\n            <Heading2 className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n\n        <div className=\"w-px h-6 bg-border mx-1\" />\n\n        <ToggleGroup type=\"multiple\">\n          <ToggleGroupItem \n            value=\"bulletList\" \n            aria-label=\"Bullet List\" \n            size=\"sm\"\n            data-state={editor.isActive('bulletList') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleBulletList().run()}\n          >\n            <List className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n          <ToggleGroupItem \n            value=\"orderedList\" \n            aria-label=\"Ordered List\" \n            size=\"sm\"\n            data-state={editor.isActive('orderedList') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleOrderedList().run()}\n          >\n            <ListOrdered className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n        \n        <div className=\"w-px h-6 bg-border mx-1\" />\n        \n        <Toggle\n          size=\"sm\"\n          pressed={editor.isActive('link')}\n          onClick={setLink}\n          aria-label=\"Link\"\n        >\n          <Link2 className=\"h-4 w-4\" />\n        </Toggle>\n      </div>\n      <div \n        className={cn(\n          \"border rounded-md p-3 overflow-y-auto\",\n          minHeight ? `min-h-[${minHeight}]` : undefined\n        )}\n        style={{ minHeight }}\n      >\n        <EditorContent editor={editor} />\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/essay-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from \"react\";\nimport { RichTextEditor } from \"@/components/ui/editor/rich-text-editor\";\nimport { Question } from \"./components/question-renderer\";\n\ninterface EssayQuestionProps {\n  question: Question;\n  textAnswer: string;\n  onChange: (text: string) => void;\n}\n\nexport function EssayQuestion({ \n  question,\n  textAnswer,\n  onChange \n}: EssayQuestionProps) {\n  const [wordCount, setWordCount] = useState(0);\n  \n  // Extract metadata\n  const {\n    minWords,\n    maxWords,\n    placeholder = \"Enter your answer here...\",\n    richText = false\n  } = question.metadata || {};\n  \n  // Count words in the text\n  useEffect(() => {\n    if (textAnswer?.trim()) {\n      // Remove HTML tags for word counting if rich text\n      const plainText = richText \n        ? textAnswer.replace(/<[^>]+>/g, ' ')\n        : textAnswer;\n      \n      const words = plainText.trim().split(/\\s+/);\n      setWordCount(words.length);\n    } else {\n      setWordCount(0);\n    }\n  }, [textAnswer, richText]);\n  \n  // Handle text change\n  const handleChange = (newText: string) => {\n    onChange(newText);\n  };\n  \n  return (\n    <div className=\"space-y-2\">\n      {richText ? (\n        <RichTextEditor\n          content={textAnswer || \"\"}\n          onChange={handleChange}\n          placeholder={placeholder}\n          minHeight=\"200px\"\n          rawOutput={true}\n        />\n      ) : (\n      <textarea\n          value={textAnswer || \"\"}\n          onChange={(e) => handleChange(e.target.value)}\n        className=\"w-full min-h-[200px] p-3 border rounded\"\n        placeholder={placeholder}\n      />\n      )}\n      \n      <div className=\"flex justify-between text-sm text-muted-foreground\">\n        <div>\n          {(minWords || maxWords) && (\n            <span>\n              {minWords && `Minimum words: ${minWords}. `}\n              {maxWords && `Maximum words: ${maxWords}. `}\n            </span>\n          )}\n        </div>\n        \n        <div>\n          <span className={`\n            ${minWords && wordCount < minWords ? 'text-destructive' : ''}\n            ${maxWords && wordCount > maxWords ? 'text-destructive' : ''}\n          `}>\n            Word count: {wordCount}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS,cAAc,EAC5B,QAAQ,EACR,UAAU,EACV,QAAQ,EACW;;IACnB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,mBAAmB;IACnB,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,cAAc,2BAA2B,EACzC,WAAW,KAAK,EACjB,GAAG,SAAS,QAAQ,IAAI,CAAC;IAE1B,0BAA0B;IAC1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,YAAY,QAAQ;gBACtB,kDAAkD;gBAClD,MAAM,YAAY,WACd,WAAW,OAAO,CAAC,YAAY,OAC/B;gBAEJ,MAAM,QAAQ,UAAU,IAAI,GAAG,KAAK,CAAC;gBACrC,aAAa,MAAM,MAAM;YAC3B,OAAO;gBACL,aAAa;YACf;QACF;kCAAG;QAAC;QAAY;KAAS;IAEzB,qBAAqB;IACrB,MAAM,eAAe,CAAC;QACpB,SAAS;IACX;IAEA,qBACE,6LAAC;QAAI,WAAU;;YACZ,yBACC,6LAAC,wJAAA,CAAA,iBAAc;gBACb,SAAS,cAAc;gBACvB,UAAU;gBACV,aAAa;gBACb,WAAU;gBACV,WAAW;;;;;qCAGf,6LAAC;gBACG,OAAO,cAAc;gBACrB,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gBAC9C,WAAU;gBACV,aAAa;;;;;;0BAIf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCACE,CAAC,YAAY,QAAQ,mBACpB,6LAAC;;gCACE,YAAY,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC;gCAC1C,YAAY,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC;;;;;;;;;;;;kCAKjD,6LAAC;kCACC,cAAA,6LAAC;4BAAK,WAAW,CAAC;YAChB,EAAE,YAAY,YAAY,WAAW,qBAAqB,GAAG;YAC7D,EAAE,YAAY,YAAY,WAAW,qBAAqB,GAAG;UAC/D,CAAC;;gCAAE;gCACY;;;;;;;;;;;;;;;;;;;;;;;;AAMzB;GA3EgB;KAAA","debugId":null}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/fill-blank-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from \"react\";\nimport { Question } from \"./components/question-renderer\";\n\ninterface FillBlankQuestionProps {\n  question: Question;\n  jsonData: Record<string, any> | null;\n  onChange: (blanks: Record<string, string>) => void;\n}\n\nexport function FillBlankQuestion({ \n  question, \n  jsonData, \n  onChange \n}: FillBlankQuestionProps) {\n  const [blanks, setBlanks] = useState<Record<string, string>>(jsonData || {});\n  \n  // Extract data from question\n  const { options = [] } = question;\n  const metadata = typeof question.metadata === 'string' \n    ? JSON.parse(question.metadata) \n    : question.metadata || {};\n  \n  const text = metadata.text || '';\n  const caseSensitive = metadata.caseSensitive || false;\n  const blankPositions = metadata.blankPositions || [];\n  \n  // Parse the text to identify blanks\n  const renderText = () => {\n    if (!text) {\n      console.warn(\"Missing text content in fill-blank question metadata\");\n      return [{type: 'text', content: 'Error: Missing question content'}];\n    }\n    \n    // Using a regular expression to identify blanks in the format [blank_1], [blank_2], etc.\n    const blankRegex = /\\[blank_(\\d+)\\]/g;\n    \n    // Split the text at each blank and create an array of segments\n    const segments = [];\n    let lastIndex = 0;\n    let match;\n    \n    while ((match = blankRegex.exec(text)) !== null) {\n      // Add the text before the blank\n      segments.push({\n        type: 'text',\n        content: text.substring(lastIndex, match.index)\n      });\n      \n      // Add the blank\n      segments.push({\n        type: 'blank',\n        position: match[1], // Position ID from the regex\n        placeholder: `Blank ${match[1]}`\n      });\n      \n      lastIndex = match.index + match[0].length;\n    }\n    \n    // Add the remaining text\n    if (lastIndex < text.length) {\n      segments.push({\n        type: 'text',\n        content: text.substring(lastIndex)\n      });\n    }\n    \n    // If no blanks were found using regex, use the blankPositions from metadata\n    if (segments.length === 0 || (segments.length === 1 && segments[0].type === 'text')) {\n      console.warn(\"No blanks found in text using regex, using blankPositions from metadata\");\n      \n      if (blankPositions && blankPositions.length > 0) {\n        // Create simplified text with blanks\n        const newSegments = [];\n        let currentPos = 0;\n        \n        blankPositions.sort((a: any, b: any) => a.position - b.position).forEach((bp: any) => {\n          // Add text before blank\n          if (bp.position > currentPos) {\n            newSegments.push({\n              type: 'text',\n              content: \"... \"\n            });\n          }\n          \n          // Add blank\n          newSegments.push({\n            type: 'blank',\n            position: bp.id || bp.position,\n            placeholder: `Blank ${bp.position}`\n          });\n          \n          currentPos = bp.position + 1;\n        });\n        \n        // Add final text\n        newSegments.push({\n          type: 'text',\n          content: \" ...\"\n        });\n        \n        return newSegments;\n      }\n    }\n    \n    return segments;\n  };\n  \n  // Handle input change for a blank\n  const handleBlankChange = (position: string, value: string) => {\n    const updatedBlanks = {\n      ...blanks,\n      [position]: value,\n    };\n    \n    setBlanks(updatedBlanks);\n    onChange(updatedBlanks);\n  };\n  \n  // Update blanks when jsonData changes\n  useEffect(() => {\n    if (jsonData) {\n      setBlanks(jsonData);\n    }\n  }, [jsonData]);\n  \n  // Render the text with blanks\n  const segments = renderText();\n  \n  return (\n    <div className=\"space-y-4\">\n      <p className=\"mb-2\">Fill in each blank with the correct answer:</p>\n      \n      <div className=\"p-4 bg-muted rounded-md leading-relaxed\">\n        {segments.map((segment, index) => {\n          if (segment.type === 'text') {\n            return (\n              <span \n                key={index} \n                dangerouslySetInnerHTML={{ __html: segment.content || '' }} \n              />\n            );\n          } else {\n            const position = segment.position as string;\n            return (\n              <input\n                key={index}\n                type=\"text\"\n                value={blanks[position] || ''}\n                onChange={(e) => handleBlankChange(position, e.target.value)}\n                className=\"inline-block mx-1 p-1 border rounded w-32 bg-white dark:bg-gray-800\"\n                placeholder={segment.placeholder}\n                aria-label={`Answer for blank ${position}`}\n              />\n            );\n          }\n        })}\n      </div>\n      \n      {caseSensitive && (\n        <p className=\"mt-2 text-sm text-muted-foreground\">\n          Note: Answers are case-sensitive.\n        </p>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1507, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/matching-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from \"react\";\nimport { Question } from \"./components/question-renderer\";\n\ninterface MatchingQuestionProps {\n  question: Question;\n  jsonData: Record<string, string> | null;\n  onChange: (jsonData: Record<string, string>) => void;\n}\n\nexport function MatchingQuestion({ \n  question, \n  jsonData, \n  onChange \n}: MatchingQuestionProps) {\n  const [matches, setMatches] = useState<Record<string, string>>(jsonData || {});\n  \n  // Extract metadata\n  const metadata = typeof question.metadata === 'string' \n    ? JSON.parse(question.metadata) \n    : question.metadata || {};\n\n  // Get options from question or metadata\n  const options = question.options || [];\n  \n  // If options are empty but we have leftGroup/rightGroup in metadata\n  const leftGroup = metadata.leftGroup || options.filter(opt => opt.group === 'left');\n  const rightGroup = metadata.rightGroup || options.filter(opt => opt.group === 'right');\n  \n  // No options at all? Create placeholder text\n  const hasValidOptions = (leftGroup?.length > 0 && rightGroup?.length > 0);\n  \n  // Sort options by order\n  const sortedLeftOptions = hasValidOptions \n    ? [...leftGroup].sort((a, b) => (a.order || 0) - (b.order || 0))\n    : [];\n  \n  const sortedRightOptions = hasValidOptions \n    ? [...rightGroup].sort((a, b) => (a.order || 0) - (b.order || 0))\n    : [];\n  \n  // Handle selection change\n  const handleChange = (leftOptionId: string, rightOptionId: string) => {\n    const updatedMatches = {\n      ...matches,\n      [leftOptionId]: rightOptionId,\n    };\n    \n    setMatches(updatedMatches);\n    onChange(updatedMatches);\n  };\n  \n  // Update matches when jsonData changes\n  useEffect(() => {\n    if (jsonData) {\n      setMatches(jsonData);\n    }\n  }, [jsonData]);\n  \n  // If we don't have valid matching options\n  if (!hasValidOptions) {\n    return (\n      <div className=\"p-4 border rounded-md bg-muted\">\n        <p className=\"text-center\">This matching question is not properly configured.</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"space-y-6\">\n      {sortedLeftOptions.map(leftOption => (\n        <div key={leftOption.id} className=\"flex flex-col sm:flex-row items-start sm:items-center gap-3\">\n          <div \n            className=\"font-medium min-w-[200px] p-2 bg-muted rounded-md\" \n            dangerouslySetInnerHTML={{ __html: leftOption.content }} \n          />\n          \n          <div className=\"flex items-center\">\n            <span className=\"hidden sm:inline\">→</span>\n          </div>\n          \n          <select\n            value={matches[leftOption.id] || ''}\n            onChange={(e) => handleChange(leftOption.id, e.target.value)}\n            className=\"w-full sm:w-auto p-2 border rounded\"\n          >\n            <option value=\"\">Select a match</option>\n            {sortedRightOptions.map(rightOption => (\n              <option key={rightOption.id} value={rightOption.id}>\n                {rightOption.content}\n              </option>\n            ))}\n          </select>\n        </div>\n      ))}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAWO,SAAS,iBAAiB,EAC/B,QAAQ,EACR,QAAQ,EACR,QAAQ,EACc;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B,YAAY,CAAC;IAE5E,mBAAmB;IACnB,MAAM,WAAW,OAAO,SAAS,QAAQ,KAAK,WAC1C,KAAK,KAAK,CAAC,SAAS,QAAQ,IAC5B,SAAS,QAAQ,IAAI,CAAC;IAE1B,wCAAwC;IACxC,MAAM,UAAU,SAAS,OAAO,IAAI,EAAE;IAEtC,oEAAoE;IACpE,MAAM,YAAY,SAAS,SAAS,IAAI,QAAQ,MAAM,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK;IAC5E,MAAM,aAAa,SAAS,UAAU,IAAI,QAAQ,MAAM,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK;IAE9E,6CAA6C;IAC7C,MAAM,kBAAmB,WAAW,SAAS,KAAK,YAAY,SAAS;IAEvE,wBAAwB;IACxB,MAAM,oBAAoB,kBACtB;WAAI;KAAU,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,KAC5D,EAAE;IAEN,MAAM,qBAAqB,kBACvB;WAAI;KAAW,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,KAC7D,EAAE;IAEN,0BAA0B;IAC1B,MAAM,eAAe,CAAC,cAAsB;QAC1C,MAAM,iBAAiB;YACrB,GAAG,OAAO;YACV,CAAC,aAAa,EAAE;QAClB;QAEA,WAAW;QACX,SAAS;IACX;IAEA,uCAAuC;IACvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,UAAU;gBACZ,WAAW;YACb;QACF;qCAAG;QAAC;KAAS;IAEb,0CAA0C;IAC1C,IAAI,CAAC,iBAAiB;QACpB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;IAGjC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,kBAAkB,GAAG,CAAC,CAAA,2BACrB,6LAAC;gBAAwB,WAAU;;kCACjC,6LAAC;wBACC,WAAU;wBACV,yBAAyB;4BAAE,QAAQ,WAAW,OAAO;wBAAC;;;;;;kCAGxD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAK,WAAU;sCAAmB;;;;;;;;;;;kCAGrC,6LAAC;wBACC,OAAO,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI;wBACjC,UAAU,CAAC,IAAM,aAAa,WAAW,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK;wBAC3D,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,mBAAmB,GAAG,CAAC,CAAA,4BACtB,6LAAC;oCAA4B,OAAO,YAAY,EAAE;8CAC/C,YAAY,OAAO;mCADT,YAAY,EAAE;;;;;;;;;;;;eAjBvB,WAAW,EAAE;;;;;;;;;;AA0B/B;GAvFgB;KAAA","debugId":null}},
    {"offset": {"line": 1654, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/code-question.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Question } from \"./components/question-renderer\";\n\ninterface CodeQuestionProps {\n  question: Question;\n  textAnswer: string;\n  onChange: (code: string) => void;\n}\n\nexport function CodeQuestion({\n  question,\n  textAnswer,\n  onChange\n}: CodeQuestionProps) {\n  // Extract metadata\n  const {\n    language = 'javascript',\n    placeholder = '// Write your code here...',\n    initialCode = ''\n  } = question.metadata || {};\n  \n  const [code, setCode] = useState(textAnswer || initialCode || '');\n  \n  // Update code when textAnswer changes from parent\n  useEffect(() => {\n    if (textAnswer !== undefined && textAnswer !== code) {\n      setCode(textAnswer);\n    }\n  }, [textAnswer]);\n\n  // Handle text change\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newCode = e.target.value;\n    setCode(newCode);\n    onChange(newCode);\n  };\n\n  // Get syntax highlighting className based on language\n  const getLanguageClass = () => {\n    const supportedLanguages = [\n      'javascript', 'js', 'typescript', 'ts', 'python', 'py', \n      'java', 'c', 'cpp', 'csharp', 'go', 'rust', 'php', 'ruby'\n    ];\n    \n    const lang = language?.toLowerCase() || 'javascript';\n    return supportedLanguages.includes(lang) ? `language-${lang}` : 'language-javascript';\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"text-sm font-medium\">\n          {language && <span className=\"px-2 py-1 bg-muted rounded text-muted-foreground\">{language}</span>}\n        </div>\n      </div>\n      \n      <div className=\"relative border rounded-md\">\n        <textarea\n          value={code}\n          onChange={handleChange}\n          className=\"w-full min-h-[300px] p-4 font-mono text-sm bg-slate-950 text-slate-50 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n          placeholder={placeholder}\n          spellCheck={false}\n          autoCapitalize=\"none\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n        />\n      </div>\n      \n      <div className=\"flex justify-between text-xs text-muted-foreground mt-2\">\n        <div>\n          <span>Lines: {code.split('\\n').length}</span>\n        </div>\n        <div>\n          <span>Characters: {code.length}</span>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAWO,SAAS,aAAa,EAC3B,QAAQ,EACR,UAAU,EACV,QAAQ,EACU;;IAClB,mBAAmB;IACnB,MAAM,EACJ,WAAW,YAAY,EACvB,cAAc,4BAA4B,EAC1C,cAAc,EAAE,EACjB,GAAG,SAAS,QAAQ,IAAI,CAAC;IAE1B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,eAAe;IAE9D,kDAAkD;IAClD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,eAAe,aAAa,eAAe,MAAM;gBACnD,QAAQ;YACV;QACF;iCAAG;QAAC;KAAW;IAEf,qBAAqB;IACrB,MAAM,eAAe,CAAC;QACpB,MAAM,UAAU,EAAE,MAAM,CAAC,KAAK;QAC9B,QAAQ;QACR,SAAS;IACX;IAEA,sDAAsD;IACtD,MAAM,mBAAmB;QACvB,MAAM,qBAAqB;YACzB;YAAc;YAAM;YAAc;YAAM;YAAU;YAClD;YAAQ;YAAK;YAAO;YAAU;YAAM;YAAQ;YAAO;SACpD;QAED,MAAM,OAAO,UAAU,iBAAiB;QACxC,OAAO,mBAAmB,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,GAAG;IAClE;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACZ,0BAAY,6LAAC;wBAAK,WAAU;kCAAoD;;;;;;;;;;;;;;;;0BAIrF,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,OAAO;oBACP,UAAU;oBACV,WAAU;oBACV,aAAa;oBACb,YAAY;oBACZ,gBAAe;oBACf,cAAa;oBACb,aAAY;;;;;;;;;;;0BAIhB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCACC,cAAA,6LAAC;;gCAAK;gCAAQ,KAAK,KAAK,CAAC,MAAM,MAAM;;;;;;;;;;;;kCAEvC,6LAAC;kCACC,cAAA,6LAAC;;gCAAK;gCAAa,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;;AAKxC;GAtEgB;KAAA","debugId":null}},
    {"offset": {"line": 1812, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/question-renderer.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { MultipleChoiceQuestion } from '../multiple-choice-question';\nimport { EssayQuestion } from '../essay-question';\nimport { FillBlankQuestion } from '../fill-blank-question';\nimport { MatchingQuestion } from '../matching-question';\nimport { CodeQuestion } from '../code-question';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { HelpCircle } from 'lucide-react';\nimport { normalizeMetadata } from '@/lib/utils';\n\n// Định nghĩa kiểu câu hỏi từ schema\nexport type QuestionType = \n  | 'MULTIPLE_CHOICE' \n  | 'ESSAY' \n  | 'TRUE_FALSE' \n  | 'SHORT_ANSWER' \n  | 'MATCHING' \n  | 'FILL_BLANK' \n  | 'CODE' \n  | 'FILE_UPLOAD';\n\n// Định nghĩa interface cho câu hỏi\nexport interface Question {\n  id: string;\n  content: string;\n  type: QuestionType;\n  options?: Option[];\n  metadata?: Record<string, any> | null | string; // Có thể là string hoặc object\n  mediaType?: string;\n  mediaUrl?: string;\n  explanation?: string;\n}\n\n// Interface cho lựa chọn trong câu hỏi\nexport interface Option {\n  id: string;\n  content: string;\n  order: number;\n  isCorrect?: boolean;  // Chỉ hiện ở phía giáo viên\n  group?: string;       // For MATCHING questions\n  position?: number;    // For FILL_BLANK questions\n}\n\n// Metadata cho các loại câu hỏi khác nhau\nexport interface QuestionMetadata {\n  // Multiple choice\n  allowMultiple?: boolean;\n  shuffleOptions?: boolean;\n  \n  // Essay\n  minWords?: number;\n  maxWords?: number;\n  placeholder?: string;\n  richText?: boolean;\n  \n  // Short answer\n  caseSensitive?: boolean;\n  \n  // Fill-in-the-blank\n  text?: string;\n  blankPositions?: Array<{ id: string, position: number }>;\n  \n  // Matching\n  leftGroup?: Option[];\n  rightGroup?: Option[];\n  \n  // Code\n  language?: string;\n  initialCode?: string;\n  testCases?: string[];\n}\n\n// Interface cho câu trả lời\nexport interface Answer {\n  questionId: string;\n  selectedOptions: string[];\n  textAnswer?: string;\n  jsonData?: Record<string, any> | null;\n}\n\ninterface QuestionRendererProps {\n  question: Question;\n  answer?: Answer;\n  onAnswerChange: (answer: Answer) => void;\n}\n\n// Component chính để render câu hỏi dựa trên loại\nexport default function QuestionRenderer({\n  question,\n  answer,\n  onAnswerChange\n}: QuestionRendererProps) {\n  // Chuẩn hóa metadata\n  const [normalizedQuestion, setNormalizedQuestion] = useState<Question>({...question});\n\n  useEffect(() => {\n    // Chuẩn hóa metadata từ dạng string sang object nếu cần\n    if (question.metadata) {\n      const normalizedMetadata = normalizeMetadata(question.metadata);\n      setNormalizedQuestion({\n        ...question,\n        metadata: normalizedMetadata || null\n      });\n    } else {\n      setNormalizedQuestion({\n        ...question,\n        metadata: null\n      });\n    }\n  }, [question]);\n\n  // Khởi tạo câu trả lời trống nếu chưa có\n  const [currentAnswer, setCurrentAnswer] = useState<Answer>({\n    questionId: question.id,\n    selectedOptions: [],\n    textAnswer: '',\n    jsonData: null\n  });\n\n  // Update local answer when props change\n  useEffect(() => {\n    if (answer) {\n      setCurrentAnswer(answer);\n    } else {\n      // Reset answer when question changes and no answer exists\n      setCurrentAnswer({\n        questionId: question.id,\n        selectedOptions: [],\n        textAnswer: '',\n        jsonData: null\n      });\n    }\n  }, [question.id, answer]);\n\n  // Handle answer change and propagate to parent\n  const handleAnswerChange = (updatedAnswer: Partial<Answer>) => {\n    const newAnswer = {\n      ...currentAnswer,\n      ...updatedAnswer\n    };\n    \n    setCurrentAnswer(newAnswer);\n    onAnswerChange(newAnswer);\n  };\n\n  // Media rendering for questions with attached media\n  const renderMedia = () => {\n    if (!normalizedQuestion.mediaUrl) return null;\n    \n    switch (normalizedQuestion.mediaType) {\n      case 'IMAGE':\n        return (\n          <div className=\"my-4\">\n            <img\n              src={normalizedQuestion.mediaUrl}\n              alt=\"Question illustration\"\n              className=\"max-w-full rounded-md\"\n            />\n          </div>\n        );\n      case 'VIDEO':\n        return (\n          <div className=\"my-4\">\n            <video\n              src={normalizedQuestion.mediaUrl}\n              controls\n              className=\"max-w-full rounded-md\"\n            />\n          </div>\n        );\n      case 'AUDIO':\n        return (\n          <div className=\"my-4\">\n            <audio\n              src={normalizedQuestion.mediaUrl}\n              controls\n              className=\"w-full\"\n            />\n          </div>\n        );\n      case 'DOCUMENT':\n        return (\n          <div className=\"my-4\">\n            <a\n              href={normalizedQuestion.mediaUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-500 hover:underline flex items-center\"\n            >\n              <HelpCircle className=\"h-4 w-4 mr-2\" />\n              Xem tài liệu đính kèm\n            </a>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Render different question types\n  const renderQuestionByType = () => {\n    switch (normalizedQuestion.type) {\n      case 'MULTIPLE_CHOICE':\n        return (\n          <MultipleChoiceQuestion\n            question={normalizedQuestion}\n            selectedOptions={currentAnswer.selectedOptions}\n            onChange={(selectedOptions) => \n              handleAnswerChange({ selectedOptions })\n            }\n          />\n        );\n      \n      case 'TRUE_FALSE':\n        // TRUE_FALSE is a special case of MULTIPLE_CHOICE\n        return (\n          <MultipleChoiceQuestion\n            question={{\n              ...normalizedQuestion,\n              type: 'MULTIPLE_CHOICE',\n              metadata: { \n                ...(normalizedQuestion.metadata as Record<string, any> || {}), \n                allowMultiple: false \n              }\n            }}\n            selectedOptions={currentAnswer.selectedOptions}\n            onChange={(selectedOptions) => \n              handleAnswerChange({ selectedOptions })\n            }\n          />\n        );\n      \n      case 'ESSAY':\n        return (\n          <EssayQuestion\n            question={normalizedQuestion}\n            textAnswer={currentAnswer.textAnswer || ''}\n            onChange={(textAnswer) => \n              handleAnswerChange({ textAnswer })\n            }\n          />\n        );\n      \n      case 'SHORT_ANSWER':\n        // SHORT_ANSWER is similar to ESSAY but with different styling and validation\n        return (\n          <EssayQuestion\n            question={{\n              ...normalizedQuestion,\n              metadata: {\n                ...(normalizedQuestion.metadata as Record<string, any> || {}),\n                maxWords: (normalizedQuestion.metadata as Record<string, any>)?.maxWords || 50,\n                richText: false\n              }\n            }}\n            textAnswer={currentAnswer.textAnswer || ''}\n            onChange={(textAnswer) => \n              handleAnswerChange({ textAnswer })\n            }\n          />\n        );\n      \n      case 'MATCHING':\n        return (\n          <MatchingQuestion\n            question={normalizedQuestion}\n            jsonData={currentAnswer.jsonData || null}\n            onChange={(jsonData) => \n              handleAnswerChange({ jsonData })\n            }\n          />\n        );\n      \n      case 'FILL_BLANK':\n        return (\n          <FillBlankQuestion\n            question={normalizedQuestion}\n            jsonData={currentAnswer.jsonData || null}\n            onChange={(jsonData) => \n              handleAnswerChange({ jsonData })\n            }\n          />\n        );\n      \n      case 'CODE':\n        return (\n          <CodeQuestion\n            question={normalizedQuestion}\n            textAnswer={currentAnswer.textAnswer || ''}\n            onChange={(textAnswer) => \n              handleAnswerChange({ textAnswer })\n            }\n          />\n        );\n      \n      default:\n        return (\n          <Alert>\n            <AlertTitle>Unsupported Question Type</AlertTitle>\n            <AlertDescription>\n              This question type is not supported.\n            </AlertDescription>\n          </Alert>\n        );\n    }\n  };\n\n  // Sanitize HTML content to handle unwanted <p> tags\n  const sanitizeContent = (html: string): string => {\n    if (!html) return '';\n    \n    // Check if content is wrapped in a single paragraph and contains no other elements\n    const isSimpleText = html.startsWith('<p>') && html.endsWith('</p>') &&\n      !html.includes('<p>', 1) && !html.slice(0, html.length - 4).includes('</p>') &&\n      !/<[a-z][^>]*>/i.test(html.substring(3, html.length - 4));\n      \n    if (isSimpleText) {\n      return html.substring(3, html.length - 4);\n    }\n    \n    return html;\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Question content */}\n      <div className=\"prose dark:prose-invert max-w-none\">\n        <div dangerouslySetInnerHTML={{ __html: sanitizeContent(normalizedQuestion.content) }} />\n      </div>\n      \n      {/* Question media */}\n      {renderMedia()}\n      \n      {/* Question-specific UI */}\n      {renderQuestionByType()}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2163, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2229, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> & {\n    variant?: \"default\" | \"muted\" | \"accent\" | \"gradient\"\n  }\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, variant = \"default\", ...props },\n    ref\n  ) => {\n    const variantClasses = {\n      default: \"bg-border\",\n      muted: \"bg-muted\",\n      accent: \"bg-accent/30\",\n      gradient: \"bg-gradient-to-r from-transparent via-border/70 to-transparent\"\n    }\n\n    return (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n          \"shrink-0\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n          variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  )\n  }\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAM/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAC3F;IAEA,MAAM,iBAAiB;QACrB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IAEA,qBACA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,YACF,gBAAgB,eAAe,mBAAmB,kBAChD,cAAc,CAAC,QAAQ,EACzB;QAED,GAAG,KAAK;;;;;;AAGb;;AAEF,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2275, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/question-navigation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useMemo } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { \r\n  Tooltip, \r\n  TooltipContent, \r\n  TooltipProvider, \r\n  TooltipTrigger \r\n} from '@/components/ui/tooltip';\r\nimport { \r\n  CheckCircle2, \r\n  Flag, \r\n  HelpCircle, \r\n  XCircle \r\n} from 'lucide-react';\r\nimport { \r\n  Question, \r\n  Answer \r\n} from './question-renderer';\r\n\r\ninterface QuestionNavigationProps {\r\n  questions: Question[];\r\n  answers: Answer[];\r\n  currentQuestionIndex: number;\r\n  flaggedQuestions: Set<string>;\r\n  onQuestionSelect: (index: number) => void;\r\n  isSubmitting: boolean;\r\n}\r\n\r\nexport default function QuestionNavigation({\r\n  questions,\r\n  answers,\r\n  currentQuestionIndex,\r\n  flaggedQuestions,\r\n  onQuestionSelect,\r\n  isSubmitting\r\n}: QuestionNavigationProps) {\r\n  const [filter, setFilter] = useState<'all' | 'answered' | 'unanswered' | 'flagged'>('all');\r\n\r\n  // Calculate question stats\r\n  const stats = useMemo(() => {\r\n    const answered = questions.filter(q => \r\n      answers.some(a => \r\n        a.questionId === q.id && \r\n        (a.selectedOptions.length > 0 || a.textAnswer || a.jsonData)\r\n      )\r\n    ).length;\r\n    \r\n    return {\r\n      total: questions.length,\r\n      answered,\r\n      unanswered: questions.length - answered,\r\n      flagged: flaggedQuestions.size\r\n    };\r\n  }, [questions, answers, flaggedQuestions]);\r\n\r\n  // Filter questions based on current filter\r\n  const filteredQuestions = useMemo(() => {\r\n    return questions.map((question, index) => {\r\n      const answer = answers.find(a => a.questionId === question.id);\r\n      const isAnswered = answer && (\r\n        answer.selectedOptions.length > 0 || \r\n        answer.textAnswer || \r\n        answer.jsonData\r\n      );\r\n      const isFlagged = flaggedQuestions.has(question.id);\r\n      \r\n      let visible = true;\r\n      if (filter === 'answered') visible = !!isAnswered;\r\n      if (filter === 'unanswered') visible = !isAnswered;\r\n      if (filter === 'flagged') visible = isFlagged;\r\n      \r\n      return { question, index, isAnswered, isFlagged, visible };\r\n    });\r\n  }, [questions, answers, filter, flaggedQuestions]);\r\n\r\n  return (\r\n    <Card className=\"h-full\">\r\n      <CardHeader className=\"pb-2\">\r\n        <CardTitle className=\"text-lg flex justify-between items-center\">\r\n          <span>Câu hỏi</span>\r\n          <div className=\"flex items-center gap-2 text-sm\">\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-1 text-emerald-600\">\r\n                    <CheckCircle2 className=\"h-4 w-4\" />\r\n                    <span>{stats.answered}</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  Đã trả lời\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            \r\n            <Separator orientation=\"vertical\" className=\"h-4 mx-1\" />\r\n            \r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-1 text-slate-500\">\r\n                    <XCircle className=\"h-4 w-4\" />\r\n                    <span>{stats.unanswered}</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  Chưa trả lời\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            \r\n            <Separator orientation=\"vertical\" className=\"h-4 mx-1\" />\r\n            \r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <div className=\"flex items-center gap-1 text-yellow-500\">\r\n                    <Flag className=\"h-4 w-4\" />\r\n                    <span>{stats.flagged}</span>\r\n                  </div>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  Đã đánh dấu\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      \r\n      <CardContent className=\"space-y-4\">\r\n        {/* Filter tabs */}\r\n        <Tabs defaultValue=\"all\" value={filter} onValueChange={(v) => setFilter(v as any)}>\r\n          <TabsList className=\"grid grid-cols-4 w-full\">\r\n            <TabsTrigger value=\"all\">Tất cả</TabsTrigger>\r\n            <TabsTrigger value=\"answered\">Đã làm</TabsTrigger>\r\n            <TabsTrigger value=\"unanswered\">Chưa làm</TabsTrigger>\r\n            <TabsTrigger value=\"flagged\">Đánh dấu</TabsTrigger>\r\n          </TabsList>\r\n        </Tabs>\r\n        \r\n        {/* Question number grid */}\r\n        <div className=\"grid grid-cols-5 gap-2\">\r\n          {filteredQuestions.map(({ question, index, isAnswered, isFlagged, visible }) => (\r\n            visible && (\r\n              <QuestionButton\r\n                key={question.id}\r\n                number={index + 1}\r\n                isActive={index === currentQuestionIndex}\r\n                isAnswered={!!isAnswered}\r\n                isFlagged={isFlagged}\r\n                onClick={() => onQuestionSelect(index)}\r\n                disabled={isSubmitting}\r\n              />\r\n            )\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Show message if no questions match filter */}\r\n        {filteredQuestions.filter(q => q.visible).length === 0 && (\r\n          <div className=\"text-center py-4 text-sm text-muted-foreground\">\r\n            <HelpCircle className=\"mx-auto h-5 w-5 mb-2\" />\r\n            Không có câu hỏi nào phù hợp với bộ lọc\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Individual question button component\r\ninterface QuestionButtonProps {\r\n  number: number;\r\n  isActive: boolean;\r\n  isAnswered: boolean;\r\n  isFlagged: boolean;\r\n  onClick: () => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nfunction QuestionButton({\r\n  number,\r\n  isActive,\r\n  isAnswered,\r\n  isFlagged,\r\n  onClick,\r\n  disabled\r\n}: QuestionButtonProps) {\r\n  let className = \"flex items-center justify-center h-10 rounded-md font-medium relative\";\r\n  \r\n  // Determine button styling based on state\r\n  if (isActive) {\r\n    className += \" bg-primary text-primary-foreground\";\r\n  } else if (isAnswered) {\r\n    className += \" bg-emerald-100 border border-emerald-500 text-emerald-700\";\r\n  } else {\r\n    className += \" bg-slate-100 border border-slate-300 text-slate-700\";\r\n  }\r\n  \r\n  if (disabled) {\r\n    className += \" opacity-50 cursor-not-allowed\";\r\n  } else {\r\n    className += \" hover:bg-slate-200 cursor-pointer\";\r\n  }\r\n  \r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>\r\n          <div \r\n            className={className}\r\n            onClick={disabled ? undefined : onClick}\r\n          >\r\n            {number}\r\n            \r\n            {/* Flag indicator */}\r\n            {isFlagged && (\r\n              <div className=\"absolute -top-1 -right-1\">\r\n                <Flag className=\"h-3 w-3 text-yellow-500 fill-yellow-500\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </TooltipTrigger>\r\n        <TooltipContent>\r\n          <div className=\"text-sm\">\r\n            Câu {number}\r\n            {isAnswered ? ' - Đã trả lời' : ' - Chưa trả lời'}\r\n            {isFlagged && ' - Đã đánh dấu'}\r\n          </div>\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2752, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/time-display.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Clock, AlertTriangle } from 'lucide-react';\r\n\r\ninterface TimeDisplayProps {\r\n  remainingTime: number | null;\r\n  isSubmitting: boolean;\r\n}\r\n\r\nexport default function TimeDisplay({ \r\n  remainingTime,\r\n  isSubmitting\r\n}: TimeDisplayProps) {\r\n  // Format time as HH:MM:SS\r\n  const formatTime = (seconds: number | null): string => {\r\n    if (seconds === null) return '--:--:--';\r\n    \r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    \r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Get appropriate styling for time display\r\n  const getTimeStyle = (): string => {\r\n    if (remainingTime === null) return 'text-slate-500';\r\n    if (isSubmitting) return 'text-slate-500';\r\n    \r\n    // Red when less than 5 minutes\r\n    if (remainingTime < 300) return 'text-red-500';\r\n    \r\n    // Orange when less than 10 minutes\r\n    if (remainingTime < 600) return 'text-orange-500';\r\n    \r\n    return 'text-slate-700';\r\n  };\r\n  \r\n  // Render clock icon with appropriate color\r\n  const renderClockIcon = () => {\r\n    if (remainingTime === null) return <Clock className=\"h-5 w-5 text-slate-500\" />;\r\n    if (isSubmitting) return <Clock className=\"h-5 w-5 text-slate-500\" />;\r\n    \r\n    if (remainingTime < 300) {\r\n      return <AlertTriangle className=\"h-5 w-5 text-red-500\" />;\r\n    }\r\n    \r\n    if (remainingTime < 600) {\r\n      return <Clock className=\"h-5 w-5 text-orange-500\" />;\r\n    }\r\n    \r\n    return <Clock className=\"h-5 w-5 text-slate-700\" />;\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"flex items-center gap-2 px-3 py-2 bg-slate-50 border\">\r\n      {renderClockIcon()}\r\n      <span className={`font-mono font-medium ${getTimeStyle()}`}>\r\n        {formatTime(remainingTime)}\r\n      </span>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAJA;;;;AAWe,SAAS,YAAY,EAClC,aAAa,EACb,YAAY,EACK;IACjB,0BAA0B;IAC1B,MAAM,aAAa,CAAC;QAClB,IAAI,YAAY,MAAM,OAAO;QAE7B,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;QACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;QAC9C,MAAM,OAAO,UAAU;QAEvB,OAAO,GAAG,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IAC1H;IAEA,2CAA2C;IAC3C,MAAM,eAAe;QACnB,IAAI,kBAAkB,MAAM,OAAO;QACnC,IAAI,cAAc,OAAO;QAEzB,+BAA+B;QAC/B,IAAI,gBAAgB,KAAK,OAAO;QAEhC,mCAAmC;QACnC,IAAI,gBAAgB,KAAK,OAAO;QAEhC,OAAO;IACT;IAEA,2CAA2C;IAC3C,MAAM,kBAAkB;QACtB,IAAI,kBAAkB,MAAM,qBAAO,6LAAC,uMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;QACpD,IAAI,cAAc,qBAAO,6LAAC,uMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;QAE1C,IAAI,gBAAgB,KAAK;YACvB,qBAAO,6LAAC,2NAAA,CAAA,gBAAa;gBAAC,WAAU;;;;;;QAClC;QAEA,IAAI,gBAAgB,KAAK;YACvB,qBAAO,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;QAC1B;QAEA,qBAAO,6LAAC,uMAAA,CAAA,QAAK;YAAC,WAAU;;;;;;IAC1B;IAEA,qBACE,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;YACb;0BACD,6LAAC;gBAAK,WAAW,CAAC,sBAAsB,EAAE,gBAAgB;0BACvD,WAAW;;;;;;;;;;;;AAIpB;KArDwB","debugId":null}},
    {"offset": {"line": 2855, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/offline-indicator.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Wifi, WifiOff } from 'lucide-react';\n\ninterface OfflineIndicatorProps {\n  lastSavedTimestamp: Date | null;\n}\n\nexport default function OfflineIndicator({ lastSavedTimestamp }: OfflineIndicatorProps) {\n  // Format time for display\n  const formatTime = (date: Date): string => {\n    return date.toLocaleTimeString(undefined, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  return (\n    <Alert className=\"border-yellow-500 bg-yellow-50\">\n      <WifiOff className=\"h-4 w-4 text-yellow-600\" />\n      <AlertTitle className=\"text-yellow-800\">Mất kết nối internet</AlertTitle>\n      <AlertDescription className=\"text-yellow-700\">\n        Bạn đang ở chế độ ngoại tuyến. Câu trả lời của bạn đang được lưu trên thiết bị này và sẽ được\n        đồng bộ khi bạn kết nối lại.\n        {lastSavedTimestamp && (\n          <div className=\"mt-1 text-sm\">\n            Lần lưu gần nhất: {formatTime(lastSavedTimestamp)}\n          </div>\n        )}\n      </AlertDescription>\n    </Alert>\n  );\n} "],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAUe,SAAS,iBAAiB,EAAE,kBAAkB,EAAyB;IACpF,0BAA0B;IAC1B,MAAM,aAAa,CAAC;QAClB,OAAO,KAAK,kBAAkB,CAAC,WAAW;YACxC,MAAM;YACN,QAAQ;YACR,QAAQ;QACV;IACF;IAEA,qBACE,6LAAC,6HAAA,CAAA,QAAK;QAAC,WAAU;;0BACf,6LAAC,+MAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;0BACnB,6LAAC,6HAAA,CAAA,aAAU;gBAAC,WAAU;0BAAkB;;;;;;0BACxC,6LAAC,6HAAA,CAAA,mBAAgB;gBAAC,WAAU;;oBAAkB;oBAG3C,oCACC,6LAAC;wBAAI,WAAU;;4BAAe;4BACT,WAAW;;;;;;;;;;;;;;;;;;;AAM1C;KAzBwB","debugId":null}},
    {"offset": {"line": 2932, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2978, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/components/submit-confirmation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { \r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter\r\n} from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { AlertTriangle, CheckCircle2, FileCheck, Loader2 } from 'lucide-react';\r\n\r\ninterface SubmitConfirmationProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  answeredCount: number;\r\n  totalQuestions: number;\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport default function SubmitConfirmation({\r\n  open,\r\n  onOpenChange,\r\n  answeredCount,\r\n  totalQuestions,\r\n  onSubmit\r\n}: SubmitConfirmationProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Calculate completion percentage\r\n  const completionPercentage = totalQuestions ? Math.round((answeredCount / totalQuestions) * 100) : 0;\r\n  \r\n  // Reset loading state when dialog is closed\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [open]);\r\n  \r\n  // Handle submit with loading state\r\n  const handleSubmit = () => {\r\n    setIsLoading(true);\r\n    onSubmit();\r\n  };\r\n  \r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-xl\">Xác nhận nộp bài</DialogTitle>\r\n          <DialogDescription>\r\n            Bạn có chắc muốn nộp bài làm? Sau khi nộp, bạn sẽ không thể sửa lại bài làm.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"my-4 space-y-4\">\r\n          {/* Completion progress */}\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm font-medium\">\r\n                Tiến độ làm bài: {answeredCount}/{totalQuestions} câu\r\n              </span>\r\n              <span className=\"text-sm\">{completionPercentage}%</span>\r\n            </div>\r\n            <Progress value={completionPercentage} />\r\n          </div>\r\n          \r\n          {/* Status message */}\r\n          {completionPercentage < 100 ? (\r\n            <div className=\"flex items-center gap-2 text-yellow-600 bg-yellow-50 border border-yellow-200 rounded-md p-3\">\r\n              <AlertTriangle className=\"h-5 w-5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"font-medium\">Bạn chưa hoàn thành tất cả các câu hỏi</p>\r\n                <p className=\"text-sm\">\r\n                  Còn {totalQuestions - answeredCount} câu hỏi chưa được trả lời.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex items-center gap-2 text-emerald-600 bg-emerald-50 border border-emerald-200 rounded-md p-3\">\r\n              <CheckCircle2 className=\"h-5 w-5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"font-medium\">Bạn đã hoàn thành tất cả các câu hỏi</p>\r\n                <p className=\"text-sm\">\r\n                  Tất cả {totalQuestions} câu hỏi đã được trả lời.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n          \r\n        <DialogFooter className=\"flex flex-col-reverse sm:flex-row sm:justify-between gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => onOpenChange(false)}\r\n            disabled={isLoading}\r\n          >\r\n            Quay lại làm bài\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <>\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                Đang nộp bài...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FileCheck className=\"mr-2 h-4 w-4\" />\r\n                Nộp bài\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;;;AAbA;;;;;;AAuBe,SAAS,mBAAmB,EACzC,IAAI,EACJ,YAAY,EACZ,aAAa,EACb,cAAc,EACd,QAAQ,EACgB;;IACxB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,kCAAkC;IAClC,MAAM,uBAAuB,iBAAiB,KAAK,KAAK,CAAC,AAAC,gBAAgB,iBAAkB,OAAO;IAEnG,4CAA4C;IAC5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,IAAI,CAAC,MAAM;gBACT,aAAa;YACf;QACF;uCAAG;QAAC;KAAK;IAET,mCAAmC;IACnC,MAAM,eAAe;QACnB,aAAa;QACb;IACF;IAEA,qBACE,6LAAC,8HAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,8HAAA,CAAA,gBAAa;;8BACZ,6LAAC,8HAAA,CAAA,eAAY;;sCACX,6LAAC,8HAAA,CAAA,cAAW;4BAAC,WAAU;sCAAU;;;;;;sCACjC,6LAAC,8HAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAKrB,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;;gDAAsB;gDAClB;gDAAc;gDAAE;gDAAe;;;;;;;sDAEnD,6LAAC;4CAAK,WAAU;;gDAAW;gDAAqB;;;;;;;;;;;;;8CAElD,6LAAC,gIAAA,CAAA,WAAQ;oCAAC,OAAO;;;;;;;;;;;;wBAIlB,uBAAuB,oBACtB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,2NAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;8CACzB,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAc;;;;;;sDAC3B,6LAAC;4CAAE,WAAU;;gDAAU;gDAChB,iBAAiB;gDAAc;;;;;;;;;;;;;;;;;;iDAK1C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,6NAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;8CACxB,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAc;;;;;;sDAC3B,6LAAC;4CAAE,WAAU;;gDAAU;gDACb;gDAAe;;;;;;;;;;;;;;;;;;;;;;;;;8BAOjC,6LAAC,8HAAA,CAAA,eAAY;oBAAC,WAAU;;sCACtB,6LAAC,8HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,SAAS,IAAM,aAAa;4BAC5B,UAAU;sCACX;;;;;;sCAGD,6LAAC,8HAAA,CAAA,SAAM;4BACL,SAAS;4BACT,UAAU;sCAET,0BACC;;kDACE,6LAAC,+MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;oCAA8B;;6DAInD;;kDACE,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;AAStD;GAnGwB;KAAA","debugId":null}},
    {"offset": {"line": 3267, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/quiz-take.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useLocalStorage } from '@/hooks/use-local-storage';\nimport { useOnlineStatus } from '@/hooks/use-online-status';\nimport { useToast } from '@/components/ui/use-toast';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  AlertCircle, \n  CheckCircle2, \n  Clock, \n  Flag, \n  HelpCircle, \n  Loader2, \n  XCircle \n} from 'lucide-react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle, \n  DialogDescription, \n  DialogFooter \n} from '@/components/ui/dialog';\nimport { \n  Sheet, \n  SheetContent, \n  SheetHeader, \n  SheetTitle, \n  SheetTrigger \n} from '@/components/ui/sheet';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  Tooltip, \n  TooltipContent, \n  TooltipProvider, \n  TooltipTrigger \n} from '@/components/ui/tooltip';\n\n// Components for different question types\nimport QuestionRenderer from './components/question-renderer';\nimport QuestionNavigation from './components/question-navigation';\nimport TimeDisplay from './components/time-display';\nimport OfflineIndicator from './components/offline-indicator';\nimport SubmitConfirmation from './components/submit-confirmation';\n\n// Types\nimport { \n  Quiz, \n  Question, \n  Answer, \n  QuizAttempt \n} from '@/app/dashboard/student/types/quiz-types';\n\ninterface QuizTakeProps {\n  quizId: string;\n}\n\nexport function QuizTake({ quizId }: QuizTakeProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const isOnline = useOnlineStatus();\n  const saveAnswerTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [quiz, setQuiz] = useState<Quiz | null>(null);\n  const [attemptId, setAttemptId] = useState<string | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState<Answer[]>([]);\n  const [flaggedQuestions, setFlaggedQuestions] = useState<Set<string>>(new Set());\n  const [remainingTime, setRemainingTime] = useState<number | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showSubmitConfirmation, setShowSubmitConfirmation] = useState(false);\n  const [lastSavedTimestamp, setLastSavedTimestamp] = useState<Date | null>(null);\n  const [showTimeWarning, setShowTimeWarning] = useState(false);\n\n  // Store answers in local storage as backup\n  const [localAnswers, setLocalAnswers] = useLocalStorage<Record<string, any>>(\n    `quiz-answers-${quizId}`,\n    {}\n  );\n\n  // Initialize attempt\n  useEffect(() => {\n    const startAttempt = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`/api/attempts/start`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            quizId,\n          }),\n        });\n\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.message || 'Failed to start attempt');\n        }\n\n        const data = await response.json();\n        \n        if (data.success) {\n          setAttemptId(data.data.attemptId);\n          \n          // If continuing an attempt, load saved answers\n          if (!data.data.isNew) {\n            loadSavedAnswers(data.data.attemptId);\n          }\n          \n          // Load quiz details\n          fetchQuizDetails(quizId);\n        } else {\n          throw new Error(data.message || 'Failed to start attempt');\n        }\n      } catch (err) {\n        console.error('Error starting attempt:', err);\n        setError((err as Error).message);\n        toast({\n          title: 'Lỗi',\n          description: (err as Error).message,\n          variant: 'destructive',\n        });\n      }\n    };\n\n    startAttempt();\n  }, [quizId, toast]);\n\n  // Load quiz details\n  const fetchQuizDetails = async (quizId: string) => {\n    try {\n      const response = await fetch(`/api/quizzes/${quizId}/details`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to load quiz details');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setQuiz(data.data);\n        \n        // Initialize time limit if applicable\n        if (data.data.timeLimit) {\n          // Convert time limit from minutes to seconds\n          setRemainingTime(data.data.timeLimit * 60);\n        }\n        \n        setIsLoading(false);\n      } else {\n        throw new Error(data.message || 'Failed to load quiz details');\n      }\n    } catch (err) {\n      console.error('Error loading quiz details:', err);\n      setError((err as Error).message);\n      toast({\n        title: 'Lỗi',\n        description: (err as Error).message,\n        variant: 'destructive',\n      });\n      setIsLoading(false);\n    }\n  };\n\n  // Load saved answers for a continuing attempt\n  const loadSavedAnswers = async (attemptId: string) => {\n    try {\n      const response = await fetch(`/api/attempts/${attemptId}/answers`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to load saved answers');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success && data.data.length > 0) {\n        // Transform API data into Answer objects\n        const loadedAnswers: Answer[] = data.data.map((item: any) => ({\n          questionId: item.questionId,\n          selectedOptions: item.selectedOption ? [item.selectedOption] : [],\n          textAnswer: item.textAnswer || '',\n          jsonData: item.jsonData ? JSON.parse(item.jsonData) : null,\n        }));\n        \n        setAnswers(loadedAnswers);\n        \n        // Also save to local storage as backup\n        const answersMap: Record<string, any> = {};\n        loadedAnswers.forEach(answer => {\n          answersMap[answer.questionId] = {\n            selectedOptions: answer.selectedOptions,\n            textAnswer: answer.textAnswer,\n            jsonData: answer.jsonData,\n          };\n        });\n        \n        setLocalAnswers(answersMap);\n      }\n    } catch (err) {\n      console.error('Error loading saved answers:', err);\n      // Try to recover from local storage\n      recoverFromLocalStorage();\n    }\n  };\n\n  // Attempt to recover answers from local storage if server fetch fails\n  const recoverFromLocalStorage = () => {\n    if (Object.keys(localAnswers).length > 0 && quiz) {\n      const recoveredAnswers: Answer[] = [];\n      \n      quiz.questions.forEach(question => {\n        if (localAnswers[question.id]) {\n          recoveredAnswers.push({\n            questionId: question.id,\n            selectedOptions: localAnswers[question.id].selectedOptions || [],\n            textAnswer: localAnswers[question.id].textAnswer || '',\n            jsonData: localAnswers[question.id].jsonData || null,\n          });\n        }\n      });\n      \n      if (recoveredAnswers.length > 0) {\n        setAnswers(recoveredAnswers);\n        toast({\n          title: 'Khôi phục câu trả lời',\n          description: 'Đã khôi phục câu trả lời từ bộ nhớ cục bộ.',\n        });\n      }\n    }\n  };\n\n  // Save answer with debounce to prevent excessive API calls\n  const saveAnswer = useCallback(async (answer: Answer) => {\n    if (!attemptId || !isOnline) {\n      // Save to local storage if offline\n      setLocalAnswers(prev => ({\n        ...prev,\n        [answer.questionId]: {\n          selectedOptions: answer.selectedOptions,\n          textAnswer: answer.textAnswer,\n          jsonData: answer.jsonData,\n        },\n      }));\n      \n      if (!isOnline) {\n        return; // Don't try to make API call if offline\n      }\n    }\n\n    // Clear existing timeout\n    if (saveAnswerTimeoutRef.current) {\n      clearTimeout(saveAnswerTimeoutRef.current);\n    }\n\n    // Set new timeout (500ms debounce)\n    saveAnswerTimeoutRef.current = setTimeout(async () => {\n      try {\n        const response = await fetch(`/api/attempts/${attemptId}/answers`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            questionId: answer.questionId,\n            selectedOption: answer.selectedOptions.length === 1 ? answer.selectedOptions[0] : null,\n            selectedOptions: answer.selectedOptions.length > 1 ? answer.selectedOptions : null,\n            textAnswer: answer.textAnswer || null,\n            jsonData: answer.jsonData || null,\n          }),\n        });\n\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.message || 'Failed to save answer');\n        }\n\n        const data = await response.json();\n        \n        if (data.success) {\n          // Update last saved timestamp\n          setLastSavedTimestamp(new Date());\n        } else {\n          throw new Error(data.message || 'Failed to save answer');\n        }\n      } catch (err) {\n        console.error('Error saving answer:', err);\n        // Still maintain local storage copy\n        setLocalAnswers(prev => ({\n          ...prev,\n          [answer.questionId]: {\n            selectedOptions: answer.selectedOptions,\n            textAnswer: answer.textAnswer,\n            jsonData: answer.jsonData,\n          },\n        }));\n      }\n    }, 500);\n  }, [attemptId, isOnline, setLocalAnswers]);\n\n  // Handle timer countdown\n  useEffect(() => {\n    if (remainingTime === null || remainingTime <= 0 || isSubmitting) return;\n\n    const timer = setInterval(() => {\n      setRemainingTime(prev => {\n        if (prev === null) return null;\n        \n        // Show warning when 5 minutes remaining\n        if (prev === 300 && !showTimeWarning) {\n          setShowTimeWarning(true);\n          toast({\n            title: 'Cảnh báo',\n            description: 'Chỉ còn 5 phút nữa là hết giờ làm bài!',\n            variant: 'destructive',\n          });\n        }\n        \n        // Show warning when 1 minute remaining\n        if (prev === 60) {\n          toast({\n            title: 'Cảnh báo',\n            description: 'Chỉ còn 1 phút nữa là hết giờ làm bài!',\n            variant: 'destructive',\n          });\n        }\n        \n        // Auto-submit when time runs out\n        if (prev <= 1) {\n          submitQuiz('auto');\n          return 0;\n        }\n        \n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [remainingTime, isSubmitting, showTimeWarning]);\n\n  // Handle offline synchronization when coming back online\n  useEffect(() => {\n    if (isOnline && Object.keys(localAnswers).length > 0 && attemptId) {\n      // Try to sync each answer stored locally\n      Object.entries(localAnswers).forEach(([questionId, answerData]) => {\n        const answer: Answer = {\n          questionId,\n          selectedOptions: answerData.selectedOptions || [],\n          textAnswer: answerData.textAnswer || '',\n          jsonData: answerData.jsonData || null,\n        };\n        \n        saveAnswer(answer);\n      });\n      \n      toast({\n        title: 'Đã kết nối lại',\n        description: 'Đã đồng bộ hóa câu trả lời với máy chủ.',\n      });\n    }\n  }, [isOnline, localAnswers, attemptId, saveAnswer]);\n\n  // Update answer when changed by student\n  const handleAnswerChange = useCallback((answer: Answer) => {\n    setAnswers(prev => {\n      const existingIndex = prev.findIndex(a => a.questionId === answer.questionId);\n      \n      if (existingIndex >= 0) {\n        // Update existing answer\n        const updated = [...prev];\n        updated[existingIndex] = answer;\n        return updated;\n      } else {\n        // Add new answer\n        return [...prev, answer];\n      }\n    });\n    \n    // Save answer to server\n    saveAnswer(answer);\n  }, [saveAnswer]);\n\n  // Toggle flag status on a question\n  const handleToggleFlag = useCallback((questionId: string) => {\n    setFlaggedQuestions(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(questionId)) {\n        newSet.delete(questionId);\n      } else {\n        newSet.add(questionId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Navigate to next question\n  const handleNextQuestion = useCallback(() => {\n    if (!quiz) return;\n    \n    setCurrentQuestionIndex(prev => {\n      if (prev < quiz.questions.length - 1) {\n        return prev + 1;\n      }\n      return prev;\n    });\n  }, [quiz]);\n\n  // Navigate to previous question\n  const handlePrevQuestion = useCallback(() => {\n    setCurrentQuestionIndex(prev => {\n      if (prev > 0) {\n        return prev - 1;\n      }\n      return prev;\n    });\n  }, []);\n\n  // Submit quiz\n  const submitQuiz = async (type: 'manual' | 'auto' = 'manual') => {\n    if (!attemptId || isSubmitting) return;\n    \n    try {\n      setIsSubmitting(true);\n      \n      // Try to save any pending answers first\n      await Promise.all(\n        answers.map(answer => \n          fetch(`/api/attempts/${attemptId}/answers`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              questionId: answer.questionId,\n              selectedOption: answer.selectedOptions.length === 1 ? answer.selectedOptions[0] : null,\n              selectedOptions: answer.selectedOptions.length > 1 ? answer.selectedOptions : null,\n              textAnswer: answer.textAnswer || null,\n              jsonData: answer.jsonData || null,\n            }),\n          })\n        )\n      );\n      \n      // Complete the attempt\n      const response = await fetch(`/api/attempts/${attemptId}/complete`, {\n        method: 'POST',\n      });\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to submit quiz');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // Clear local storage\n        setLocalAnswers({});\n        \n        toast({\n          title: type === 'auto' ? 'Tự động nộp bài' : 'Nộp bài thành công',\n          description: 'Bài làm của bạn đã được nộp.',\n        });\n        \n        // Redirect to results page\n        router.push(`/dashboard/student/results/${attemptId}`);\n      } else {\n        throw new Error(data.message || 'Failed to submit quiz');\n      }\n    } catch (err) {\n      console.error('Error submitting quiz:', err);\n      toast({\n        title: 'Lỗi',\n        description: (err as Error).message,\n        variant: 'destructive',\n      });\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show confirmation dialog before manually submitting\n  const handleSubmitConfirmation = () => {\n    if (!quiz) return;\n    \n    // Check for unanswered questions\n    const answeredCount = answers.filter(a => \n      a.selectedOptions.length > 0 || a.textAnswer || a.jsonData\n    ).length;\n    \n    const unansweredCount = quiz.questions.length - answeredCount;\n    \n    // Show different content based on answer status\n    setShowSubmitConfirmation(true);\n  };\n\n  // If still loading, show skeleton\n  if (isLoading) {\n    return <QuizTakeSkeleton />;\n  }\n\n  // If error, show error message\n  if (error || !quiz) {\n    return (\n      <div className=\"max-w-screen-xl mx-auto px-4 py-6\">\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>Lỗi</AlertTitle>\n          <AlertDescription>\n            {error || 'Không thể tải bài kiểm tra. Vui lòng thử lại sau.'}\n          </AlertDescription>\n          <Button className=\"mt-4\" onClick={() => router.push('/dashboard/student/quizzes')}>\n            Quay lại danh sách bài kiểm tra\n          </Button>\n        </Alert>\n      </div>\n    );\n  }\n\n  // Get current question\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n\n  // Check if current question has been answered\n  const currentAnswer = answers.find(a => a.questionId === currentQuestion.id);\n\n  return (\n    <div className=\"max-w-screen-xl mx-auto px-4 py-6 space-y-6\">\n      {/* Offline indicator */}\n      {!isOnline && <OfflineIndicator lastSavedTimestamp={lastSavedTimestamp} />}\n\n      {/* Time warning dialog */}\n      <Dialog open={showTimeWarning} onOpenChange={setShowTimeWarning}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle className=\"text-destructive\">Cảnh báo thời gian</DialogTitle>\n            <DialogDescription>\n              Chỉ còn 5 phút nữa là hết giờ làm bài. Hãy kiểm tra lại bài làm của bạn và nộp bài kịp thời!\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button onClick={() => setShowTimeWarning(false)}>Đã hiểu</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Submit confirmation dialog */}\n      <SubmitConfirmation\n        open={showSubmitConfirmation}\n        onOpenChange={setShowSubmitConfirmation}\n        answeredCount={answers.filter(a => a.selectedOptions.length > 0 || a.textAnswer || a.jsonData).length}\n        totalQuestions={quiz.questions.length}\n        onSubmit={() => submitQuiz('manual')}\n      />\n\n      {/* Header section */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">{quiz.title}</h1>\n          {quiz.description && <p className=\"text-muted-foreground\">{quiz.description}</p>}\n        </div>\n        \n        {/* Timer */}\n        <TimeDisplay remainingTime={remainingTime} isSubmitting={isSubmitting} />\n      </div>\n\n      {/* Main quiz content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n        {/* Question area - 2/3 width on larger screens */}\n        <div className=\"lg:col-span-8 space-y-6\">\n          <Card className=\"h-full\">\n            <CardHeader className=\"flex flex-row justify-between items-center space-y-0 pb-2 border-b\">\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"outline\" className=\"text-sm\">\n                  Câu {currentQuestionIndex + 1}/{quiz.questions.length}\n                </Badge>\n                \n                {flaggedQuestions.has(currentQuestion.id) && (\n                  <Badge className=\"bg-yellow-500 text-white\">\n                    <Flag className=\"h-3 w-3 mr-1\" />\n                    Đánh dấu\n                  </Badge>\n                )}\n              </div>\n              \n              <TooltipProvider>\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => handleToggleFlag(currentQuestion.id)}\n                    >\n                      <Flag \n                        className={flaggedQuestions.has(currentQuestion.id) \n                          ? \"h-4 w-4 text-yellow-500\" \n                          : \"h-4 w-4\"\n                        } \n                      />\n                    </Button>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    {flaggedQuestions.has(currentQuestion.id) ? 'Bỏ đánh dấu' : 'Đánh dấu'} câu hỏi này\n                  </TooltipContent>\n                </Tooltip>\n              </TooltipProvider>\n            </CardHeader>\n            \n            <CardContent className=\"pt-6\">\n              <ScrollArea className=\"h-[calc(100vh-350px)]\">\n                <QuestionRenderer\n                  question={currentQuestion}\n                  answer={currentAnswer}\n                  onAnswerChange={handleAnswerChange}\n                />\n              </ScrollArea>\n            </CardContent>\n            \n            <CardFooter className=\"flex justify-between border-t pt-4\">\n              <Button\n                variant=\"outline\"\n                onClick={handlePrevQuestion}\n                disabled={currentQuestionIndex === 0 || isSubmitting}\n              >\n                Câu trước\n              </Button>\n              \n              {currentQuestionIndex === quiz.questions.length - 1 ? (\n                <Button\n                  onClick={handleSubmitConfirmation}\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Đang nộp bài...\n                    </>\n                  ) : (\n                    'Nộp bài'\n                  )}\n                </Button>\n              ) : (\n                <Button\n                  onClick={handleNextQuestion}\n                  disabled={isSubmitting}\n                >\n                  Câu tiếp theo\n                </Button>\n              )}\n            </CardFooter>\n          </Card>\n        </div>\n        \n        {/* Navigation sidebar - 1/3 width on larger screens */}\n        <div className=\"lg:col-span-4\">\n          {/* Show on mobile as a sheet */}\n          <div className=\"block lg:hidden w-full\">\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full\">\n                  Điều hướng câu hỏi\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-full sm:max-w-md\">\n                <SheetHeader>\n                  <SheetTitle>Câu hỏi</SheetTitle>\n                </SheetHeader>\n                <div className=\"py-4\">\n                  <QuestionNavigation\n                    questions={quiz.questions}\n                    answers={answers}\n                    currentQuestionIndex={currentQuestionIndex}\n                    flaggedQuestions={flaggedQuestions}\n                    onQuestionSelect={setCurrentQuestionIndex}\n                    isSubmitting={isSubmitting}\n                  />\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n          \n          {/* Show directly on desktop */}\n          <div className=\"hidden lg:block\">\n            <QuestionNavigation\n              questions={quiz.questions}\n              answers={answers}\n              currentQuestionIndex={currentQuestionIndex}\n              flaggedQuestions={flaggedQuestions}\n              onQuestionSelect={setCurrentQuestionIndex}\n              isSubmitting={isSubmitting}\n            />\n          </div>\n          \n          {/* Submit button at bottom of navigation */}\n          <Button \n            className=\"w-full mt-4\"\n            onClick={handleSubmitConfirmation}\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Đang nộp bài...\n              </>\n            ) : (\n              'Nộp bài'\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Loading skeleton component\nfunction QuizTakeSkeleton() {\n  return (\n    <div className=\"max-w-screen-xl mx-auto px-4 py-6 space-y-6\">\n      {/* Header skeleton */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-64 bg-slate-200 rounded-md animate-pulse\" />\n          <div className=\"h-4 w-96 bg-slate-200 rounded-md animate-pulse\" />\n        </div>\n        <div className=\"h-10 w-32 bg-slate-200 rounded-md animate-pulse\" />\n      </div>\n\n      {/* Main content skeleton */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n        <div className=\"lg:col-span-8\">\n          <div className=\"h-[60vh] bg-slate-200 rounded-lg animate-pulse\" />\n        </div>\n        <div className=\"lg:col-span-4\">\n          <div className=\"h-[50vh] bg-slate-200 rounded-lg animate-pulse\" />\n          <div className=\"h-10 w-full bg-slate-200 rounded-md animate-pulse mt-4\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuizTake; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4377, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/attempt/page.tsx"],"sourcesContent":["\"use client\";\n\nimport QuizTake from './quiz-take';\n\ninterface QuizAttemptPageProps {\n  params: {\n    quizId: string;\n  };\n}\n\nexport default function QuizAttemptPage({ params }: QuizAttemptPageProps) {\n  return <QuizTake quizId={params.quizId} />;\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUe,SAAS,gBAAgB,EAAE,MAAM,EAAwB;IACtE,qBAAO,6LAAC,mLAAA,CAAA,UAAQ;QAAC,QAAQ,OAAO,MAAM;;;;;;AACxC;KAFwB","debugId":null}}]
}
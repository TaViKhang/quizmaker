{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/providers/theme-provider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\r\n\r\n/**\r\n * OnTest Theme Provider\r\n * \r\n * A wrapper around next-themes that provides a consistent theme experience\r\n * across the OnTest platform.\r\n * \r\n * Features:\r\n * - Persists theme preference in local storage\r\n * - Supports system theme detection\r\n * - Handles theme switching with smooth transitions\r\n * - Provides theme values according to OnTest Design System\r\n *\r\n * The color palette is defined in globals.css with CSS variables following\r\n * the academic palette:\r\n * - Navy (Primary): HSL(222.2, 47.4%, 11.2%) - #0f172a\r\n * - Slate (Secondary): HSL(210, 40%, 96.1%) - #f1f5f9\r\n * - Emerald (Accent): HSL(160, 66%, 44%) - #10b981\r\n * \r\n * @param {React.ReactNode} children - The child components\r\n * @param {object} props - Additional props for NextThemesProvider\r\n */\r\nexport function ThemeProvider({ \r\n  children,\r\n  ...props\r\n}: {\r\n  children: React.ReactNode;\r\n  [key: string]: any;\r\n}) {\r\n  return (\r\n    <NextThemesProvider\r\n      attribute=\"class\"\r\n      defaultTheme=\"system\"\r\n      enableSystem={true}\r\n      enableColorScheme={true}\r\n      disableTransitionOnChange={true}\r\n      storageKey=\"OnTest-theme\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </NextThemesProvider>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAGA;AAHA;;;AA0BO,SAAS,cAAc,EAC5B,QAAQ,EACR,GAAG,OAIJ;IACC,qBACE,6LAAC,4JAAA,CAAA,gBAAkB;QACjB,WAAU;QACV,cAAa;QACb,cAAc;QACd,mBAAmB;QACnB,2BAA2B;QAC3B,YAAW;QACV,GAAG,KAAK;kBAER;;;;;;AAGP;KApBgB","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n/**\r\n * Safely access theme state to avoid hydration errors\r\n * This is useful for conditionally rendering theme-dependent UI\r\n * \r\n * @param theme Current theme from useTheme hook\r\n * @param mounted Boolean indicating if component is mounted\r\n * @returns Safe theme value or null if not mounted\r\n */\r\nexport function getSafeTheme(\r\n  theme: string | undefined, \r\n  mounted: boolean\r\n): \"light\" | \"dark\" | \"system\" | null {\r\n  if (!mounted) return null\r\n  return (theme as \"light\" | \"dark\" | \"system\") || null\r\n}\r\n\r\n/**\r\n * Generate a random alphanumeric code of specified length\r\n * @param length Length of the code to generate\r\n * @returns Random alphanumeric string\r\n */\r\nexport function generateRandomCode(length: number): string {\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  let code = '';\r\n  \r\n  for (let i = 0; i < length; i++) {\r\n    code += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  \r\n  return code;\r\n}\r\n\r\n/**\r\n * Format duration in milliseconds to a human-readable string\r\n * @param ms Duration in milliseconds\r\n * @returns Formatted duration string (e.g., \"1h 30m\" or \"45m\")\r\n */\r\nexport function formatDuration(ms: number): string {\r\n  if (!ms || ms <= 0) return \"0 minutes\";\r\n  \r\n  const seconds = Math.floor((ms / 1000) % 60);\r\n  const minutes = Math.floor((ms / (1000 * 60)) % 60);\r\n  const hours = Math.floor((ms / (1000 * 60 * 60)));\r\n  \r\n  const parts = [];\r\n  \r\n  if (hours > 0) {\r\n    parts.push(`${hours} ${hours === 1 ? 'hour' : 'hours'}`);\r\n  }\r\n  \r\n  if (minutes > 0) {\r\n    parts.push(`${minutes} ${minutes === 1 ? 'minute' : 'minutes'}`);\r\n  }\r\n  \r\n  if (seconds > 0 && hours === 0) {\r\n    parts.push(`${seconds} ${seconds === 1 ? 'second' : 'seconds'}`);\r\n  }\r\n  \r\n  return parts.join(' ');\r\n}\r\n\r\n/**\r\n * Normalize metadata to ensure correct format\r\n * @param metadata Metadata object or string to normalize\r\n * @returns Normalized object or null if invalid\r\n */\r\nexport function normalizeMetadata<T extends Record<string, any> = Record<string, any>>(metadata: unknown): T | null {\r\n  // Return null for falsy values (undefined, null, empty string, etc.)\r\n  if (!metadata) return null;\r\n  \r\n  try {\r\n    // If metadata is already an object, return it directly with type assertion\r\n    if (typeof metadata === 'object' && metadata !== null && !Array.isArray(metadata)) {\r\n      // Remove null/undefined values for consistency\r\n      const cleanedMetadata = Object.fromEntries(\r\n        Object.entries(metadata as Record<string, any>).filter(([_, v]) => v !== null && v !== undefined)\r\n      );\r\n      \r\n      return cleanedMetadata as T;\r\n    }\r\n    \r\n    // If metadata is a string, try to parse it as JSON\r\n    if (typeof metadata === 'string') {\r\n      try {\r\n        const parsed = JSON.parse(metadata);\r\n        \r\n        // Ensure the parsed result is actually an object\r\n        if (typeof parsed === 'object' && parsed !== null && !Array.isArray(parsed)) {\r\n          // Clean up null/undefined values\r\n          const cleanedMetadata = Object.fromEntries(\r\n            Object.entries(parsed).filter(([_, v]) => v !== null && v !== undefined)\r\n          );\r\n          \r\n          return cleanedMetadata as T;\r\n        }\r\n        \r\n        // If parsed but not an object, return null\r\n        return null;\r\n      } catch (parseError) {\r\n        console.warn(\"Failed to parse metadata string:\", parseError);\r\n        return null;\r\n    }\r\n    }\r\n    \r\n    // For all other types (number, boolean, etc.), return null\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Failed to normalize metadata:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Prepare metadata for database storage\r\n * @param metadata Metadata object to prepare\r\n * @returns Stringified metadata or null\r\n */\r\nexport function prepareMetadataForDB(metadata: Record<string, any> | null): string | null {\r\n  if (!metadata) return null;\r\n  \r\n  try {\r\n    // Remove null/undefined properties\r\n    const cleanMetadata = Object.fromEntries(\r\n      Object.entries(metadata).filter(([_, v]) => v !== null && v !== undefined)\r\n    );\r\n    \r\n    // Check if any properties remain\r\n    if (Object.keys(cleanMetadata).length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    return JSON.stringify(cleanMetadata);\r\n  } catch (error) {\r\n    console.error(\"Failed to prepare metadata for DB:\", error);\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\nconst toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full data-[state=closed]:slide-out-to-right-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-background text-foreground\",\r\n        destructive:\r\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\nconst ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastAction.displayName = ToastPrimitives.Action.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\r\n\r\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\r\n\r\nexport {\r\n  type ToastProps,\r\n  type ToastActionElement,\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 5\r\nconst TOAST_REMOVE_DELAY = 1000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_VALUE\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: string\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: string\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ninterface Toast extends Omit<ToasterToast, \"id\"> {}\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast } "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from \"@/components/ui/toast\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAQA;;;AAVA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,6HAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,6HAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,6HAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,6HAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,6HAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,6HAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,mIAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/accessible-toaster.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Toaster as ShadcnToaster } from \"@/components/ui/toaster\"\r\n\r\n/**\r\n * Accessible Toaster component\r\n * \r\n * Wraps the standard Toaster and adds additional accessibility features\r\n * such as proper ARIA roles and focus management\r\n */\r\nexport const AccessibleToaster = React.forwardRef<HTMLDivElement>((props, ref) => {\r\n  // Set up screen reader access\r\n  React.useEffect(() => {\r\n    if (!ref || typeof ref === 'function' || !ref.current) return\r\n    \r\n    // Ensure proper ARIA roles\r\n    const toaster = ref.current\r\n    \r\n    // Ensure the toaster has a role of \"status\" for screen readers\r\n    if (!toaster.hasAttribute(\"role\")) {\r\n      toaster.setAttribute(\"role\", \"status\")\r\n    }\r\n    \r\n    // Add aria-live=\"polite\" to ensure screen readers announce toast content\r\n    if (!toaster.hasAttribute(\"aria-live\")) {\r\n      toaster.setAttribute(\"aria-live\", \"polite\")\r\n    }\r\n    \r\n    // Add aria-atomic=\"true\" so the entire toast is announced\r\n    if (!toaster.hasAttribute(\"aria-atomic\")) {\r\n      toaster.setAttribute(\"aria-atomic\", \"true\")\r\n    }\r\n  }, [ref])\r\n  \r\n  return <ShadcnToaster ref={ref} {...props} />\r\n})\r\n\r\nAccessibleToaster.displayName = \"AccessibleToaster\"\r\n\r\n// Re-export for convenient usage\r\nexport { useToast, toast } from \"@/components/ui/use-toast\" "],"names":[],"mappings":";;;;AAEA;AACA;AAqCA,iCAAiC;AACjC;;;AAzCA;;;AAWO,MAAM,kCAAoB,GAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,UAAkB,CAAC,OAAO;;IACxE,8BAA8B;IAC9B,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;uCAAE;YACd,IAAI,CAAC,OAAO,OAAO,QAAQ,cAAc,CAAC,IAAI,OAAO,EAAE;YAEvD,2BAA2B;YAC3B,MAAM,UAAU,IAAI,OAAO;YAE3B,+DAA+D;YAC/D,IAAI,CAAC,QAAQ,YAAY,CAAC,SAAS;gBACjC,QAAQ,YAAY,CAAC,QAAQ;YAC/B;YAEA,yEAAyE;YACzE,IAAI,CAAC,QAAQ,YAAY,CAAC,cAAc;gBACtC,QAAQ,YAAY,CAAC,aAAa;YACpC;YAEA,0DAA0D;YAC1D,IAAI,CAAC,QAAQ,YAAY,CAAC,gBAAgB;gBACxC,QAAQ,YAAY,CAAC,eAAe;YACtC;QACF;sCAAG;QAAC;KAAI;IAER,qBAAO,6LAAC,+HAAA,CAAA,UAAa;QAAC,KAAK;QAAM,GAAG,KAAK;;;;;;AAC3C;;AAEA,kBAAkB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/auth/session-provider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { SessionProvider as NextAuthSessionProvider } from \"next-auth/react\"\r\nimport { useState, useEffect, type ReactNode } from \"react\"\r\n\r\nexport interface SessionProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport function SessionProvider({ children }: SessionProviderProps) {\r\n  const [isSessionReady, setIsSessionReady] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  // Đảm bảo session sẵn sàng trước khi render children\r\n  useEffect(() => {\r\n    // Thêm một khoảng thời gian ngắn để đảm bảo session được fetch đầy đủ\r\n    const timer = setTimeout(() => {\r\n      setIsSessionReady(true);\r\n    }, 100);\r\n\r\n    // Xử lý lỗi NextAuth fetch\r\n    const handleError = (event: ErrorEvent) => {\r\n      if (event.message.includes('next-auth') || \r\n          event.message.includes('auth/session') ||\r\n          event.message.includes('Unexpected token')) {\r\n        console.warn('NextAuth session fetch error detected:', event.message);\r\n        // Vẫn render UI mặc dù có lỗi session\r\n        setIsSessionReady(true);\r\n        setHasError(true);\r\n      }\r\n    };\r\n\r\n    // Lắng nghe lỗi\r\n    window.addEventListener('error', handleError);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      window.removeEventListener('error', handleError);\r\n    };\r\n  }, []);\r\n\r\n  // Xử lý lỗi session trong chuỗi event\r\n  useEffect(() => {\r\n    const handleUnhandledRejection = (event: PromiseRejectionEvent) => {\r\n      if (event.reason && \r\n          (String(event.reason).includes('next-auth') || \r\n          String(event.reason).includes('auth/session'))) {\r\n        console.warn('NextAuth promise rejection:', event.reason);\r\n        setIsSessionReady(true);\r\n        setHasError(true);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('unhandledrejection', handleUnhandledRejection);\r\n    \r\n    return () => {\r\n      window.removeEventListener('unhandledrejection', handleUnhandledRejection);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <NextAuthSessionProvider \r\n      refetchInterval={5 * 60}\r\n      refetchOnWindowFocus={true}\r\n      refetchWhenOffline={false}\r\n    >\r\n      {isSessionReady ? children : null}\r\n    </NextAuthSessionProvider>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AASO,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,qDAAqD;IACrD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,sEAAsE;YACtE,MAAM,QAAQ;mDAAW;oBACvB,kBAAkB;gBACpB;kDAAG;YAEH,2BAA2B;YAC3B,MAAM;yDAAc,CAAC;oBACnB,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,gBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,qBAAqB;wBAC9C,QAAQ,IAAI,CAAC,0CAA0C,MAAM,OAAO;wBACpE,sCAAsC;wBACtC,kBAAkB;wBAClB,YAAY;oBACd;gBACF;;YAEA,gBAAgB;YAChB,OAAO,gBAAgB,CAAC,SAAS;YAEjC;6CAAO;oBACL,aAAa;oBACb,OAAO,mBAAmB,CAAC,SAAS;gBACtC;;QACF;oCAAG,EAAE;IAEL,sCAAsC;IACtC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;sEAA2B,CAAC;oBAChC,IAAI,MAAM,MAAM,IACZ,CAAC,OAAO,MAAM,MAAM,EAAE,QAAQ,CAAC,gBAC/B,OAAO,MAAM,MAAM,EAAE,QAAQ,CAAC,eAAe,GAAG;wBAClD,QAAQ,IAAI,CAAC,+BAA+B,MAAM,MAAM;wBACxD,kBAAkB;wBAClB,YAAY;oBACd;gBACF;;YAEA,OAAO,gBAAgB,CAAC,sBAAsB;YAE9C;6CAAO;oBACL,OAAO,mBAAmB,CAAC,sBAAsB;gBACnD;;QACF;oCAAG,EAAE;IAEL,qBACE,6LAAC,iJAAA,CAAA,kBAAuB;QACtB,iBAAiB,IAAI;QACrB,sBAAsB;QACtB,oBAAoB;kBAEnB,iBAAiB,WAAW;;;;;;AAGnC;GA5DgB;KAAA","debugId":null}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/providers/analytics-provider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode, useCallback, useRef, useMemo } from \"react\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { Role } from \"@prisma/client\";\r\nimport { format } from \"date-fns\";\r\n\r\n// Types for Class Participation Analytics\r\nexport interface KeyMetrics {\r\n  activeClasses: number;\r\n  overallEngagementRate: number;\r\n  totalStudyTimeSeconds: number;\r\n}\r\n\r\nexport interface ClassPerformanceDetail {\r\n  classId: string;\r\n  className: string;\r\n  quizzesAssigned: number;\r\n  quizzesCompletedByStudent: number;\r\n  classCompletionRate: number;\r\n  timeSpentInClassSeconds: number;\r\n}\r\n\r\nexport interface ParticipationTimePoint {\r\n  date: string;\r\n  completedQuizzes: number;\r\n}\r\n\r\nexport interface ClassParticipationData {\r\n  keyMetrics: KeyMetrics;\r\n  classPerformanceBreakdown: ClassPerformanceDetail[];\r\n  participationOverTime: ParticipationTimePoint[];\r\n}\r\n\r\n// Backward compatibility types (for legacy UI components that might still use old structure)\r\nexport interface ClassCounts {\r\n  total: number;\r\n  active: number;\r\n  completed: number;\r\n  upcoming: number;\r\n}\r\n\r\nexport interface ClassActivity {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport interface ClassEngagement {\r\n  name: string;\r\n  quizzes: number;\r\n  assignments: number;\r\n  discussions: number;\r\n}\r\n\r\nexport interface RecentActivity {\r\n  id: string;\r\n  className: string;\r\n  activityType: string;\r\n  date: string;\r\n  score?: number;\r\n  durationMinutes?: number;\r\n}\r\n\r\nexport interface LegacyClassParticipationData {\r\n  classCounts: ClassCounts;\r\n  classActivities: ClassActivity[];\r\n  classEngagement: ClassEngagement[];\r\n  recentActivities: RecentActivity[];\r\n}\r\n\r\n// Available time frames for filtering data\r\nexport type TimeFrame = \"last7days\" | \"last30days\" | \"last90days\" | \"allTime\";\r\n\r\n// Types for Score Analytics\r\nexport interface OverallScoreStats {\r\n  averageScore: number;\r\n  previousAverageScore: number | null;\r\n  improvement: number | null; // Percentage\r\n  totalAssessments: number;\r\n  currentPeriodLabel: string; // e.g., \"Last 30 Days\", \"Mar 2023 - May 2023\"\r\n  previousPeriodLabel: string | null; // e.g., \"Previous 30 Days\"\r\n}\r\n\r\nexport interface TimePointScoreData {\r\n  date: string; // ISO YYYY-MM-DD (representing day, start of week, or start of month)\r\n  averageScore: number;\r\n  assessmentCount: number;\r\n}\r\n\r\nexport interface SubjectScorePerformance {\r\n  subject: string; // Category name\r\n  averageScore: number;\r\n  assessmentCount: number;\r\n}\r\n\r\nexport interface ScoreAnalyticsData {\r\n  overallStats: OverallScoreStats;\r\n  timeSeriesData: TimePointScoreData[];\r\n  subjectPerformance: SubjectScorePerformance[];\r\n}\r\n\r\n// Types for Quiz Completion Analytics\r\nexport interface QuizCompletionMetrics {\r\n  totalQuizzes: number;\r\n  completedQuizzes: number;\r\n  completionRate: number;\r\n  averageScore: number;\r\n  averageAttempts: number;\r\n}\r\n\r\nexport interface QuizBreakdownItem {\r\n  quizId: string;\r\n  title: string;\r\n  className: string;\r\n  completionStatus: \"completed\" | \"in_progress\" | \"not_started\";\r\n  bestScore: number | null;\r\n  attemptCount: number;\r\n  lastAttemptDate: string | null;\r\n}\r\n\r\nexport interface CompletionTrendPoint {\r\n  period: string;\r\n  completedCount: number;\r\n  averageScore: number;\r\n}\r\n\r\nexport interface CategoryAnalysisItem {\r\n  category: string;\r\n  quizCount: number;\r\n  completedCount: number;\r\n  completionRate: number;\r\n  averageScore: number;\r\n}\r\n\r\nexport interface QuizCompletionAnalyticsData {\r\n  keyMetrics: QuizCompletionMetrics;\r\n  quizBreakdown: QuizBreakdownItem[];\r\n  completionTrends: CompletionTrendPoint[];\r\n  categoryAnalysis: CategoryAnalysisItem[];\r\n}\r\n\r\n// Interface for cache data with timestamps\r\ninterface CachedData<T> {\r\n  data: T;\r\n  timestamp: number;\r\n  timeFrame: TimeFrame;\r\n}\r\n\r\n// Context Interface\r\ninterface AnalyticsContextType {\r\n  // Class Participation Analytics\r\n  classParticipationData: ClassParticipationData | null;\r\n  classParticipationError: string | null;\r\n  isLoadingClassParticipation: boolean;\r\n  timeFrame: TimeFrame;\r\n  setTimeFrame: (timeFrame: TimeFrame) => void;\r\n  fetchClassParticipation: () => Promise<ClassParticipationData | null>;\r\n  \r\n  // Score Analytics (can be expanded as needed)\r\n  scoreAnalyticsData: ScoreAnalyticsData | null;\r\n  scoreAnalyticsError: string | null;\r\n  isLoadingScoreAnalytics: boolean;\r\n  fetchScoreAnalytics: () => Promise<ScoreAnalyticsData | null>;\r\n\r\n  // Quiz Completion Analytics\r\n  quizCompletionData: QuizCompletionAnalyticsData | null;\r\n  quizCompletionError: string | null;\r\n  isLoadingQuizCompletion: boolean;\r\n  fetchQuizCompletion: () => Promise<QuizCompletionAnalyticsData | null>;\r\n}\r\n\r\n// Helper to generate empty class participation data\r\nexport const generateEmptyClassParticipationData = (): ClassParticipationData => {\r\n  return {\r\n    keyMetrics: {\r\n      activeClasses: 0,\r\n      overallEngagementRate: 0,\r\n      totalStudyTimeSeconds: 0,\r\n    },\r\n    classPerformanceBreakdown: [],\r\n    participationOverTime: [],\r\n  };\r\n};\r\n\r\n// Helper to generate empty score analytics data\r\nexport const generateEmptyScoreAnalyticsData = (): ScoreAnalyticsData => {\r\n  return {\r\n    overallStats: {\r\n      averageScore: 0,\r\n      previousAverageScore: null,\r\n      improvement: null,\r\n      totalAssessments: 0,\r\n      currentPeriodLabel: \"No data available\",\r\n      previousPeriodLabel: null,\r\n    },\r\n    timeSeriesData: [],\r\n    subjectPerformance: [],\r\n  };\r\n};\r\n\r\n// Helper to convert new data format to legacy format for backward compatibility\r\nexport const convertToLegacyFormat = (data: ClassParticipationData): LegacyClassParticipationData => {\r\n  // Create dummy class counts\r\n  const classCounts: ClassCounts = {\r\n    total: data.keyMetrics.activeClasses,\r\n    active: data.keyMetrics.activeClasses,\r\n    completed: 0,\r\n    upcoming: 0,\r\n  };\r\n\r\n  // Create active vs passive participation\r\n  const classActivities: ClassActivity[] = [\r\n    { \r\n      name: \"Active Participation\", \r\n      value: data.keyMetrics.overallEngagementRate \r\n    },\r\n    { \r\n      name: \"Passive Viewing\", \r\n      value: 100 - data.keyMetrics.overallEngagementRate\r\n    }\r\n  ];\r\n\r\n  // Create class engagement data\r\n  const classEngagement: ClassEngagement[] = data.classPerformanceBreakdown.map(cls => ({\r\n    name: cls.className,\r\n    quizzes: cls.quizzesCompletedByStudent,\r\n    assignments: 0, // Not available in new format\r\n    discussions: 0, // Not available in new format\r\n  }));\r\n\r\n  // Create dummy recent activities (not available in new format)\r\n  const recentActivities: RecentActivity[] = [];\r\n\r\n  return {\r\n    classCounts,\r\n    classActivities,\r\n    classEngagement,\r\n    recentActivities,\r\n  };\r\n};\r\n\r\n// Helper to generate empty quiz completion analytics data\r\nexport const generateEmptyQuizCompletionAnalyticsData = (): QuizCompletionAnalyticsData => {\r\n  return {\r\n    keyMetrics: {\r\n      totalQuizzes: 0,\r\n      completedQuizzes: 0,\r\n      completionRate: 0,\r\n      averageScore: 0,\r\n      averageAttempts: 0,\r\n    },\r\n    quizBreakdown: [],\r\n    completionTrends: [],\r\n    categoryAnalysis: [],\r\n  };\r\n};\r\n\r\n// Helper to transform API quiz completion data to expected format\r\nconst transformQuizCompletionAPIData = (apiData: any): QuizCompletionAnalyticsData => {\r\n  if (!apiData) return generateEmptyQuizCompletionAnalyticsData();\r\n\r\n  // Extract data for keyMetrics\r\n  const keyMetrics: QuizCompletionMetrics = {\r\n    totalQuizzes: apiData.totalQuizzes || 0,\r\n    completedQuizzes: apiData.completedQuizzes || 0,\r\n    completionRate: apiData.completionRate || 0,\r\n    averageScore: apiData.averageScore || 0,\r\n    averageAttempts: apiData.averageAttempts || 1,\r\n  };\r\n\r\n  // Transform subjectStats to categoryAnalysis\r\n  const categoryAnalysis: CategoryAnalysisItem[] = (apiData.subjectStats || []).map((stat: any) => ({\r\n    category: stat.subject || \"Uncategorized\",\r\n    quizCount: stat.totalQuizzes || 0,\r\n    completedCount: stat.completedQuizzes || 0,\r\n    completionRate: stat.completionRate || 0,\r\n    averageScore: stat.averageScore || 0,\r\n  }));\r\n\r\n  // Use the actual completionTrends data if available\r\n  const completionTrends: CompletionTrendPoint[] = apiData.completionTrends || [];\r\n  \r\n  // Use the actual quiz breakdown data if available\r\n  const quizBreakdown: QuizBreakdownItem[] = apiData.quizBreakdown || [];\r\n  \r\n  return {\r\n    keyMetrics,\r\n    categoryAnalysis,\r\n    completionTrends,\r\n    quizBreakdown,\r\n  };\r\n};\r\n\r\n// Create context\r\nconst AnalyticsContext = createContext<AnalyticsContextType | undefined>(undefined);\r\n\r\n// Provider props\r\ninterface AnalyticsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function AnalyticsProvider({ children }: AnalyticsProviderProps) {\r\n  // Add session check\r\n  const { data: session, status } = useSession();\r\n  const isAuthenticated = status === \"authenticated\";\r\n  const userRole = session?.user?.role as Role | undefined;\r\n  const hasAccess = isAuthenticated && userRole !== undefined;\r\n\r\n  // User initialization state tracking\r\n  const [isUserInitialized, setIsUserInitialized] = useState(false);\r\n  \r\n  // Reference to track initial mounting\r\n  const isInitialMount = useRef(true);\r\n\r\n  // Track if analytics are needed\r\n  const shouldEnableAnalytics = useMemo(() => {\r\n    // Only enable if authenticated and has a role\r\n    return hasAccess && isUserInitialized;\r\n  }, [hasAccess, isUserInitialized]);\r\n\r\n  // Initialize user state once auth status is settled\r\n  useEffect(() => {\r\n    if (status !== \"loading\") {\r\n      setIsUserInitialized(true);\r\n      \r\n      // In development, log the analytics state\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.info(`Analytics provider initialized with auth status: ${status}, role: ${userRole || 'none'}`);\r\n      }\r\n    }\r\n  }, [status, userRole]);\r\n\r\n  // Class Participation state\r\n  const [classParticipationData, setClassParticipationData] = useState<ClassParticipationData | null>(null);\r\n  const [classParticipationError, setClassParticipationError] = useState<string | null>(null);\r\n  const [isLoadingClassParticipation, setIsLoadingClassParticipation] = useState(false);\r\n  const [timeFrame, setTimeFrame] = useState<TimeFrame>(\"last30days\");\r\n  \r\n  // Score Analytics state\r\n  const [scoreAnalyticsData, setScoreAnalyticsData] = useState<ScoreAnalyticsData | null>(null);\r\n  const [scoreAnalyticsError, setScoreAnalyticsError] = useState<string | null>(null);\r\n  const [isLoadingScoreAnalytics, setIsLoadingScoreAnalytics] = useState(false);\r\n  \r\n  // Quiz Completion Analytics state\r\n  const [quizCompletionData, setQuizCompletionData] = useState<QuizCompletionAnalyticsData | null>(null);\r\n  const [quizCompletionError, setQuizCompletionError] = useState<string | null>(null);\r\n  const [isLoadingQuizCompletion, setIsLoadingQuizCompletion] = useState(false);\r\n  \r\n  // Cache refs to store data with timestamps\r\n  const classParticipationCache = useRef<Map<TimeFrame, CachedData<ClassParticipationData>>>(new Map());\r\n  const quizCompletionCache = useRef<Map<TimeFrame, CachedData<QuizCompletionAnalyticsData>>>(new Map());\r\n  const scoreAnalyticsCache = useRef<Map<TimeFrame, CachedData<ScoreAnalyticsData>>>(new Map());\r\n  \r\n  // Fetch operation tracking refs with AbortController support\r\n  const fetchingClassParticipation = useRef<{isLoading: boolean, controller?: AbortController}>({isLoading: false});\r\n  const fetchingScoreAnalytics = useRef<{isLoading: boolean, controller?: AbortController}>({isLoading: false});\r\n  const fetchingQuizCompletion = useRef<{isLoading: boolean, controller?: AbortController}>({isLoading: false});\r\n  \r\n  const { toast } = useToast();\r\n  \r\n  // Clear cache when session changes\r\n  useEffect(() => {\r\n    if (status === \"unauthenticated\") {\r\n      // Clear all caches when user logs out\r\n      classParticipationCache.current.clear();\r\n      quizCompletionCache.current.clear();\r\n      scoreAnalyticsCache.current.clear();\r\n      \r\n      // Clear any in-progress fetches\r\n      if (fetchingClassParticipation.current.controller) {\r\n        fetchingClassParticipation.current.controller.abort();\r\n        fetchingClassParticipation.current = {isLoading: false};\r\n      }\r\n      \r\n      if (fetchingScoreAnalytics.current.controller) {\r\n        fetchingScoreAnalytics.current.controller.abort();\r\n        fetchingScoreAnalytics.current = {isLoading: false};\r\n      }\r\n      \r\n      if (fetchingQuizCompletion.current.controller) {\r\n        fetchingQuizCompletion.current.controller.abort();\r\n        fetchingQuizCompletion.current = {isLoading: false};\r\n      }\r\n      \r\n      // Reset states\r\n      setClassParticipationData(null);\r\n      setScoreAnalyticsData(null);\r\n      setQuizCompletionData(null);\r\n    }\r\n  }, [status]);\r\n  \r\n  // Check if cache is valid\r\n  const isCacheValid = <T,>(cache: CachedData<T> | null, expirationMinutes: number): boolean => {\r\n    if (!cache) return false;\r\n    \r\n    const now = Date.now();\r\n    const expirationMs = expirationMinutes * 60 * 1000;\r\n    return (now - cache.timestamp) < expirationMs;\r\n  };\r\n\r\n  // Memory management - clear old cached items\r\n  const cleanupCache = useCallback(() => {\r\n    const now = Date.now();\r\n    const MAX_CACHE_AGE_MS = 30 * 60 * 1000; // 30 minutes max cache age\r\n    \r\n    // Helper to clean a specific cache\r\n    const cleanSingleCache = <T,>(cache: Map<TimeFrame, CachedData<T>>) => {\r\n      for (const [key, value] of cache.entries()) {\r\n        if (now - value.timestamp > MAX_CACHE_AGE_MS) {\r\n          cache.delete(key);\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Clean all caches\r\n    cleanSingleCache(classParticipationCache.current);\r\n    cleanSingleCache(quizCompletionCache.current);\r\n    cleanSingleCache(scoreAnalyticsCache.current);\r\n  }, []);\r\n  \r\n  // Periodically clean cache to prevent memory leaks\r\n  useEffect(() => {\r\n    const intervalId = setInterval(cleanupCache, 5 * 60 * 1000); // Check every 5 minutes\r\n    return () => clearInterval(intervalId);\r\n  }, [cleanupCache]);\r\n\r\n  // Configuration for cache expiration times (in minutes)\r\n  const CACHE_EXPIRATION = {\r\n    classParticipation: 15, // 15 minutes\r\n    scoreAnalytics: 15,     // 15 minutes\r\n    quizCompletion: 15,     // 15 minutes\r\n  };\r\n  \r\n  // Check if current user has permission to access analytics\r\n  const canAccessAnalytics = useCallback(() => {\r\n    // Only allow authenticated users\r\n    if (!isAuthenticated) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.info(\"Analytics access denied: User not authenticated\");\r\n      }\r\n      return { allowed: false, reason: \"authentication\" };\r\n    }\r\n    \r\n    // Make sure user has a role\r\n    if (!userRole) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.info(\"Analytics access denied: User has no role assigned\");\r\n      }\r\n      return { allowed: false, reason: \"role\" };\r\n    }\r\n\r\n    // All authenticated users with roles can access their own analytics\r\n    return { allowed: true, reason: null };\r\n  }, [isAuthenticated, userRole]);\r\n\r\n  // Check if user has student access for student-specific analytics\r\n  const hasStudentAccess = useCallback(() => {\r\n    return isAuthenticated && userRole === Role.STUDENT;\r\n  }, [isAuthenticated, userRole]);\r\n\r\n  // Generic fetch function to reduce code duplication\r\n  const fetchWithAuth = useCallback(async <T,>(\r\n    url: string,\r\n    setLoading: (loading: boolean) => void,\r\n    setError: (error: string | null) => void,\r\n    setData: (data: T | null) => void,\r\n    fetchRef: React.MutableRefObject<{isLoading: boolean, controller?: AbortController}>,\r\n    cacheMap: Map<TimeFrame, CachedData<T>>,\r\n    cacheExpiration: number,\r\n    errorTitle: string,\r\n    provideFallback: boolean = false,\r\n    fallbackData: T | null = null,\r\n    additionalParams: Record<string, string> = {}\r\n  ): Promise<T | null> => {\r\n    // Check permissions before fetching\r\n    const accessCheck = canAccessAnalytics();\r\n    if (!accessCheck.allowed) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.info(`Analytics access denied for ${url}: ${accessCheck.reason}`);\r\n      }\r\n      return null;\r\n    }\r\n\r\n    // Check if already fetching\r\n    if (fetchRef.current.isLoading) {\r\n      // Cancel previous fetch if it's still in progress\r\n      if (fetchRef.current.controller) {\r\n        fetchRef.current.controller.abort();\r\n      }\r\n    }\r\n\r\n    // Check if we have valid cached data for this timeFrame\r\n    const cachedData = cacheMap.get(timeFrame);\r\n    if (cachedData && isCacheValid(cachedData, cacheExpiration)) {\r\n      setData(cachedData.data);\r\n      return cachedData.data;\r\n    }\r\n\r\n    // Create new abort controller\r\n    const controller = new AbortController();\r\n    fetchRef.current = { isLoading: true, controller };\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Build URL with timeFrame and additional parameters\r\n      const params = new URLSearchParams({\r\n        timeFrame,\r\n        ...additionalParams\r\n      });\r\n      const fullUrl = `${url}?${params.toString()}`;\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`Fetching analytics data from: ${fullUrl}`);\r\n      }\r\n\r\n      const response = await fetch(fullUrl, {\r\n        signal: controller.signal,\r\n        // Add cache control headers\r\n        headers: {\r\n          'Cache-Control': 'no-store',\r\n          'Pragma': 'no-cache'\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        let errorMessage: string;\r\n        try {\r\n        const errorData = await response.json();\r\n          errorMessage = errorData.error || `Error: ${response.status}`;\r\n        } catch (e) {\r\n          errorMessage = `Error: ${response.status}`;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error || `Failed to load data from ${url}`);\r\n      }\r\n      \r\n      const data = result.data;\r\n      \r\n      // Update cache with fresh data\r\n      cacheMap.set(timeFrame, {\r\n        data,\r\n        timestamp: Date.now(),\r\n        timeFrame\r\n      });\r\n      \r\n      setData(data);\r\n      return data;\r\n    } catch (err) {\r\n      // Only handle errors if the fetch wasn't aborted\r\n      if (!(err instanceof DOMException && err.name === 'AbortError')) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.error(`Error fetching ${url}:`, err);\r\n        }\r\n        \r\n        const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred\";\r\n        setError(errorMessage);\r\n        \r\n        // Show toast for unexpected errors\r\n      toast({\r\n        variant: \"destructive\",\r\n          title: errorTitle,\r\n          description: \"Please try again later or contact support if the problem persists.\",\r\n        });\r\n        \r\n        // Use fallback data if requested\r\n        if (provideFallback && fallbackData !== null) {\r\n          setData(fallbackData);\r\n          return fallbackData;\r\n        } else {\r\n          setData(null);\r\n          return null;\r\n        }\r\n      }\r\n      return null;\r\n    } finally {\r\n      if (fetchRef.current.controller === controller) {\r\n        // Only reset if this is the current controller\r\n        fetchRef.current = { isLoading: false };\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }, [timeFrame, toast, canAccessAnalytics]);\r\n  \r\n  // Fetch Class Participation data with enhanced error handling and caching\r\n  const fetchClassParticipation = useCallback(async (): Promise<ClassParticipationData | null> => {\r\n    // Skip API call if user is not a student\r\n    if (!hasStudentAccess()) {\r\n      console.info(\"Class participation analytics skipped: User is not a student\");\r\n      return generateEmptyClassParticipationData();\r\n    }\r\n\r\n    return fetchWithAuth<ClassParticipationData>(\r\n      '/api/users/me/class-participation-analytics',\r\n      setIsLoadingClassParticipation,\r\n      setClassParticipationError,\r\n      setClassParticipationData,\r\n      fetchingClassParticipation,\r\n      classParticipationCache.current,\r\n      CACHE_EXPIRATION.classParticipation,\r\n      \"Unable to load class analytics\",\r\n      true, // Provide fallback\r\n      generateEmptyClassParticipationData(),\r\n      { includePublicQuizzes: 'true' } // Include public quizzes in analytics\r\n    );\r\n  }, [fetchWithAuth, hasStudentAccess]);\r\n  \r\n  // Fetch score analytics data with enhanced error handling and caching\r\n  const fetchScoreAnalytics = useCallback(async (): Promise<ScoreAnalyticsData | null> => {\r\n    // Skip API call if user is not a student\r\n    if (!hasStudentAccess()) {\r\n      console.info(\"Score analytics skipped: User is not a student. Setting to empty data.\");\r\n      const emptyData = generateEmptyScoreAnalyticsData();\r\n      setScoreAnalyticsData(emptyData);\r\n      setIsLoadingScoreAnalytics(false); // Ensure loading state is also reset\r\n      setScoreAnalyticsError(null);      // Clear any previous errors\r\n      return emptyData;\r\n    }\r\n\r\n    return fetchWithAuth<ScoreAnalyticsData>(\r\n      '/api/users/me/score-analytics',\r\n      setIsLoadingScoreAnalytics,\r\n      setScoreAnalyticsError,\r\n      setScoreAnalyticsData,\r\n      fetchingScoreAnalytics,\r\n      scoreAnalyticsCache.current,\r\n      CACHE_EXPIRATION.scoreAnalytics,\r\n      \"Unable to load score analytics\",\r\n      true, // Provide fallback\r\n      generateEmptyScoreAnalyticsData(),\r\n      { includePublicQuizzes: 'true' } // Include public quizzes in analytics\r\n    );\r\n  }, [fetchWithAuth, hasStudentAccess]);\r\n\r\n  // Fetch Quiz Completion Analytics data with enhanced error handling and caching\r\n  const fetchQuizCompletion = useCallback(async (): Promise<QuizCompletionAnalyticsData | null> => {\r\n    // Skip API call if user is not a student\r\n    if (!hasStudentAccess()) {\r\n      console.info(\"Quiz completion analytics skipped: User is not a student\");\r\n      return generateEmptyQuizCompletionAnalyticsData();\r\n    }\r\n    \r\n    // Set loading state\r\n    setIsLoadingQuizCompletion(true);\r\n    setQuizCompletionError(null);\r\n    \r\n    try {\r\n      console.log(\"Fetching quiz completion data with timeFrame:\", timeFrame); // Debug log\r\n      \r\n      // Check cache first if enabled\r\n      if (shouldEnableAnalytics) {\r\n        const cachedData = quizCompletionCache.current.get(timeFrame);\r\n        if (cachedData && isCacheValid(cachedData, CACHE_EXPIRATION.quizCompletion)) {\r\n          console.log(\"Using cached quiz completion data\"); // Debug log\r\n          setQuizCompletionData(cachedData.data);\r\n          setIsLoadingQuizCompletion(false);\r\n          return cachedData.data;\r\n        }\r\n      }\r\n      \r\n      // Build URL with timeFrame\r\n      const url = `/api/users/me/quiz-completion-analytics?timeFrame=${timeFrame}`;\r\n      console.log(\"Fetching from URL:\", url); // Debug log\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      // Log response status for debugging\r\n      console.log(\"Quiz completion API response status:\", response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || `Error: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log(\"Quiz completion API response:\", result); // Debug log\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.message || \"Failed to fetch quiz completion analytics\");\r\n      }\r\n      \r\n      // Update state with fetched data\r\n      setQuizCompletionData(transformQuizCompletionAPIData(result.data));\r\n      \r\n      // Cache the data if caching is enabled\r\n      if (shouldEnableAnalytics) {\r\n        quizCompletionCache.current.set(timeFrame, {\r\n          data: transformQuizCompletionAPIData(result.data),\r\n          timestamp: Date.now(),\r\n          timeFrame,\r\n        });\r\n      }\r\n      \r\n      return transformQuizCompletionAPIData(result.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching quiz completion analytics:\", error);\r\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred\";\r\n      setQuizCompletionError(errorMessage);\r\n      return null;\r\n    } finally {\r\n      setIsLoadingQuizCompletion(false);\r\n    }\r\n  }, [timeFrame, shouldEnableAnalytics, hasStudentAccess]);\r\n\r\n  // Track if initial fetches have been done\r\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\r\n  \r\n  // Pre-fetch data when the user first loads a page with the provider\r\n  useEffect(() => {\r\n    if (isInitialMount.current && shouldEnableAnalytics && !hasInitialFetch) {\r\n      isInitialMount.current = false;\r\n      \r\n      // Delay fetch slightly to prioritize UI rendering\r\n      const timerId = setTimeout(() => {\r\n        // Check access again since status could have changed\r\n        const accessCheck = canAccessAnalytics();\r\n        if (accessCheck.allowed) {\r\n          // Use low priority fetch to get initial data\r\n          Promise.allSettled([\r\n            fetchClassParticipation(),\r\n            fetchScoreAnalytics(),\r\n            fetchQuizCompletion()\r\n          ]).finally(() => {\r\n            setHasInitialFetch(true);\r\n          });\r\n        } else {\r\n          // Still mark as fetched to avoid unnecessary attempts\r\n          setHasInitialFetch(true);\r\n        }\r\n      }, 100); // Small delay to let UI render first\r\n      \r\n      return () => clearTimeout(timerId);\r\n    }\r\n  }, [shouldEnableAnalytics, hasInitialFetch, fetchClassParticipation, fetchScoreAnalytics, fetchQuizCompletion, canAccessAnalytics]);\r\n\r\n  // Handle time frame changes\r\n  useEffect(() => {\r\n    // Skip the initial render effect\r\n    if (!hasInitialFetch) {\r\n      return;\r\n    }\r\n    \r\n    // Only fetch if analytics are enabled and user has permission\r\n    if (!shouldEnableAnalytics) {\r\n      return;\r\n    }\r\n    \r\n    // Only fetch if user has permission\r\n    const accessCheck = canAccessAnalytics();\r\n    if (timeFrame && accessCheck.allowed) {\r\n      // Use Promise.all to fetch data in parallel but manage errors separately\r\n      Promise.allSettled([\r\n        fetchClassParticipation(),\r\n        fetchScoreAnalytics(),\r\n        fetchQuizCompletion()\r\n      ]).catch(error => {\r\n        // This catch will only trigger for errors in the Promise.allSettled itself\r\n        // Individual promise rejections are handled by the fetchWithAuth function\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.error(\"Error during parallel analytics data fetch:\", error);\r\n        }\r\n      });\r\n    } else if (process.env.NODE_ENV === 'development') {\r\n      console.info(`Skip data fetching: ${accessCheck.reason || 'unknown reason'}`);\r\n    }\r\n  }, [timeFrame, hasInitialFetch, fetchClassParticipation, fetchQuizCompletion, fetchScoreAnalytics, canAccessAnalytics, shouldEnableAnalytics]);\r\n  \r\n  // Value for the context provider\r\n  const value = {\r\n    classParticipationData,\r\n    classParticipationError,\r\n    isLoadingClassParticipation,\r\n    timeFrame,\r\n    setTimeFrame,\r\n    fetchClassParticipation,\r\n    \r\n    scoreAnalyticsData,\r\n    scoreAnalyticsError,\r\n    isLoadingScoreAnalytics,\r\n    fetchScoreAnalytics,\r\n\r\n    quizCompletionData,\r\n    quizCompletionError,\r\n    isLoadingQuizCompletion,\r\n    fetchQuizCompletion,\r\n  };\r\n  \r\n  // Skip provider rendering if analytics are definitely disabled (user logged out)\r\n  // This prevents unnecessary rendering and initialization when not needed\r\n  if (status === \"unauthenticated\") {\r\n    return <>{children}</>;\r\n  }\r\n  \r\n  return (\r\n    <AnalyticsContext.Provider value={value}>\r\n      {children}\r\n    </AnalyticsContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook to use the analytics context\r\nexport function useAnalytics(): AnalyticsContextType {\r\n  const context = useContext(AnalyticsContext);\r\n  const { data: session, status } = useSession();\r\n  \r\n  // If we're using this hook outside of the provider\r\n  if (context === undefined) {\r\n    throw new Error(\"useAnalytics must be used within an AnalyticsProvider\");\r\n  }\r\n  \r\n  // Return a safe fallback state if user is definitely unauthenticated\r\n  // This prevents unhandled errors in components that expect the context\r\n  if (status === \"unauthenticated\") {\r\n    return {\r\n      classParticipationData: null,\r\n      classParticipationError: \"Authentication required\",\r\n      isLoadingClassParticipation: false,\r\n      timeFrame: \"last30days\",\r\n      setTimeFrame: (_: TimeFrame) => {},\r\n      fetchClassParticipation: async () => null,\r\n      \r\n      scoreAnalyticsData: null,\r\n      scoreAnalyticsError: \"Authentication required\",\r\n      isLoadingScoreAnalytics: false,\r\n      fetchScoreAnalytics: async () => null,\r\n\r\n      quizCompletionData: null,\r\n      quizCompletionError: \"Authentication required\",\r\n      isLoadingQuizCompletion: false,\r\n      fetchQuizCompletion: async () => null,\r\n    };\r\n  }\r\n  \r\n  return context;\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1416, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/providers/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ReactNode } from \"react\";\r\nimport { AnalyticsProvider } from \"./analytics-provider\";\r\n\r\ninterface ProvidersProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Now AnalyticsProvider can be used safely because SessionProvider \r\n// is already in place from the RootLayout\r\nexport function Providers({ children }: ProvidersProps) {\r\n  return (\r\n    <AnalyticsProvider>\r\n      {children}\r\n    </AnalyticsProvider>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAGA;AAHA;;;AAWO,SAAS,UAAU,EAAE,QAAQ,EAAkB;IACpD,qBACE,6LAAC,oJAAA,CAAA,oBAAiB;kBACf;;;;;;AAGP;KANgB","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,6LAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,6LAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,6LAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/quizzes/%5BquizId%5D/quiz-details.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, Suspense } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  Clock, \n  Calendar, \n  User, \n  AlertCircle, \n  CheckCircle, \n  Lock,\n  FileText,\n  Timer,\n  Award,\n  Hourglass,\n  CalendarDays,\n  ListChecks\n} from \"lucide-react\";\nimport { QuizType } from \"@/app/dashboard/student/types/types\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { format } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";\n\ninterface QuizDetailsProps {\n  quizId: string;\n}\n\nexport function QuizDetails({ quizId }: QuizDetailsProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [quiz, setQuiz] = useState<QuizType | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isStarting, setIsStarting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Fetch quiz details\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      try {\n        const response = await fetch(`/api/users/me/quizzes/${quizId}`);\n        const data = await response.json();\n        \n        if (!response.ok) {\n          throw new Error(data.message || \"Failed to fetch quiz details\");\n        }\n        \n        if (data.success) {\n          setQuiz(data.data);\n        } else {\n          throw new Error(data.message || \"Failed to fetch quiz details\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching quiz details:\", err);\n        setError((err as Error).message);\n        toast({\n          title: \"Error\",\n          description: (err as Error).message,\n          variant: \"destructive\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchQuizDetails();\n  }, [quizId, toast]);\n  \n  // Handle quiz start or continue\n  const handleStartQuiz = async () => {\n    if (!quiz || quiz.isLocked) return;\n    \n    setIsStarting(true);\n    \n    try {\n      // For an already started attempt\n      if (quiz.status === \"ongoing\" && quiz.latestAttemptId && !quiz.isLatestAttemptComplete) {\n        router.push(`/dashboard/student/quizzes/${quizId}/attempt?attemptId=${quiz.latestAttemptId}`);\n        return;\n      }\n      \n      // Start a new attempt\n      const response = await fetch('/api/attempts/start', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ quizId }),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to start quiz attempt\");\n      }\n      \n      if (data.success && data.data?.attemptId) {\n        router.push(`/dashboard/student/quizzes/${quizId}/attempt?attemptId=${data.data.attemptId}`);\n      } else {\n        throw new Error(\"Failed to create quiz attempt\");\n      }\n    } catch (err) {\n      console.error(\"Error starting quiz:\", err);\n      toast({\n        title: \"Error\",\n        description: (err as Error).message,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsStarting(false);\n    }\n  };\n  \n  // Format date for display\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return \"Not set\";\n    \n    try {\n      return format(new Date(dateString), \"PPP 'at' p\");\n    } catch (e) {\n      return \"Invalid date\";\n    }\n  };\n  \n  // Get status badge style\n  const getStatusBadgeStyle = (status: string) => {\n    switch (status) {\n      case \"upcoming\":\n        return \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\";\n      case \"ongoing\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\";\n      case \"completed\":\n        return \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\";\n      case \"expired\":\n        return \"bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300\";\n      default:\n        return \"\";\n    }\n  };\n  \n  // Get status text\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case \"upcoming\":\n        return \"Upcoming\";\n      case \"ongoing\":\n        return \"Available Now\";\n      case \"completed\":\n        return \"Completed\";\n      case \"expired\":\n        return \"Expired\";\n      default:\n        return status;\n    }\n  };\n  \n  // Get action button text\n  const getActionText = () => {\n    if (!quiz) return \"Loading...\";\n    if (quiz.isLocked) return \"Locked\";\n    \n    switch (quiz.status) {\n      case \"upcoming\":\n        return \"Quiz Not Available Yet\";\n      case \"ongoing\":\n        return quiz.currentAttempts && quiz.currentAttempts > 0 && !quiz.isLatestAttemptComplete\n          ? \"Continue Quiz\" \n          : \"Start Quiz\";\n      case \"completed\":\n        return \"View Results\";\n      case \"expired\":\n        return \"Expired\";\n      default:\n        return \"View Quiz\";\n    }\n  };\n  \n  // Handle action button click\n  const handleActionClick = () => {\n    if (!quiz) return;\n    \n    if (quiz.isLocked) return;\n    \n    switch (quiz.status) {\n      case \"upcoming\":\n        // Do nothing for upcoming quizzes\n        return;\n      case \"ongoing\":\n        // Start or continue the quiz\n        handleStartQuiz();\n        return;\n      case \"completed\":\n        // Navigate to results page\n        if (quiz.bestAttemptId) {\n          router.push(`/dashboard/student/quizzes/results/${quiz.bestAttemptId}`);\n        }\n        return;\n      case \"expired\":\n      default:\n        // Just view quiz details\n        return;\n    }\n  };\n  \n  if (isLoading) {\n    return (\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        {/* Left column - Quiz details */}\n        <div className=\"space-y-6\">\n          <Skeleton className=\"h-8 w-3/4\" />\n          <Skeleton className=\"h-5 w-2/3\" />\n          <Skeleton className=\"h-24 w-full\" />\n        </div>\n        \n        {/* Right column - Quiz actions */}\n        <div className=\"space-y-6\">\n          <Skeleton className=\"h-64 w-full\" />\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Error</AlertTitle>\n        <AlertDescription>{error}</AlertDescription>\n      </Alert>\n    );\n  }\n  \n  if (!quiz) {\n    return (\n      <Alert variant=\"default\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Quiz Not Found</AlertTitle>\n        <AlertDescription>The quiz you're looking for could not be found.</AlertDescription>\n      </Alert>\n    );\n  }\n  \n  return (\n    <div className=\"grid gap-6 lg:grid-cols-2\">\n      {/* Left column - Quiz details */}\n      <div className=\"space-y-6\">\n        {/* Quiz status and badges */}\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          {/* Status badge */}\n          <Badge className={cn(\"text-xs\", getStatusBadgeStyle(quiz.status))}>\n            {getStatusText(quiz.status)}\n          </Badge>\n          \n          {/* Formal badge if applicable */}\n          {quiz.isFormal && (\n            <Badge \n              variant=\"outline\" \n              className=\"border-primary/40 text-primary dark:border-primary/30\"\n            >\n              Formal Assessment\n            </Badge>\n          )}\n          \n          {/* Locked badge if applicable */}\n          {quiz.isLocked && (\n            <Badge variant=\"outline\" className=\"border-destructive/40 text-destructive\">\n              <Lock className=\"h-3 w-3 mr-1\" />\n              Locked\n            </Badge>\n          )}\n        </div>\n        \n        <h1 className=\"text-2xl font-bold\">{quiz.title}</h1>\n        \n        {/* Quiz description */}\n        {quiz.description && (\n          <div className=\"text-muted-foreground\">\n            {quiz.description}\n          </div>\n        )}\n        \n        {/* Detailed info */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-base\">Quiz Information</CardTitle>\n          </CardHeader>\n          <CardContent className=\"grid gap-4\">\n            {/* Class info */}\n            {quiz.className && (\n              <div className=\"flex justify-between items-start text-sm\">\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <FileText className=\"h-4 w-4\" />\n                  <span>Class</span>\n                </div>\n                <div className=\"text-right font-medium\">\n                  {quiz.className}\n                  {quiz.subject && <div className=\"text-xs text-muted-foreground\">{quiz.subject}</div>}\n                </div>\n              </div>\n            )}\n            \n            {/* Teacher info */}\n            {quiz.teacherName && (\n              <div className=\"flex justify-between items-center text-sm\">\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <User className=\"h-4 w-4\" />\n                  <span>Teacher</span>\n                </div>\n                <div className=\"font-medium\">\n                  {quiz.teacherName}\n                </div>\n              </div>\n            )}\n            \n            {/* Time limit */}\n            <div className=\"flex justify-between items-center text-sm\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <Timer className=\"h-4 w-4\" />\n                <span>Time Limit</span>\n              </div>\n              <div className=\"font-medium\">\n                {quiz.durationMinutes} minutes\n              </div>\n            </div>\n            \n            {/* Question count */}\n            <div className=\"flex justify-between items-center text-sm\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <ListChecks className=\"h-4 w-4\" />\n                <span>Questions</span>\n              </div>\n              <div className=\"font-medium\">\n                {quiz.totalQuestions}\n              </div>\n            </div>\n            \n            {/* Start date */}\n            {quiz.startDate && (\n              <div className=\"flex justify-between items-start text-sm\">\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <Calendar className=\"h-4 w-4\" />\n                  <span>Opens</span>\n                </div>\n                <div className=\"text-right font-medium\">\n                  {formatDate(quiz.startDate)}\n                </div>\n              </div>\n            )}\n            \n            {/* End date */}\n            {quiz.endDate && (\n              <div className=\"flex justify-between items-start text-sm\">\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <CalendarDays className=\"h-4 w-4\" />\n                  <span>Closes</span>\n                </div>\n                <div className=\"text-right font-medium\">\n                  {formatDate(quiz.endDate)}\n                </div>\n              </div>\n            )}\n            \n            {/* Attempts info */}\n            {quiz.attemptLimit && (\n              <div className=\"flex justify-between items-center text-sm\">\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <Hourglass className=\"h-4 w-4\" />\n                  <span>Attempts</span>\n                </div>\n                <div className=\"font-medium\">\n                  {quiz.currentAttempts || 0} / {quiz.attemptLimit}\n                </div>\n              </div>\n            )}\n            \n            {/* Highest score (if completed) */}\n            {quiz.highestScore !== null && quiz.status === \"completed\" && (\n              <div className=\"flex justify-between items-center text-sm\">\n                <div className=\"flex items-center gap-2 text-muted-foreground\">\n                  <Award className=\"h-4 w-4\" />\n                  <span>Best Score</span>\n                </div>\n                <div className=\"font-medium\">\n                  {quiz.highestScore}%\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n        \n        {/* Optional instructions */}\n        {quiz.instructions && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Instructions</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-sm\">\n                {quiz.instructions}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n      \n      {/* Right column - Quiz actions */}\n      <div className=\"space-y-6\">\n        {/* Action card */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Quiz Status</CardTitle>\n            <CardDescription>\n              {quiz.isLocked ? quiz.lockReason : getStatusText(quiz.status)}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {/* Different content based on status */}\n            {quiz.status === \"upcoming\" && (\n              <Alert>\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertTitle>Not Available Yet</AlertTitle>\n                <AlertDescription>\n                  This quiz will be available from {formatDate(quiz.startDate)}\n                </AlertDescription>\n              </Alert>\n            )}\n            \n            {quiz.status === \"ongoing\" && !quiz.isLocked && (\n              <Alert variant=\"info\">\n                <Clock className=\"h-4 w-4\" />\n                <AlertTitle>Quiz is Available</AlertTitle>\n                <AlertDescription>\n                  You can take this quiz now. Make sure you have enough time to complete it in one session.\n                </AlertDescription>\n              </Alert>\n            )}\n            \n            {quiz.status === \"completed\" && (\n              <Alert variant=\"success\">\n                <CheckCircle className=\"h-4 w-4\" />\n                <AlertTitle>Quiz Completed</AlertTitle>\n                <AlertDescription>\n                  You have completed this quiz with a score of {quiz.highestScore}%.\n                </AlertDescription>\n              </Alert>\n            )}\n            \n            {quiz.status === \"expired\" && (\n              <Alert variant=\"warning\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertTitle>Quiz Expired</AlertTitle>\n                <AlertDescription>\n                  This quiz is no longer available for submissions.\n                </AlertDescription>\n              </Alert>\n            )}\n            \n            {quiz.isLocked && (\n              <Alert variant=\"destructive\">\n                <Lock className=\"h-4 w-4\" />\n                <AlertTitle>Quiz Locked</AlertTitle>\n                <AlertDescription>\n                  {quiz.lockReason || \"This quiz is not available to you at this time.\"}\n                </AlertDescription>\n              </Alert>\n            )}\n          </CardContent>\n          <CardFooter>\n            <div className=\"w-full space-y-4\">\n              {/* Primary action button */}\n              <Button \n                className=\"w-full\" \n                disabled={quiz.isLocked || quiz.status === \"upcoming\" || quiz.status === \"expired\"}\n                onClick={handleActionClick}\n                isLoading={isStarting}\n              >\n                {getActionText()}\n              </Button>\n              \n              {/* Back to quizzes list */}\n              <Button variant=\"outline\" className=\"w-full\" asChild>\n                <Link href=\"/dashboard/student/quizzes\">Back to My Quizzes</Link>\n              </Button>\n            </div>\n          </CardFooter>\n        </Card>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> & {\n    variant?: \"default\" | \"muted\" | \"accent\" | \"gradient\"\n  }\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, variant = \"default\", ...props },\n    ref\n  ) => {\n    const variantClasses = {\n      default: \"bg-border\",\n      muted: \"bg-muted\",\n      accent: \"bg-accent/30\",\n      gradient: \"bg-gradient-to-r from-transparent via-border/70 to-transparent\"\n    }\n\n    return (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n          \"shrink-0\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n          variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  )\n  }\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAM/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAC3F;IAEA,MAAM,iBAAiB;QACrB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IAEA,qBACA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,YACF,gBAAgB,eAAe,mBAAmB,kBAChD,cAAc,CAAC,QAAQ,EACzB;QAED,GAAG,KAAK;;;;;;AAGb;;AAEF,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}}]
}
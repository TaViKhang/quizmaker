{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/cards/StatCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ArrowDown, ArrowUp } from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface StatCardProps {\r\n  /**\r\n   * Title of the stat card\r\n   */\r\n  title: string;\r\n  /**\r\n   * Current value to display\r\n   */\r\n  value: string | number;\r\n  /**\r\n   * Icon to display in the card header\r\n   */\r\n  icon: React.ReactNode;\r\n  /**\r\n   * Loading state\r\n   * @default false\r\n   */\r\n  isLoading?: boolean;\r\n  /**\r\n   * Additional description or explanation for the main value\r\n   */\r\n  description?: string;\r\n  /**\r\n   * Optional previous value to calculate and display trend\r\n   */\r\n  previousValue?: number;\r\n  /**\r\n   * Unit for the value and previousValue (e.g., '%', ' quizzes')\r\n   * @default ''\r\n   */\r\n  unit?: string;\r\n  /**\r\n   * Additional CSS classes\r\n   */\r\n  className?: string;\r\n  /**\r\n   * Icon color class\r\n   * @default \"text-primary\"\r\n   */\r\n  iconColor?: string;\r\n  /**\r\n   * On click handler for interactive cards\r\n   */\r\n  onClick?: () => void;\r\n  /**\r\n   * Whether to show pointer cursor and hover effect\r\n   * @default false\r\n   */\r\n  interactive?: boolean;\r\n}\r\n\r\n// Define animation variants\r\nconst cardVariants = {\r\n  initial: { \r\n    scale: 1 \r\n  },\r\n  hover: { \r\n    scale: 1.02,\r\n    boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\r\n    transition: {\r\n      type: \"spring\",\r\n      stiffness: 400,\r\n      damping: 15\r\n    }\r\n  },\r\n  tap: { \r\n    scale: 0.98,\r\n    transition: {\r\n      type: \"spring\",\r\n      stiffness: 400,\r\n      damping: 15\r\n    }\r\n  }\r\n};\r\n\r\n// Define trend arrow animation variants\r\nconst trendArrowVariants = {\r\n  initial: { y: 0 },\r\n  animate: (direction: \"up\" | \"down\") => ({\r\n    y: direction === \"up\" ? -2 : 2,\r\n    transition: {\r\n      repeat: Infinity,\r\n      repeatType: \"reverse\" as const,\r\n      duration: 0.8\r\n    }\r\n  })\r\n};\r\n\r\n/**\r\n * Reusable stat card component for dashboards\r\n */\r\nexport function StatCard({\r\n  title,\r\n  value,\r\n  icon,\r\n  isLoading = false,\r\n  description,\r\n  previousValue,\r\n  unit = '',\r\n  className,\r\n  iconColor = \"text-primary\",\r\n  onClick,\r\n  interactive = false,\r\n}: StatCardProps) {\r\n  let trendPercentage: number | null = null;\r\n  let trendDirection: \"up\" | \"down\" | \"neutral\" = \"neutral\";\r\n\r\n  if (previousValue !== undefined && typeof value === 'number' && previousValue !== null) {\r\n    if (previousValue === 0 && value > 0) {\r\n      trendPercentage = 100; // Or handle as 'new' or 'increased significantly'\r\n      trendDirection = \"up\";\r\n    } else if (previousValue === 0 && value === 0) {\r\n        trendPercentage = 0;\r\n        trendDirection = \"neutral\";\r\n    } else if (previousValue !== 0) {\r\n      trendPercentage = parseFloat((((value - previousValue) / previousValue) * 100).toFixed(1));\r\n      if (trendPercentage > 0) trendDirection = \"up\";\r\n      if (trendPercentage < 0) trendDirection = \"down\";\r\n    }\r\n  }\r\n\r\n  const displayValue = typeof value === 'number' ? `${value}${unit}` : value;\r\n  const displayPreviousValue = previousValue !== undefined ? `${previousValue}${unit}` : '';\r\n\r\n  if (interactive && !isLoading) {\r\n    return (\r\n      <motion.div\r\n        variants={cardVariants}\r\n        initial=\"initial\"\r\n        whileHover=\"hover\"\r\n        whileTap=\"tap\"\r\n        onClick={onClick}\r\n        className={cn(\r\n          \"rounded-lg border border-border bg-card text-card-foreground shadow-sm transition-all duration-200 overflow-hidden\",\r\n          interactive && \"cursor-pointer transition-colors hover:border-border/80 hover:bg-accent/40\",\r\n          className\r\n        )}\r\n      >\r\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n          <CardTitle className=\"text-sm font-medium flex items-center gap-1\">\r\n            {title}\r\n            {interactive && !isLoading && (\r\n              <motion.svg \r\n                width=\"12\" \r\n                height=\"12\" \r\n                viewBox=\"0 0 24 24\" \r\n                fill=\"none\" \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                className=\"text-muted-foreground ml-1 opacity-70\"\r\n                animate={{ x: [0, 4, 0] }}\r\n                transition={{ \r\n                  repeat: Infinity, \r\n                  repeatType: \"reverse\", \r\n                  duration: 1.5,\r\n                  ease: \"easeInOut\",\r\n                  repeatDelay: 1\r\n                }}\r\n              >\r\n                <path \r\n                  d=\"M9 5L15 12L9 19\" \r\n                  stroke=\"currentColor\" \r\n                  strokeWidth=\"2\" \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </motion.svg>\r\n            )}\r\n          </CardTitle>\r\n          <div className={cn(\"h-4 w-4\", iconColor)}>\r\n            {icon}\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <motion.div \r\n            className=\"text-2xl font-bold\"\r\n            initial={{ opacity: 0, y: 5 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            {displayValue}\r\n          </motion.div>\r\n          {description && (\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              {description}\r\n            </p>\r\n          )}\r\n          {trendPercentage !== null && (\r\n            <div className={cn(\r\n              \"text-xs flex items-center mt-1\",\r\n              trendDirection === \"up\" ? \"text-emerald-600\"\r\n                : trendDirection === \"down\" ? \"text-red-600\"\r\n                : \"text-muted-foreground\"\r\n            )}>\r\n              {trendDirection === \"up\" && (\r\n                <motion.div\r\n                  variants={trendArrowVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  custom=\"up\"\r\n                >\r\n                  <ArrowUp className=\"h-3 w-3 mr-0.5\" />\r\n                </motion.div>\r\n              )}\r\n              {trendDirection === \"down\" && (\r\n                <motion.div\r\n                  variants={trendArrowVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  custom=\"down\"\r\n                >\r\n                  <ArrowDown className=\"h-3 w-3 mr-0.5\" />\r\n                </motion.div>\r\n              )}\r\n              {trendPercentage !== 0 ? `${Math.abs(trendPercentage)}%` : ''}\r\n              {trendPercentage === 0 && trendDirection === \"neutral\" ? \"No change\" : \r\n                (trendPercentage !== 0 ? (trendDirection === \"up\" ? \" increase\" : \" decrease\") : '')}\r\n              {previousValue !== undefined && trendPercentage !== 0 && <span className=\"text-muted-foreground ml-1\">from {displayPreviousValue}</span>}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className={cn(\"overflow-hidden\", className)}>\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n        <CardTitle className=\"text-sm font-medium flex items-center gap-1\">\r\n          {title}\r\n        </CardTitle>\r\n        <div className={cn(\"h-4 w-4\", iconColor)}>\r\n          {icon}\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        {isLoading ? (\r\n          <>\r\n            <Skeleton className=\"h-8 w-20 mb-1\" />\r\n            <Skeleton className=\"h-4 w-32\" />\r\n            {previousValue !== undefined && <Skeleton className=\"h-3 w-24 mt-1\" />} \r\n          </>\r\n        ) : (\r\n          <>\r\n            <motion.div \r\n              className=\"text-2xl font-bold\"\r\n              initial={{ opacity: 0, y: 5 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              {displayValue}\r\n            </motion.div>\r\n            {description && (\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {description}\r\n              </p>\r\n            )}\r\n            {trendPercentage !== null && (\r\n              <div className={cn(\r\n                \"text-xs flex items-center mt-1\",\r\n                trendDirection === \"up\" ? \"text-emerald-600\"\r\n                  : trendDirection === \"down\" ? \"text-red-600\"\r\n                  : \"text-muted-foreground\"\r\n              )}>\r\n                {trendDirection === \"up\" && (\r\n                  <motion.div\r\n                    variants={trendArrowVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    custom=\"up\"\r\n                  >\r\n                    <ArrowUp className=\"h-3 w-3 mr-0.5\" />\r\n                  </motion.div>\r\n                )}\r\n                {trendDirection === \"down\" && (\r\n                  <motion.div\r\n                    variants={trendArrowVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    custom=\"down\"\r\n                  >\r\n                    <ArrowDown className=\"h-3 w-3 mr-0.5\" />\r\n                  </motion.div>\r\n                )}\r\n                {trendPercentage !== 0 ? `${Math.abs(trendPercentage)}%` : ''}\r\n                {trendPercentage === 0 && trendDirection === \"neutral\" ? \"No change\" : \r\n                 (trendPercentage !== 0 ? (trendDirection === \"up\" ? \" increase\" : \" decrease\") : '')}\r\n                {previousValue !== undefined && trendPercentage !== 0 && <span className=\"text-muted-foreground ml-1\">from {displayPreviousValue}</span>}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AANA;;;;;;;AA2DA,4BAA4B;AAC5B,MAAM,eAAe;IACnB,SAAS;QACP,OAAO;IACT;IACA,OAAO;QACL,OAAO;QACP,WAAW;QACX,YAAY;YACV,MAAM;YACN,WAAW;YACX,SAAS;QACX;IACF;IACA,KAAK;QACH,OAAO;QACP,YAAY;YACV,MAAM;YACN,WAAW;YACX,SAAS;QACX;IACF;AACF;AAEA,wCAAwC;AACxC,MAAM,qBAAqB;IACzB,SAAS;QAAE,GAAG;IAAE;IAChB,SAAS,CAAC,YAA6B,CAAC;YACtC,GAAG,cAAc,OAAO,CAAC,IAAI;YAC7B,YAAY;gBACV,QAAQ;gBACR,YAAY;gBACZ,UAAU;YACZ;QACF,CAAC;AACH;AAKO,SAAS,SAAS,EACvB,KAAK,EACL,KAAK,EACL,IAAI,EACJ,YAAY,KAAK,EACjB,WAAW,EACX,aAAa,EACb,OAAO,EAAE,EACT,SAAS,EACT,YAAY,cAAc,EAC1B,OAAO,EACP,cAAc,KAAK,EACL;IACd,IAAI,kBAAiC;IACrC,IAAI,iBAA4C;IAEhD,IAAI,kBAAkB,aAAa,OAAO,UAAU,YAAY,kBAAkB,MAAM;QACtF,IAAI,kBAAkB,KAAK,QAAQ,GAAG;YACpC,kBAAkB,KAAK,kDAAkD;YACzE,iBAAiB;QACnB,OAAO,IAAI,kBAAkB,KAAK,UAAU,GAAG;YAC3C,kBAAkB;YAClB,iBAAiB;QACrB,OAAO,IAAI,kBAAkB,GAAG;YAC9B,kBAAkB,WAAW,CAAC,AAAC,CAAC,QAAQ,aAAa,IAAI,gBAAiB,GAAG,EAAE,OAAO,CAAC;YACvF,IAAI,kBAAkB,GAAG,iBAAiB;YAC1C,IAAI,kBAAkB,GAAG,iBAAiB;QAC5C;IACF;IAEA,MAAM,eAAe,OAAO,UAAU,WAAW,GAAG,QAAQ,MAAM,GAAG;IACrE,MAAM,uBAAuB,kBAAkB,YAAY,GAAG,gBAAgB,MAAM,GAAG;IAEvF,IAAI,eAAe,CAAC,WAAW;QAC7B,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;YACT,UAAU;YACV,SAAQ;YACR,YAAW;YACX,UAAS;YACT,SAAS;YACT,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sHACA,eAAe,8EACf;;8BAGF,6LAAC,4HAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,6LAAC,4HAAA,CAAA,YAAS;4BAAC,WAAU;;gCAClB;gCACA,eAAe,CAAC,2BACf,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,OAAM;oCACN,QAAO;oCACP,SAAQ;oCACR,MAAK;oCACL,OAAM;oCACN,WAAU;oCACV,SAAS;wCAAE,GAAG;4CAAC;4CAAG;4CAAG;yCAAE;oCAAC;oCACxB,YAAY;wCACV,QAAQ;wCACR,YAAY;wCACZ,UAAU;wCACV,MAAM;wCACN,aAAa;oCACf;8CAEA,cAAA,6LAAC;wCACC,GAAE;wCACF,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;;;;;;;;;;;;;;;;;sCAKvB,6LAAC;4BAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,WAAW;sCAC3B;;;;;;;;;;;;8BAGL,6LAAC,4HAAA,CAAA,cAAW;;sCACV,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,WAAU;4BACV,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;sCAE3B;;;;;;wBAEF,6BACC,6LAAC;4BAAE,WAAU;sCACV;;;;;;wBAGJ,oBAAoB,sBACnB,6LAAC;4BAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACf,kCACA,mBAAmB,OAAO,qBACtB,mBAAmB,SAAS,iBAC5B;;gCAEH,mBAAmB,sBAClB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,6LAAC,+MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;;;;;;gCAGtB,mBAAmB,wBAClB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;gCAGxB,oBAAoB,IAAI,GAAG,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG;gCAC1D,oBAAoB,KAAK,mBAAmB,YAAY,cACtD,oBAAoB,IAAK,mBAAmB,OAAO,cAAc,cAAe;gCAClF,kBAAkB,aAAa,oBAAoB,mBAAK,6LAAC;oCAAK,WAAU;;wCAA6B;wCAAM;;;;;;;;;;;;;;;;;;;;;;;;;IAMxH;IAEA,qBACE,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;;0BACrC,6LAAC,4HAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,4HAAA,CAAA,YAAS;wBAAC,WAAU;kCAClB;;;;;;kCAEH,6LAAC;wBAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,WAAW;kCAC3B;;;;;;;;;;;;0BAGL,6LAAC,4HAAA,CAAA,cAAW;0BACT,0BACC;;sCACE,6LAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBACnB,kBAAkB,2BAAa,6LAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;iDAGtD;;sCACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,WAAU;4BACV,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;sCAE3B;;;;;;wBAEF,6BACC,6LAAC;4BAAE,WAAU;sCACV;;;;;;wBAGJ,oBAAoB,sBACnB,6LAAC;4BAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACf,kCACA,mBAAmB,OAAO,qBACtB,mBAAmB,SAAS,iBAC5B;;gCAEH,mBAAmB,sBAClB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,6LAAC,+MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;;;;;;gCAGtB,mBAAmB,wBAClB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,UAAU;oCACV,SAAQ;oCACR,SAAQ;oCACR,QAAO;8CAEP,cAAA,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;gCAGxB,oBAAoB,IAAI,GAAG,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG;gCAC1D,oBAAoB,KAAK,mBAAmB,YAAY,cACvD,oBAAoB,IAAK,mBAAmB,OAAO,cAAc,cAAe;gCACjF,kBAAkB,aAAa,oBAAoB,mBAAK,6LAAC;oCAAK,WAAU;;wCAA6B;wCAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5H;KA3MgB","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n        success:\r\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\r\n        warning:\r\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\r\n        info:\r\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\r\n      },\r\n      size: {\r\n        default: \"text-sm\",\r\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\r\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\r\n      },\r\n      dismissible: {\r\n        true: \"pr-10\", // Extra space for close button\r\n        false: \"\",\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n      dismissible: false,\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> &\r\n    VariantProps<typeof alertVariants> & {\r\n      icon?: React.ReactNode,\r\n      dismissible?: boolean,\r\n      onDismiss?: () => void\r\n    }\r\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\r\n    // Default icons based on variant\r\n  const getDefaultIcon = () => {\r\n    if (!icon) {\r\n      switch (variant) {\r\n        case \"destructive\":\r\n          return <AlertCircle className=\"h-4 w-4\" />\r\n        case \"success\":\r\n          return <Check className=\"h-4 w-4\" />\r\n        case \"warning\":\r\n          return <AlertCircle className=\"h-4 w-4\" />\r\n        case \"info\":\r\n          return <Info className=\"h-4 w-4\" />\r\n        default:\r\n      return null\r\n      }\r\n    }\r\n    return icon\r\n    }\r\n\r\n    return (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\r\n    {...props}\r\n      >\r\n      {getDefaultIcon()}\r\n      <div className=\"flex-1\">{children}</div>\r\n      {dismissible && onDismiss && (\r\n        <button \r\n          onClick={onDismiss}\r\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\r\n          aria-label=\"Dismiss alert\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      )}\r\n      </div>\r\n    )\r\n})\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,6LAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,6LAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,6LAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/quiz-list-item.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Calendar,\r\n  FileText,\r\n  PlayCircle, // Icon for Start Quiz\r\n  AlertTriangle, // Icon for urgency\r\n} from \"lucide-react\";\r\nimport {\r\n  format,\r\n  differenceInHours,\r\n  differenceInDays,\r\n  formatDistanceToNowStrict,\r\n  isPast,\r\n  isFuture,\r\n  isWithinInterval,\r\n  addHours,\r\n} from \"date-fns\";\r\n\r\ninterface UpcomingQuiz {\r\n  id: string;\r\n  title: string;\r\n  description: string | null;\r\n  startDate: string;\r\n  endDate: string | null;\r\n  timeLimit: number | null;\r\n  class: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n  _count: {\r\n    questions: number;\r\n  };\r\n  // We might need a status from API later for \"Continue Quiz\" logic\r\n  // status?: \"not-started\" | \"in-progress\" | \"completed\"; \r\n}\r\n\r\ninterface QuizListItemProps {\r\n  quiz: UpcomingQuiz;\r\n}\r\n\r\nconst formatDateToPrimary = (dateString: string) => {\r\n  return format(new Date(dateString), \"MMM d, yyyy h:mm a\");\r\n};\r\n\r\nconst getDynamicDateTimeDisplay = (startDateStr: string, endDateStr: string | null) => {\r\n  const startDate = new Date(startDateStr);\r\n  const endDate = endDateStr ? new Date(endDateStr) : null;\r\n  const now = new Date();\r\n\r\n  if (isFuture(startDate)) {\r\n    const hoursUntilStart = differenceInHours(startDate, now);\r\n    if (hoursUntilStart < 1) {\r\n      return `Starts in ${formatDistanceToNowStrict(startDate, { unit: 'minute' })}`;\r\n    } else if (hoursUntilStart < 48) { // Show hours up to 2 days\r\n      return `Starts in ${formatDistanceToNowStrict(startDate, { unit: 'hour', roundingMethod: 'ceil' })}`;\r\n    }\r\n    return `Starts: ${formatDateToPrimary(startDateStr)}`;\r\n  } else { // Quiz has started or is in the past\r\n    if (endDate && isFuture(endDate)) {\r\n      const hoursUntilEnd = differenceInHours(endDate, now);\r\n      if (hoursUntilEnd < 1) {\r\n        return `Ends in ${formatDistanceToNowStrict(endDate, { unit: 'minute' })}`;\r\n      } else if (hoursUntilEnd < 48) {\r\n        return `Ends in ${formatDistanceToNowStrict(endDate, { unit: 'hour', roundingMethod: 'ceil' })}`;\r\n      }\r\n      return `Ends: ${formatDateToPrimary(endDateStr!)}`;\r\n    }\r\n    if (endDate && isPast(endDate)) {\r\n      return `Ended: ${formatDateToPrimary(endDateStr!)}`;\r\n    }\r\n    // If started and no end date, or end date is far, just show start\r\n    return `Started: ${formatDateToPrimary(startDateStr)}`;\r\n  }\r\n};\r\n\r\nexport function QuizListItem({ quiz }: QuizListItemProps) {\r\n  const now = new Date();\r\n  const startDate = new Date(quiz.startDate);\r\n  const endDate = quiz.endDate ? new Date(quiz.endDate) : null;\r\n\r\n  const isUrgent = isFuture(startDate) && differenceInHours(startDate, now) <= 24;\r\n  \r\n  // Quiz can be started if its startDate has passed and it hasn't ended yet (if there's an endDate)\r\n  const canStartQuiz = isPast(startDate) && (!endDate || isFuture(endDate));\r\n  // For now, we assume if it's in the upcoming list and past startDate, it's not completed.\r\n  // A more robust solution would involve an explicit 'status' or 'isAttempted' field for the quiz by this user.\r\n\r\n  const dynamicDateTime = getDynamicDateTimeDisplay(quiz.startDate, quiz.endDate);\r\n\r\n  return (\r\n    <div \r\n      className={cn(\r\n        \"flex flex-col p-3 border rounded-md transition-colors\",\r\n        \"hover:bg-accent/50\",\r\n        isUrgent ? \"border-yellow-500/50 dark:border-yellow-400/40 bg-yellow-500/5 dark:bg-yellow-400/5\" : \"\",\r\n      )}\r\n    >\r\n      <div className=\"flex justify-between items-start gap-2\">\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"font-medium line-clamp-2 break-words\">{quiz.title}</div>\r\n          <div className=\"text-xs text-muted-foreground\">\r\n            {quiz.class.name} • {quiz._count.questions} questions\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col items-end flex-shrink-0\">\r\n          {isUrgent && (\r\n            <Badge variant=\"outline\" className=\"mb-1 border-yellow-600 text-yellow-700 dark:border-yellow-400 dark:text-yellow-300 bg-yellow-100 dark:bg-yellow-700/30\">\r\n              <AlertTriangle className=\"h-3 w-3 mr-1\" />\r\n              Urgent\r\n            </Badge>\r\n          )}\r\n          <Badge variant=\"outline\" className=\"whitespace-nowrap\">\r\n            {quiz.timeLimit ? `${quiz.timeLimit} min` : \"No time limit\"}\r\n          </Badge>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mt-2 flex items-center text-xs\">\r\n        <Calendar className=\"h-3.5 w-3.5 mr-1.5 text-muted-foreground flex-shrink-0\" />\r\n        <span title={`Starts: ${formatDateToPrimary(quiz.startDate)}${quiz.endDate ? ` | Ends: ${formatDateToPrimary(quiz.endDate)}` : ''}`}>\r\n          {dynamicDateTime}\r\n        </span>\r\n      </div>\r\n      \r\n      <div className=\"mt-3 flex flex-col sm:flex-row gap-2 items-center\">\r\n        {canStartQuiz && (\r\n          <Button variant=\"default\" size=\"sm\" asChild className=\"w-full sm:w-auto\">\r\n            <Link href={`/dashboard/student/exams/${quiz.id}`}>\r\n              <PlayCircle className=\"h-4 w-4 mr-1.5\" />\r\n              Start Quiz\r\n            </Link>\r\n          </Button>\r\n        )}\r\n        <Button \r\n          variant={canStartQuiz ? \"outline\" : \"default\"} \r\n          size=\"sm\" \r\n          asChild \r\n          className=\"w-full sm:w-auto\"\r\n        >\r\n          <Link href={`/dashboard/student/exams/${quiz.id}`}>\r\n            <FileText className=\"h-3.5 w-3.5 mr-1.5\" />\r\n            View Details\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 911, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface DialogProps extends DialogPrimitive.DialogProps {\r\n  /**\r\n   * If true, interaction with outside elements will be disabled and\r\n   * only dialog content will be accessible via keyboard navigation.\r\n   * @default true\r\n   */\r\n  modal?: boolean;\r\n}\r\n\r\nconst Dialog = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Root>,\r\n  DialogProps\r\n>(({ modal = true, ...props }, ref) => (\r\n  <DialogPrimitive.Root modal={modal} {...props} />\r\n))\r\nDialog.displayName = DialogPrimitive.Root.displayName\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 backdrop-blur-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {\r\n    size?: \"default\" | \"sm\" | \"lg\" | \"xl\" | \"full\";\r\n    hideClose?: boolean;\r\n    closeLabel?: string;\r\n  }\r\n>(({ className, children, size = \"default\", hideClose = false, closeLabel = \"Close\", ...props }, ref) => {\r\n  // Ref cho nút close để focus vào đó khi dialog mở\r\n  const closeButtonRef = React.useRef<HTMLButtonElement>(null);\r\n  \r\n  // Xử lý focus khi mở dialog\r\n  const handleOpenAutoFocus = React.useCallback((event: Event) => {\r\n    // Ngăn chặn hành vi focus mặc định\r\n    event.preventDefault();\r\n    \r\n    // Focus vào nút đóng dialog (hoặc có thể là phần tử khác trong dialog)\r\n    if (!hideClose && closeButtonRef.current) {\r\n      setTimeout(() => {\r\n        closeButtonRef.current?.focus();\r\n      }, 0);\r\n    }\r\n  }, [hideClose]);\r\n\r\n  // Xử lý focus khi đóng dialog\r\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\r\n    // Ngăn chặn hành vi focus trả về mặc định\r\n    event.preventDefault();\r\n  }, []);\r\n\r\n  return (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full translate-x-[-50%] translate-y-[-50%] gap-5 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\",\r\n        size === \"sm\" && \"max-w-sm rounded-lg\",\r\n        size === \"default\" && \"max-w-md rounded-lg\", \r\n        size === \"lg\" && \"max-w-xl rounded-lg\",\r\n        size === \"xl\" && \"max-w-3xl rounded-lg\",\r\n        size === \"full\" && \"max-w-[calc(100%-2rem)] h-[calc(100%-2rem)] rounded-lg\",\r\n        className\r\n      )}\r\n      onOpenAutoFocus={handleOpenAutoFocus}\r\n      onCloseAutoFocus={handleCloseAutoFocus}\r\n      {...props}\r\n    >\r\n      {children}\r\n      {!hideClose && (\r\n        <DialogPrimitive.Close\r\n          ref={closeButtonRef}\r\n          className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\r\n          aria-label={closeLabel}\r\n        >\r\n        <X className=\"h-4 w-4\" />\r\n          <span className=\"sr-only\">{closeLabel}</span>\r\n      </DialogPrimitive.Close>\r\n      )}\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n  );\r\n})\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/StatDetailDialog.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n  DialogClose,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { X } from \"lucide-react\";\r\nimport { ReactNode, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport interface StatDetailDialogProps {\r\n  /**\r\n   * Dialog open state\r\n   */\r\n  open: boolean;\r\n  /**\r\n   * Function to set dialog open state\r\n   */\r\n  setOpen: (open: boolean) => void;\r\n  /**\r\n   * Dialog title\r\n   */\r\n  title: string;\r\n  /**\r\n   * Optional dialog description\r\n   */\r\n  description?: string;\r\n  /**\r\n   * Dialog content\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional max width for the dialog\r\n   * @default \"lg\"\r\n   */\r\n  maxWidth?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\" | \"full\";\r\n  /**\r\n   * Controls whether the dialog should trap focus\r\n   * @default true\r\n   */\r\n  trapFocus?: boolean;\r\n}\r\n\r\nconst maxWidthMap = {\r\n  sm: \"max-w-sm\",\r\n  md: \"max-w-md\",\r\n  lg: \"max-w-lg\",\r\n  xl: \"max-w-xl\",\r\n  \"2xl\": \"max-w-2xl\",\r\n  \"3xl\": \"max-w-3xl\",\r\n  \"4xl\": \"max-w-4xl\", \r\n  \"5xl\": \"max-w-5xl\",\r\n  \"full\": \"max-w-full\"\r\n};\r\n\r\n/**\r\n * Dialog component for displaying detailed analytics\r\n */\r\nexport function StatDetailDialog({\r\n  open,\r\n  setOpen,\r\n  title,\r\n  description,\r\n  children,\r\n  maxWidth = \"lg\",\r\n  trapFocus = true,\r\n}: StatDetailDialogProps) {\r\n  // Use useCallback to prevent recreation of the handler on each render\r\n  const handleOpenChange = useCallback((open: boolean) => {\r\n    // Use setTimeout to avoid focus management issues\r\n    setTimeout(() => {\r\n      setOpen(open);\r\n    }, 0);\r\n  }, [setOpen]);\r\n\r\n  // Simple animation variants without AnimatePresence which can cause focus issues\r\n  const fadeInAnimationVariants = {\r\n    hidden: { opacity: 0, y: -10 },\r\n    visible: (i: number) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        delay: i * 0.1,\r\n        duration: 0.5,\r\n        ease: \"easeOut\",\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <Dialog \r\n      open={open} \r\n      onOpenChange={handleOpenChange}\r\n      modal={true} // Changed from false to true to enable overlay focus trapping\r\n    >\r\n      <DialogContent \r\n        className={`${maxWidthMap[maxWidth]} p-0 md:p-6 pt-6 gap-0 overflow-hidden`}\r\n        onInteractOutside={(e) => {\r\n          // Prevent closing when interacting with selects or popups\r\n          if ((e.target as HTMLElement).closest('[role=\"listbox\"]')) {\r\n            e.preventDefault();\r\n          }\r\n        }}\r\n        onEscapeKeyDown={(e) => {\r\n          // Handle escape key more carefully to avoid focus issues\r\n          e.preventDefault();\r\n          handleOpenChange(false);\r\n        }}\r\n      >\r\n        <DialogHeader className=\"px-4 md:px-0\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div>\r\n              <DialogTitle className=\"text-xl font-semibold\">{title}</DialogTitle>\r\n              {description && (\r\n                <DialogDescription className=\"mt-1.5\">{description}</DialogDescription>\r\n              )}\r\n            </div>\r\n            \r\n            <Button\r\n              type=\"button\"\r\n              variant=\"ghost\"\r\n              size=\"icon\"\r\n              className=\"h-8 w-8 absolute right-4 top-4 transition-all hover:bg-red-100 hover:text-red-600\"\r\n              onClick={() => handleOpenChange(false)}\r\n            >\r\n              <X className=\"h-4 w-4\" />\r\n              <span className=\"sr-only\">Close</span>\r\n            </Button>\r\n          </div>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"mt-4 px-4 md:px-0 pb-4 max-h-[80vh] overflow-y-auto\">\r\n          {children}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AASA;AACA;AACA;;;AAbA;;;;;AAiDA,MAAM,cAAc;IAClB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,QAAQ;AACV;AAKO,SAAS,iBAAiB,EAC/B,IAAI,EACJ,OAAO,EACP,KAAK,EACL,WAAW,EACX,QAAQ,EACR,WAAW,IAAI,EACf,YAAY,IAAI,EACM;;IACtB,sEAAsE;IACtE,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0DAAE,CAAC;YACpC,kDAAkD;YAClD;kEAAW;oBACT,QAAQ;gBACV;iEAAG;QACL;yDAAG;QAAC;KAAQ;IAEZ,iFAAiF;IACjF,MAAM,0BAA0B;QAC9B,QAAQ;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC7B,SAAS,CAAC,IAAc,CAAC;gBACvB,SAAS;gBACT,GAAG;gBACH,YAAY;oBACV,OAAO,IAAI;oBACX,UAAU;oBACV,MAAM;gBACR;YACF,CAAC;IACH;IAEA,qBACE,6LAAC,8HAAA,CAAA,SAAM;QACL,MAAM;QACN,cAAc;QACd,OAAO;kBAEP,cAAA,6LAAC,8HAAA,CAAA,gBAAa;YACZ,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,sCAAsC,CAAC;YAC3E,mBAAmB,CAAC;gBAClB,0DAA0D;gBAC1D,IAAI,AAAC,EAAE,MAAM,CAAiB,OAAO,CAAC,qBAAqB;oBACzD,EAAE,cAAc;gBAClB;YACF;YACA,iBAAiB,CAAC;gBAChB,yDAAyD;gBACzD,EAAE,cAAc;gBAChB,iBAAiB;YACnB;;8BAEA,6LAAC,8HAAA,CAAA,eAAY;oBAAC,WAAU;8BACtB,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC,8HAAA,CAAA,cAAW;wCAAC,WAAU;kDAAyB;;;;;;oCAC/C,6BACC,6LAAC,8HAAA,CAAA,oBAAiB;wCAAC,WAAU;kDAAU;;;;;;;;;;;;0CAI3C,6LAAC,8HAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAQ;gCACR,MAAK;gCACL,WAAU;gCACV,SAAS,IAAM,iBAAiB;;kDAEhC,6LAAC,+LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;kDACb,6LAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;;;;;;;8BAKhC,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;GA/EgB;KAAA","debugId":null}},
    {"offset": {"line": 1283, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Progress = React.forwardRef<\r\n  React.ElementRef<typeof ProgressPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\r\n>(({ className, value, ...props }, ref) => (\r\n  <ProgressPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ProgressPrimitive.Indicator\r\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\r\n    />\r\n  </ProgressPrimitive.Root>\r\n))\r\nProgress.displayName = ProgressPrimitive.Root.displayName\r\n\r\nexport { Progress }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1329, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/hooks/use-analytics-filter.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useMemo, useCallback } from \"react\";\r\n\r\nexport type TimeFrame = \"last7days\" | \"last30days\" | \"last3months\" | \"last6months\" | \"lastYear\" | \"allTime\";\r\nexport type SortDirection = \"asc\" | \"desc\";\r\nexport type GroupBy = \"day\" | \"week\" | \"month\" | \"subject\" | \"quizType\";\r\n\r\nexport type FilterOptions = {\r\n  /**\r\n   * Time frame for filtering data\r\n   */\r\n  timeFrame: TimeFrame;\r\n  /**\r\n   * Specific subjects to filter by (empty means all)\r\n   */\r\n  subjects: string[];\r\n  /**\r\n   * Sort direction for data\r\n   */\r\n  sortDirection: SortDirection;\r\n  /**\r\n   * Optional search term\r\n   */\r\n  searchTerm?: string;\r\n  /**\r\n   * Group data by\r\n   */\r\n  groupBy: GroupBy;\r\n  /**\r\n   * Include public quizzes\r\n   */\r\n  includePublicQuizzes: boolean;\r\n  /**\r\n   * Set minimum score threshold\r\n   */\r\n  minScoreThreshold?: number;\r\n  /**\r\n   * Set maximum score threshold\r\n   */\r\n  maxScoreThreshold?: number;\r\n};\r\n\r\nconst defaultFilters: FilterOptions = {\r\n  timeFrame: \"last30days\",\r\n  subjects: [],\r\n  sortDirection: \"desc\",\r\n  searchTerm: \"\",\r\n  groupBy: \"month\",\r\n  includePublicQuizzes: true,\r\n  minScoreThreshold: undefined,\r\n  maxScoreThreshold: undefined,\r\n};\r\n\r\nexport interface UseAnalyticsFilterResult<T> {\r\n  /**\r\n   * Current filter options\r\n   */\r\n  filters: FilterOptions;\r\n  /**\r\n   * Filtered data\r\n   */\r\n  filteredData: T[];\r\n  /**\r\n   * Update a single filter option\r\n   */\r\n  updateFilter: <K extends keyof FilterOptions>(key: K, value: FilterOptions[K]) => void;\r\n  /**\r\n   * Reset all filters to default values\r\n   */\r\n  resetFilters: () => void;\r\n}\r\n\r\n/**\r\n * Hook for filtering analytics data\r\n * @param data - The source data array to filter\r\n * @param filterFn - Function that applies filters to data\r\n * @returns Filtered data and filter controls\r\n */\r\nexport function useAnalyticsFilter<T>(\r\n  data: T[],\r\n  filterFn: (data: T[], filters: FilterOptions) => T[]\r\n): UseAnalyticsFilterResult<T> {\r\n  const [filters, setFilters] = useState<FilterOptions>(defaultFilters);\r\n\r\n  // Memoize update function to prevent unnecessary rerenders\r\n  const updateFilter = useCallback(<K extends keyof FilterOptions>(key: K, value: FilterOptions[K]) => {\r\n    setFilters((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  }, []);\r\n\r\n  // Reset filters to default values\r\n  const resetFilters = useCallback(() => setFilters(defaultFilters), []);\r\n\r\n  // Apply filters to data\r\n  const filteredData = useMemo(() => {\r\n    return filterFn(data, filters);\r\n  }, [data, filters, filterFn]);\r\n\r\n  return {\r\n    filters,\r\n    filteredData,\r\n    updateFilter,\r\n    resetFilters,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AA2CA,MAAM,iBAAgC;IACpC,WAAW;IACX,UAAU,EAAE;IACZ,eAAe;IACf,YAAY;IACZ,SAAS;IACT,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;AACrB;AA2BO,SAAS,mBACd,IAAS,EACT,QAAoD;;IAEpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,2DAA2D;IAC3D,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE,CAAgC,KAAQ;YACvE;gEAAW,CAAC,OAAS,CAAC;wBACpB,GAAG,IAAI;wBACP,CAAC,IAAI,EAAE;oBACT,CAAC;;QACH;uDAAG,EAAE;IAEL,kCAAkC;IAClC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE,IAAM,WAAW;uDAAiB,EAAE;IAErE,wBAAwB;IACxB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;oDAAE;YAC3B,OAAO,SAAS,MAAM;QACxB;mDAAG;QAAC;QAAM;QAAS;KAAS;IAE5B,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;GA5BgB","debugId":null}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  icon?: React.ReactNode\r\n  error?: boolean\r\n  hint?: string\r\n  endIcon?: React.ReactNode\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, icon, error, hint, endIcon, disabled, ...props }, ref) => {\r\n    return (\r\n      <div className=\"relative flex flex-col gap-1 w-full\">\r\n        {/* Input wrapper for icon positioning */}\r\n        <div className=\"relative\">\r\n          {/* Start icon if provided */}\r\n          {icon && (\r\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center pointer-events-none\">\r\n              {icon}\r\n            </div>\r\n          )}\r\n          \r\n      <input\r\n        type={type}\r\n        className={cn(\r\n              \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 shadow-sm\",\r\n              icon && \"pl-10\",  // Add left padding if icon is present\r\n              endIcon && \"pr-10\", // Add right padding if end icon is present\r\n              error && \"border-destructive focus-visible:ring-destructive/50\",\r\n          className\r\n        )}\r\n            disabled={disabled}\r\n        ref={ref}\r\n            aria-invalid={error ? \"true\" : undefined}\r\n        {...props}\r\n      />\r\n          \r\n          {/* End icon if provided */}\r\n          {endIcon && (\r\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground flex items-center\">\r\n              {endIcon}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Hint or error message */}\r\n        {hint && (\r\n          <p \r\n            className={cn(\r\n              \"text-xs\",\r\n              error \r\n                ? \"text-destructive\" \r\n                : \"text-muted-foreground\"\r\n            )}\r\n            id={`${props.id || ''}-hint`}\r\n          >\r\n            {hint}\r\n          </p>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAUA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpE,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;oBAEZ,sBACC,6LAAC;wBAAI,WAAU;kCACZ;;;;;;kCAIT,6LAAC;wBACC,MAAM;wBACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACN,+WACA,QAAQ,SACR,WAAW,SACX,SAAS,wDACb;wBAEE,UAAU;wBACd,KAAK;wBACD,gBAAc,QAAQ,SAAS;wBAClC,GAAG,KAAK;;;;;;oBAIN,yBACC,6LAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAMN,sBACC,6LAAC;gBACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,WACA,QACI,qBACA;gBAEN,IAAI,GAAG,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC;0BAE3B;;;;;;;;;;;;AAKX;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/EmptyAnalyticsState.tsx"],"sourcesContent":["import React from 'react'\r\nimport { AlertCircle, BarChart3, Info } from 'lucide-react'\r\nimport { Card } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\n\r\ninterface EmptyAnalyticsStateProps {\r\n  /**\r\n   * The title to display\r\n   */\r\n  title?: string\r\n  /**\r\n   * The description to display\r\n   */\r\n  description?: string\r\n  /**\r\n   * The icon to display\r\n   */\r\n  icon?: React.ReactNode\r\n  /**\r\n   * The action to display\r\n   */\r\n  action?: {\r\n    label: string\r\n    onClick: () => void\r\n  }\r\n  /**\r\n   * Visual style of the empty state\r\n   * @default \"default\"\r\n   */\r\n  variant?: \"default\" | \"error\" | \"warning\" | \"info\"\r\n}\r\n\r\n/**\r\n * Empty state component for analytics sections\r\n * Follows the design system for consistent empty states\r\n */\r\nexport function EmptyAnalyticsState({\r\n  title = \"No data available\",\r\n  description = \"There's no analytics data available for this section at the moment.\",\r\n  icon,\r\n  action,\r\n  variant = \"default\"\r\n}: EmptyAnalyticsStateProps) {\r\n  // Determine icon and colors based on variant\r\n  const getIcon = () => {\r\n    if (icon) return icon\r\n    \r\n    switch(variant) {\r\n      case \"error\":\r\n        return <AlertCircle className=\"h-12 w-12 text-destructive/60\" />\r\n      case \"warning\":\r\n        return <AlertCircle className=\"h-12 w-12 text-amber-500/60\" />\r\n      case \"info\":\r\n        return <Info className=\"h-12 w-12 text-blue-500/60\" />\r\n      default:\r\n        return <BarChart3 className=\"h-12 w-12 text-muted-foreground/60\" />\r\n    }\r\n  }\r\n  \r\n  // Determine title classes based on variant\r\n  const getTitleClass = () => {\r\n    switch(variant) {\r\n      case \"error\":\r\n        return \"text-destructive\"\r\n      case \"warning\":\r\n        return \"text-amber-500\"\r\n      case \"info\":\r\n        return \"text-blue-500\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex flex-col items-center justify-center text-center py-8\">\r\n        {getIcon()}\r\n        <h3 className={`mt-4 text-lg font-semibold ${getTitleClass()}`}>\r\n          {title}\r\n        </h3>\r\n        <p className=\"mt-2 text-sm text-muted-foreground max-w-xs mx-auto\">\r\n          {description}\r\n        </p>\r\n        {action && (\r\n          <Button \r\n            onClick={action.onClick} \r\n            variant={variant === \"default\" ? \"default\" : \"outline\"}\r\n            className=\"mt-6\"\r\n          >\r\n            {action.label}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  )\r\n} "],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;;;;;AAiCO,SAAS,oBAAoB,EAClC,QAAQ,mBAAmB,EAC3B,cAAc,qEAAqE,EACnF,IAAI,EACJ,MAAM,EACN,UAAU,SAAS,EACM;IACzB,6CAA6C;IAC7C,MAAM,UAAU;QACd,IAAI,MAAM,OAAO;QAEjB,OAAO;YACL,KAAK;gBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,6LAAC,uNAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;QAChC;IACF;IAEA,2CAA2C;IAC3C,MAAM,gBAAgB;QACpB,OAAO;YACL,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;;gBACZ;8BACD,6LAAC;oBAAG,WAAW,CAAC,2BAA2B,EAAE,iBAAiB;8BAC3D;;;;;;8BAEH,6LAAC;oBAAE,WAAU;8BACV;;;;;;gBAEF,wBACC,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAS,OAAO,OAAO;oBACvB,SAAS,YAAY,YAAY,YAAY;oBAC7C,WAAU;8BAET,OAAO,KAAK;;;;;;;;;;;;;;;;;AAMzB;KA3DgB","debugId":null}},
    {"offset": {"line": 1593, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/AnalyticsSkeletons.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { BarChart3 } from \"lucide-react\";\r\n\r\ninterface AnalyticsSkeletonProps {\r\n  /**\r\n   * The type of analytics skeleton to display\r\n   */\r\n  type: \"score\" | \"class\" | \"quiz\";\r\n  /**\r\n   * The title to display in the skeleton\r\n   */\r\n  title?: string;\r\n}\r\n\r\n/**\r\n * Skeleton loading component for analytics sections\r\n * Follows the design system for consistent loading states\r\n */\r\nexport function AnalyticsSkeleton({\r\n  type = \"score\",\r\n  title = \"Loading Analytics...\"\r\n}: AnalyticsSkeletonProps) {\r\n  // Renders a metrics card skeleton\r\n  const renderMetricCardSkeleton = (count: number = 4) => {\r\n    return (\r\n      <div className=\"grid gap-4 md:grid-cols-4\">\r\n        {Array.from({ length: count }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader className=\"pb-2\">\r\n              <Skeleton className=\"h-4 w-24\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Skeleton className=\"h-8 w-16 mb-2\" />\r\n              <Skeleton className=\"h-3 w-28\" />\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renders a chart skeleton\r\n  const renderChartSkeleton = (height: string = \"h-[300px]\") => {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <Skeleton className=\"h-6 w-48 mb-2\" />\r\n          <Skeleton className=\"h-4 w-64\" />\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className={`${height} flex items-center justify-center`}>\r\n            <div className=\"w-full h-full bg-muted/20 rounded-md flex items-center justify-center\">\r\n              <BarChart3 className=\"h-12 w-12 text-muted-foreground/30\" />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  // Renders a tabbed interface skeleton\r\n  const renderTabbedSkeleton = () => {\r\n    return (\r\n      <Tabs defaultValue=\"tab1\" className=\"space-y-4\">\r\n        <TabsList className=\"grid grid-cols-3 w-full sm:w-[400px]\">\r\n          <TabsTrigger value=\"tab1\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tab2\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tab3\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n        </TabsList>\r\n        \r\n        <TabsContent value=\"tab1\">\r\n          {renderChartSkeleton()}\r\n        </TabsContent>\r\n      </Tabs>\r\n    );\r\n  };\r\n  \r\n  // Different skeleton types based on analytics component\r\n  if (type === \"score\") {\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-32\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(4)}\r\n        \r\n        <div className=\"space-y-6\">\r\n          {renderChartSkeleton()}\r\n          {renderChartSkeleton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (type === \"class\") {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-40\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(4)}\r\n        {renderTabbedSkeleton()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (type === \"quiz\") {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-32\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(3)}\r\n        {renderTabbedSkeleton()}\r\n        \r\n        <Card>\r\n          <CardHeader>\r\n            <Skeleton className=\"h-6 w-48 mb-2\" />\r\n            <Skeleton className=\"h-4 w-64\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n              {Array.from({ length: 6 }).map((_, i) => (\r\n                <Card key={i} className=\"overflow-hidden\">\r\n                  <div className=\"p-4\">\r\n                    <Skeleton className=\"h-5 w-full mb-3\" />\r\n                    <div className=\"space-y-2\">\r\n                      <Skeleton className=\"h-3 w-3/4\" />\r\n                      <Skeleton className=\"h-3 w-1/2\" />\r\n                      <Skeleton className=\"h-3 w-2/3\" />\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Default fallback skeleton\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>\r\n          <Skeleton className=\"h-4 w-2/3\" />\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[400px] flex items-center justify-center\">\r\n          <div className=\"w-full h-full bg-muted/20 rounded-md flex items-center justify-center\">\r\n            <BarChart3 className=\"h-12 w-12 text-muted-foreground/30\" />\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2093, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/ScoreAnalytics.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useCallback, useMemo, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { format, subMonths, isBefore, isAfter, parseISO } from \"date-fns\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Cell,\r\n} from \"recharts\";\r\nimport {\r\n  Award,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Target,\r\n  BarChart3,\r\n  LineChart as LineChartIcon,\r\n  AlarmClock,\r\n  Brain,\r\n  Search,\r\n  SortAsc,\r\n  SortDesc,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useAnalyticsFilter, FilterOptions } from \"@/hooks/use-analytics-filter\";\r\nimport { useAnalytics } from \"@/components/providers/analytics-provider\";\r\nimport { TimePointScoreData, SubjectScorePerformance, TimeFrame } from \"@/components/providers/analytics-provider\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\r\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\r\n\r\n/**\r\n * ScoreAnalytics Component\r\n * Displays detailed score analytics visualization for the student\r\n */\r\nexport function ScoreAnalytics() {\r\n  // --- Stage 1: Core State and Effect Hooks ---\r\n  const { \r\n    scoreAnalyticsData,\r\n    scoreAnalyticsError,\r\n    isLoadingScoreAnalytics,\r\n    timeFrame,\r\n    setTimeFrame,\r\n    fetchScoreAnalytics\r\n  } = useAnalytics();\r\n  \r\n  const { isStudent } = useAuth();\r\n  \r\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!hasInitialFetch && isStudent && !isLoadingScoreAnalytics) {\r\n      console.log('[ScoreAnalytics] Fetching initial score analytics data...');\r\n      fetchScoreAnalytics().finally(() => {\r\n        setHasInitialFetch(true);\r\n      });\r\n    }\r\n  }, [fetchScoreAnalytics, hasInitialFetch, isStudent, isLoadingScoreAnalytics]);\r\n\r\n  const handleTimeFrameChange = (value: string) => {\r\n    console.log(`[ScoreAnalytics] Time frame changed to: ${value}`);\r\n    setTimeFrame(value as TimeFrame);\r\n  };\r\n\r\n  // --- Stage 2: Memoization/Callback Hooks and Custom Hooks that depend on Stage 1 ---\r\n  const timeSeriesDataForHooks = scoreAnalyticsData?.timeSeriesData || [];\r\n  const subjectPerformanceForHooks = scoreAnalyticsData?.subjectPerformance || [];\r\n\r\n  const filterTimeSeriesData = useCallback((data: TimePointScoreData[], filters: FilterOptions) => {\r\n    let filteredData = [...data];\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filteredData = filteredData.filter(item => \r\n        item.date.toLowerCase().includes(term)\r\n      );\r\n    }\r\n    return filteredData;\r\n  }, []); \r\n  \r\n  const filterSubjectData = useCallback((data: SubjectScorePerformance[], filters: FilterOptions) => {\r\n    let filteredData = [...data];\r\n    if (filters.searchTerm) {\r\n      const term = filters.searchTerm.toLowerCase();\r\n      filteredData = filteredData.filter(item => \r\n        item.subject.toLowerCase().includes(term)\r\n      );\r\n    }\r\n    filteredData.sort((a, b) => {\r\n      return filters.sortDirection === \"asc\" \r\n        ? a.averageScore - b.averageScore \r\n        : b.averageScore - a.averageScore;\r\n    });\r\n    return filteredData;\r\n  }, []);\r\n\r\n  const {\r\n    filters: timeFilters,\r\n    filteredData: filteredTimeData, \r\n    updateFilter: updateTimeFilter,\r\n    resetFilters: resetTimeFilters,\r\n  } = useAnalyticsFilter(timeSeriesDataForHooks, filterTimeSeriesData);\r\n\r\n  const {\r\n    filters: subjectFilters,\r\n    filteredData: filteredSubjectData, // Using this name for consistency with original chart\r\n    updateFilter: updateSubjectFilter,\r\n    resetFilters: resetSubjectFilters,\r\n  } = useAnalyticsFilter(subjectPerformanceForHooks, filterSubjectData);\r\n\r\n  const getActiveFilterCount = useCallback((filters: FilterOptions): number => {\r\n    let count = 0;\r\n    if (filters.searchTerm) count++;\r\n    if (filters.sortDirection !== \"desc\") count++;\r\n    return count;\r\n  }, []);\r\n\r\n  const sortedSubjects = useMemo(() => \r\n    [...filteredSubjectData].sort((a, b) => b.averageScore - a.averageScore), \r\n    [filteredSubjectData]\r\n  );\r\n  \r\n  // --- Stage 3: Conditional rendering checks ---\r\n  const isComponentLoading = isLoadingScoreAnalytics;\r\n  if (isComponentLoading) {\r\n    return <AnalyticsSkeleton type=\"score\" title=\"Score Analytics\" />;\r\n  }\r\n\r\n  if (scoreAnalyticsError) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"error\"\r\n        title=\"Error Loading Analytics\"\r\n        description={scoreAnalyticsError || \"There was a problem loading your score analytics. Please try again later.\"}\r\n        action={{\r\n          label: \"Try Again\",\r\n          onClick: () => fetchScoreAnalytics()\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!isStudent) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"warning\"\r\n        title=\"Analytics not available\"\r\n        description=\"Score analytics are only available for student accounts.\"\r\n      />\r\n    );\r\n  }\r\n  \r\n  if (scoreAnalyticsData === null) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"info\"\r\n        title=\"No Score Data Yet\"\r\n        description=\"Start completing quizzes and assessments to see your score analytics and track your progress here.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // --- Stage 4: Prepare data for rendering (scoreAnalyticsData is non-null here) ---\r\n  const timeSeriesData = scoreAnalyticsData.timeSeriesData || [];\r\n  const subjectPerformance = scoreAnalyticsData.subjectPerformance || [];\r\n  // Use original default object for overallStats if scoreAnalyticsData.overallStats is missing\r\n  const overallStats = scoreAnalyticsData.overallStats || {\r\n    averageScore: 0,\r\n    previousAverageScore: null,\r\n    improvement: null,\r\n    totalAssessments: 0,\r\n    currentPeriodLabel: \"No data available\",\r\n    previousPeriodLabel: null,\r\n  };\r\n\r\n  // Debug logging for development\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('[ScoreAnalytics] Rendering with data:', {\r\n      hasData: !!scoreAnalyticsData,\r\n      timeSeriesLength: timeSeriesData.length,\r\n      subjectPerformanceLength: subjectPerformance.length,\r\n      averageScore: overallStats.averageScore,\r\n      totalAssessments: overallStats.totalAssessments,\r\n      currentPeriodLabel: overallStats.currentPeriodLabel\r\n    });\r\n  }\r\n\r\n  const hasSubjectData = subjectPerformance.length > 0;\r\n  const showImprovement = overallStats.improvement !== null && overallStats.previousAverageScore !== null;\r\n  \r\n  const improvementDisplay = showImprovement \r\n    ? overallStats.improvement! > 0 \r\n      ? `+${overallStats.improvement!.toFixed(1)}%`\r\n      : `${overallStats.improvement!.toFixed(1)}%`\r\n    : null;\r\n  \r\n  const improvementColor = showImprovement \r\n    ? overallStats.improvement! > 0 \r\n      ? \"text-success\"\r\n      : overallStats.improvement! < 0 \r\n        ? \"text-destructive\"\r\n        : \"text-muted-foreground\"\r\n    : \"text-muted-foreground\";\r\n\r\n  const timePeriodLabels = {\r\n    last7days: \"Last 7 Days\",\r\n    last30days: \"Last 30 Days\",\r\n    last90days: \"Last 3 Months\",\r\n    allTime: \"All Time\"\r\n  };\r\n\r\n  const strongestSubject = sortedSubjects.length > 0 ? sortedSubjects[0] : null;\r\n  const weakestSubject = sortedSubjects.length > 0 ? sortedSubjects[sortedSubjects.length - 1] : null;\r\n\r\n  const colors = {\r\n    score: \"#10b981\", // emerald-500\r\n    average: \"#94a3b8\", // slate-400\r\n  };\r\n\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: (i: number) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        delay: i * 0.1,\r\n        duration: 0.5,\r\n        ease: \"easeOut\",\r\n      },\r\n    }),\r\n  };\r\n\r\n  const formatTimeSeriesForChart = (data: TimePointScoreData[]) => {\r\n    return data.map(item => ({\r\n      date: item.date,\r\n      score: item.averageScore,\r\n      assessmentCount: item.assessmentCount\r\n    }));\r\n  };\r\n  \r\n  const availableSubjects = Array.from(\r\n    new Set(subjectPerformance.map((item) => item.subject))\r\n  );\r\n\r\n  // --- Stage 5: Main JSX Return ---\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Time frame selector and filter */}\r\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 mb-4\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold tracking-tight\">Score Analytics</h2>\r\n          <p className=\"text-sm text-muted-foreground mt-1\">\r\n            {overallStats.currentPeriodLabel}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-2 self-start\">\r\n          <Tabs value={timeFrame} onValueChange={handleTimeFrameChange}>\r\n            <TabsList>\r\n              <TabsTrigger value=\"last7days\">7 Days</TabsTrigger>\r\n              <TabsTrigger value=\"last30days\">30 Days</TabsTrigger>\r\n              <TabsTrigger value=\"last90days\">3 Months</TabsTrigger>\r\n              <TabsTrigger value=\"allTime\">All Time</TabsTrigger>\r\n            </TabsList>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Stats Cards */}\r\n      <div className=\"grid gap-4 md:grid-cols-3\">\r\n        {/* Average Score Card */}\r\n        <motion.div\r\n          custom={0}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={cardVariants}\r\n        >\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle className=\"text-base font-medium\">Average Score</CardTitle>\r\n              <CardDescription>\r\n                {overallStats.currentPeriodLabel}\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex flex-col gap-1\">\r\n                  <span className=\"text-3xl font-bold\">\r\n                    {Math.round(overallStats.averageScore)}%\r\n                  </span>\r\n                  {showImprovement && (\r\n                    <div className={`flex items-center ${improvementColor}`}>\r\n                      <span className=\"flex items-center mr-1\">\r\n                        {overallStats.improvement! > 0 ? (\r\n                          <TrendingUp className=\"h-4 w-4 mr-1 text-emerald-500\" />\r\n                        ) : (\r\n                          <TrendingDown className=\"h-4 w-4 mr-1 text-destructive\" />\r\n                        )}\r\n                        {improvementDisplay}\r\n                      </span>\r\n                      {overallStats.previousPeriodLabel && `vs ${overallStats.previousPeriodLabel}`}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"h-12 w-12 rounded-full bg-emerald-100 flex items-center justify-center\">\r\n                  <BarChart3 className=\"h-6 w-6 text-emerald-600\" />\r\n                </div>\r\n              </div>\r\n              <Progress\r\n                value={Math.min(overallStats.averageScore, 100)}\r\n                className=\"h-2 mt-2\"\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </motion.div>\r\n\r\n        {/* Strongest Subject Card */}\r\n        <motion.div\r\n          custom={1}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={cardVariants}\r\n        >\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle className=\"text-base font-medium\">\r\n                Strongest Subject\r\n              </CardTitle>\r\n              <CardDescription>Your highest performing area</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {strongestSubject ? (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <span className=\"text-3xl font-bold\">\r\n                      {Math.round(strongestSubject.averageScore)}%\r\n                    </span>\r\n                    <div className=\"flex items-center\">\r\n                      <Badge variant=\"outline\" className=\"text-xs\">\r\n                        {strongestSubject.subject}\r\n                      </Badge>\r\n                      <span className=\"text-xs text-muted-foreground ml-2\">\r\n                        {strongestSubject.assessmentCount} assessments\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-12 w-12 rounded-full bg-blue-100 flex items-center justify-center\">\r\n                    <Award className=\"h-6 w-6 text-blue-600\" />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <span className=\"text-xl font-bold text-muted-foreground\">No data available</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </motion.div>\r\n\r\n        {/* Weakest Subject Card */}\r\n        <motion.div\r\n          custom={2}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={cardVariants}\r\n        >\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle className=\"text-base font-medium\">\r\n                Focus Area\r\n              </CardTitle>\r\n              <CardDescription>Subject needing improvement</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {weakestSubject ? (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <span className=\"text-3xl font-bold\">\r\n                      {Math.round(weakestSubject.averageScore)}%\r\n                    </span>\r\n                    <div className=\"flex items-center\">\r\n                      <Badge variant=\"outline\" className=\"text-xs\">\r\n                        {weakestSubject.subject}\r\n                      </Badge>\r\n                      <span className=\"text-xs text-muted-foreground ml-2\">\r\n                        {weakestSubject.assessmentCount} assessments\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-12 w-12 rounded-full bg-amber-100 flex items-center justify-center\">\r\n                    <Target className=\"h-6 w-6 text-amber-600\" />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <span className=\"text-xl font-bold text-muted-foreground\">No data available</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Performance Over Time Chart */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.3, duration: 0.5 }}\r\n      >\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <CardTitle>Performance Over Time</CardTitle>\r\n                <CardDescription>\r\n                  Your score trends for {overallStats.currentPeriodLabel}\r\n                </CardDescription>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Badge variant=\"secondary\" className=\"flex items-center gap-1 py-1\">\r\n                  <LineChartIcon className=\"h-3.5 w-3.5\" />\r\n                  <span>{timeSeriesData.length} data points</span>\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"pt-0\">\r\n            {timeSeriesData.length > 0 ? (\r\n              <div className=\"h-[300px]\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <LineChart\r\n                    data={formatTimeSeriesForChart(timeSeriesData)}\r\n                    margin={{ top: 5, right: 30, left: 0, bottom: 25 }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\r\n                    <XAxis \r\n                      dataKey=\"date\" \r\n                      tick={{ fontSize: 12 }}\r\n                      tickMargin={10}\r\n                    />\r\n                    <YAxis \r\n                      tick={{ fontSize: 12 }}\r\n                      domain={[0, 100]}\r\n                      tickFormatter={(value) => `${value}%`}\r\n                    />\r\n                    <Tooltip\r\n                      contentStyle={{ \r\n                        backgroundColor: \"#fff\", \r\n                        borderRadius: \"8px\",\r\n                        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n                        border: \"none\"\r\n                      }}\r\n                      formatter={(value: any) => [`${value}%`, \"Score\"]}\r\n                      labelFormatter={(label) => `Date: ${label}`}\r\n                    />\r\n                    <Legend verticalAlign=\"top\" height={36} />\r\n                    <Line\r\n                      type=\"monotone\"\r\n                      dataKey=\"score\"\r\n                      name=\"Your Score\"\r\n                      stroke={colors.score}\r\n                      strokeWidth={2}\r\n                      activeDot={{ r: 6 }}\r\n                      dot={{ r: 3 }}\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            ) : (\r\n              <div className=\"h-[300px] flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                  <LineChartIcon className=\"h-12 w-12 mx-auto text-muted-foreground opacity-20\" />\r\n                  <p className=\"mt-2 text-lg font-medium\">No data available for this period</p>\r\n                  <p className=\"text-muted-foreground\">\r\n                    Complete more assessments to see your performance over time\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </motion.div>\r\n\r\n      {/* Subject Performance Chart */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.4, duration: 0.5 }}\r\n      >\r\n        <Card>\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between flex-wrap gap-4\">\r\n              <div>\r\n                <CardTitle>Subject Performance</CardTitle>\r\n                <CardDescription>\r\n                  Your performance across different subjects\r\n                </CardDescription>\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-2\">\r\n                {/* Simplified Subject Filter Bar */}\r\n                <div className=\"flex items-center gap-2\">\r\n                  {/* Search Input */}\r\n                  <div className=\"relative w-[180px]\">\r\n                    <Search className=\"absolute left-2 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                    <Input \r\n                      placeholder=\"Search subjects...\" \r\n                      className=\"pl-8 h-9 text-sm\"\r\n                      value={subjectFilters.searchTerm || ''}\r\n                      onChange={(e) => updateSubjectFilter('searchTerm', e.target.value)} \r\n                    />\r\n                  </div>\r\n                  \r\n                  {/* Sort Toggle Button */}\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => updateSubjectFilter('sortDirection', subjectFilters.sortDirection === 'asc' ? 'desc' : 'asc')}\r\n                    className=\"h-9 px-3\"\r\n                    title={subjectFilters.sortDirection === 'asc' ? 'Sort Descending' : 'Sort Ascending'}\r\n                  >\r\n                    {subjectFilters.sortDirection === 'asc' ? (\r\n                      <SortAsc className=\"h-4 w-4\" />\r\n                    ) : (\r\n                      <SortDesc className=\"h-4 w-4\" />\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {filteredSubjectData.length > 0 ? (\r\n              <div className=\"h-[300px]\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={filteredSubjectData.map(item => ({\r\n                      subject: item.subject,\r\n                      score: Math.round(item.averageScore),\r\n                      assessmentCount: item.assessmentCount,\r\n                    }))}\r\n                    margin={{ top: 5, right: 30, left: 20, bottom: 50 }}\r\n                    barSize={40}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\r\n                    <XAxis\r\n                      dataKey=\"subject\"\r\n                      tick={{ fontSize: 12 }}\r\n                      angle={-45}\r\n                      textAnchor=\"end\"\r\n                      height={60}\r\n                    />\r\n                    <YAxis\r\n                      domain={[0, 100]}\r\n                      tickFormatter={(value) => `${value}%`}\r\n                    />\r\n                    <Tooltip\r\n                      formatter={(value: any, name: string, props: any) => {\r\n                        if (name === \"score\") {\r\n                          return [`${value}%`, \"Average Score\"];\r\n                        }\r\n                        return [value, name];\r\n                      }}\r\n                      contentStyle={{ \r\n                        backgroundColor: \"#fff\", \r\n                        borderRadius: \"8px\",\r\n                        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n                        border: \"none\"\r\n                      }}\r\n                      cursor={{ fill: \"rgba(0, 0, 0, 0.05)\" }}\r\n                    />\r\n                    <Legend formatter={(value) => value === \"score\" ? \"Average Score\" : value} />\r\n                    <Bar dataKey=\"score\" name=\"score\">\r\n                      {filteredSubjectData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={colors.score}\r\n                          fillOpacity={0.8}\r\n                        />\r\n                      ))}\r\n                    </Bar>\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            ) : (\r\n              <div className=\"h-[300px] flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                  <BarChart3 className=\"h-12 w-12 mx-auto text-muted-foreground opacity-20\" />\r\n                  <p className=\"mt-2 text-lg font-medium\">\r\n                    No subject data available\r\n                  </p>\r\n                  <p className=\"text-muted-foreground\">\r\n                    Complete assessments across different subjects to see analysis\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;AAoMM;;AAlMN;AACA;AAOA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAlDA;;;;;;;;;;;;;;;;AAwDO,SAAS;;IACd,+CAA+C;IAC/C,MAAM,EACJ,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,mBAAmB,EACpB,GAAG,CAAA,GAAA,oJAAA,CAAA,eAAY,AAAD;IAEf,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAE5B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,CAAC,mBAAmB,aAAa,CAAC,yBAAyB;gBAC7D,QAAQ,GAAG,CAAC;gBACZ,sBAAsB,OAAO;gDAAC;wBAC5B,mBAAmB;oBACrB;;YACF;QACF;mCAAG;QAAC;QAAqB;QAAiB;QAAW;KAAwB;IAE7E,MAAM,wBAAwB,CAAC;QAC7B,QAAQ,GAAG,CAAC,CAAC,wCAAwC,EAAE,OAAO;QAC9D,aAAa;IACf;IAEA,sFAAsF;IACtF,MAAM,yBAAyB,oBAAoB,kBAAkB,EAAE;IACvE,MAAM,6BAA6B,oBAAoB,sBAAsB,EAAE;IAE/E,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE,CAAC,MAA4B;YACpE,IAAI,eAAe;mBAAI;aAAK;YAC5B,IAAI,QAAQ,UAAU,EAAE;gBACtB,MAAM,OAAO,QAAQ,UAAU,CAAC,WAAW;gBAC3C,eAAe,aAAa,MAAM;wEAAC,CAAA,OACjC,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;;YAErC;YACA,OAAO;QACT;2DAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE,CAAC,MAAiC;YACtE,IAAI,eAAe;mBAAI;aAAK;YAC5B,IAAI,QAAQ,UAAU,EAAE;gBACtB,MAAM,OAAO,QAAQ,UAAU,CAAC,WAAW;gBAC3C,eAAe,aAAa,MAAM;qEAAC,CAAA,OACjC,KAAK,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC;;YAExC;YACA,aAAa,IAAI;iEAAC,CAAC,GAAG;oBACpB,OAAO,QAAQ,aAAa,KAAK,QAC7B,EAAE,YAAY,GAAG,EAAE,YAAY,GAC/B,EAAE,YAAY,GAAG,EAAE,YAAY;gBACrC;;YACA,OAAO;QACT;wDAAG,EAAE;IAEL,MAAM,EACJ,SAAS,WAAW,EACpB,cAAc,gBAAgB,EAC9B,cAAc,gBAAgB,EAC9B,cAAc,gBAAgB,EAC/B,GAAG,CAAA,GAAA,sIAAA,CAAA,qBAAkB,AAAD,EAAE,wBAAwB;IAE/C,MAAM,EACJ,SAAS,cAAc,EACvB,cAAc,mBAAmB,EACjC,cAAc,mBAAmB,EACjC,cAAc,mBAAmB,EAClC,GAAG,CAAA,GAAA,sIAAA,CAAA,qBAAkB,AAAD,EAAE,4BAA4B;IAEnD,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE,CAAC;YACxC,IAAI,QAAQ;YACZ,IAAI,QAAQ,UAAU,EAAE;YACxB,IAAI,QAAQ,aAAa,KAAK,QAAQ;YACtC,OAAO;QACT;2DAAG,EAAE;IAEL,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE,IAC7B;mBAAI;aAAoB,CAAC,IAAI;0DAAC,CAAC,GAAG,IAAM,EAAE,YAAY,GAAG,EAAE,YAAY;;iDACvE;QAAC;KAAoB;IAGvB,gDAAgD;IAChD,MAAM,qBAAqB;IAC3B,IAAI,oBAAoB;QACtB,qBAAO,6LAAC,yKAAA,CAAA,oBAAiB;YAAC,MAAK;YAAQ,OAAM;;;;;;IAC/C;IAEA,IAAI,qBAAqB;QACvB,qBACE,6LAAC,0KAAA,CAAA,sBAAmB;YAClB,SAAQ;YACR,OAAM;YACN,aAAa,uBAAuB;YACpC,QAAQ;gBACN,OAAO;gBACP,SAAS,IAAM;YACjB;;;;;;IAGN;IAEA,IAAI,CAAC,WAAW;QACd,qBACE,6LAAC,0KAAA,CAAA,sBAAmB;YAClB,SAAQ;YACR,OAAM;YACN,aAAY;;;;;;IAGlB;IAEA,IAAI,uBAAuB,MAAM;QAC/B,qBACE,6LAAC,0KAAA,CAAA,sBAAmB;YAClB,SAAQ;YACR,OAAM;YACN,aAAY;;;;;;IAGlB;IAEA,oFAAoF;IACpF,MAAM,iBAAiB,mBAAmB,cAAc,IAAI,EAAE;IAC9D,MAAM,qBAAqB,mBAAmB,kBAAkB,IAAI,EAAE;IACtE,6FAA6F;IAC7F,MAAM,eAAe,mBAAmB,YAAY,IAAI;QACtD,cAAc;QACd,sBAAsB;QACtB,aAAa;QACb,kBAAkB;QAClB,oBAAoB;QACpB,qBAAqB;IACvB;IAEA,gCAAgC;IAChC,wCAA4C;QAC1C,QAAQ,GAAG,CAAC,yCAAyC;YACnD,SAAS,CAAC,CAAC;YACX,kBAAkB,eAAe,MAAM;YACvC,0BAA0B,mBAAmB,MAAM;YACnD,cAAc,aAAa,YAAY;YACvC,kBAAkB,aAAa,gBAAgB;YAC/C,oBAAoB,aAAa,kBAAkB;QACrD;IACF;IAEA,MAAM,iBAAiB,mBAAmB,MAAM,GAAG;IACnD,MAAM,kBAAkB,aAAa,WAAW,KAAK,QAAQ,aAAa,oBAAoB,KAAK;IAEnG,MAAM,qBAAqB,kBACvB,aAAa,WAAW,GAAI,IAC1B,CAAC,CAAC,EAAE,aAAa,WAAW,CAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAC3C,GAAG,aAAa,WAAW,CAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAC5C;IAEJ,MAAM,mBAAmB,kBACrB,aAAa,WAAW,GAAI,IAC1B,iBACA,aAAa,WAAW,GAAI,IAC1B,qBACA,0BACJ;IAEJ,MAAM,mBAAmB;QACvB,WAAW;QACX,YAAY;QACZ,YAAY;QACZ,SAAS;IACX;IAEA,MAAM,mBAAmB,eAAe,MAAM,GAAG,IAAI,cAAc,CAAC,EAAE,GAAG;IACzE,MAAM,iBAAiB,eAAe,MAAM,GAAG,IAAI,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE,GAAG;IAE/F,MAAM,SAAS;QACb,OAAO;QACP,SAAS;IACX;IAEA,MAAM,eAAe;QACnB,QAAQ;YAAE,SAAS;YAAG,GAAG;QAAG;QAC5B,SAAS,CAAC,IAAc,CAAC;gBACvB,SAAS;gBACT,GAAG;gBACH,YAAY;oBACV,OAAO,IAAI;oBACX,UAAU;oBACV,MAAM;gBACR;YACF,CAAC;IACH;IAEA,MAAM,2BAA2B,CAAC;QAChC,OAAO,KAAK,GAAG,CAAC,CAAA,OAAQ,CAAC;gBACvB,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,YAAY;gBACxB,iBAAiB,KAAK,eAAe;YACvC,CAAC;IACH;IAEA,MAAM,oBAAoB,MAAM,IAAI,CAClC,IAAI,IAAI,mBAAmB,GAAG,CAAC,CAAC,OAAS,KAAK,OAAO;IAGvD,mCAAmC;IACnC,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,6LAAC;gCAAE,WAAU;0CACV,aAAa,kBAAkB;;;;;;;;;;;;kCAIpC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,4HAAA,CAAA,OAAI;4BAAC,OAAO;4BAAW,eAAe;sCACrC,cAAA,6LAAC,4HAAA,CAAA,WAAQ;;kDACP,6LAAC,4HAAA,CAAA,cAAW;wCAAC,OAAM;kDAAY;;;;;;kDAC/B,6LAAC,4HAAA,CAAA,cAAW;wCAAC,OAAM;kDAAa;;;;;;kDAChC,6LAAC,4HAAA,CAAA,cAAW;wCAAC,OAAM;kDAAa;;;;;;kDAChC,6LAAC,4HAAA,CAAA,cAAW;wCAAC,OAAM;kDAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOrC,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,QAAQ;wBACR,SAAQ;wBACR,SAAQ;wBACR,UAAU;kCAEV,cAAA,6LAAC,4HAAA,CAAA,OAAI;;8CACH,6LAAC,4HAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC,4HAAA,CAAA,YAAS;4CAAC,WAAU;sDAAwB;;;;;;sDAC7C,6LAAC,4HAAA,CAAA,kBAAe;sDACb,aAAa,kBAAkB;;;;;;;;;;;;8CAGpC,6LAAC,4HAAA,CAAA,cAAW;;sDACV,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;;gEACb,KAAK,KAAK,CAAC,aAAa,YAAY;gEAAE;;;;;;;wDAExC,iCACC,6LAAC;4DAAI,WAAW,CAAC,kBAAkB,EAAE,kBAAkB;;8EACrD,6LAAC;oEAAK,WAAU;;wEACb,aAAa,WAAW,GAAI,kBAC3B,6LAAC,qNAAA,CAAA,aAAU;4EAAC,WAAU;;;;;iGAEtB,6LAAC,yNAAA,CAAA,eAAY;4EAAC,WAAU;;;;;;wEAEzB;;;;;;;gEAEF,aAAa,mBAAmB,IAAI,CAAC,GAAG,EAAE,aAAa,mBAAmB,EAAE;;;;;;;;;;;;;8DAInF,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC,uNAAA,CAAA,YAAS;wDAAC,WAAU;;;;;;;;;;;;;;;;;sDAGzB,6LAAC,gIAAA,CAAA,WAAQ;4CACP,OAAO,KAAK,GAAG,CAAC,aAAa,YAAY,EAAE;4CAC3C,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAOlB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,QAAQ;wBACR,SAAQ;wBACR,SAAQ;wBACR,UAAU;kCAEV,cAAA,6LAAC,4HAAA,CAAA,OAAI;;8CACH,6LAAC,4HAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC,4HAAA,CAAA,YAAS;4CAAC,WAAU;sDAAwB;;;;;;sDAG7C,6LAAC,4HAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,6LAAC,4HAAA,CAAA,cAAW;8CACT,iCACC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAU;;4DACb,KAAK,KAAK,CAAC,iBAAiB,YAAY;4DAAE;;;;;;;kEAE7C,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,6HAAA,CAAA,QAAK;gEAAC,SAAQ;gEAAU,WAAU;0EAChC,iBAAiB,OAAO;;;;;;0EAE3B,6LAAC;gEAAK,WAAU;;oEACb,iBAAiB,eAAe;oEAAC;;;;;;;;;;;;;;;;;;;0DAIxC,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,uMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;;;;;;;;;;;6DAIrB,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAK,WAAU;0DAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAStE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,QAAQ;wBACR,SAAQ;wBACR,SAAQ;wBACR,UAAU;kCAEV,cAAA,6LAAC,4HAAA,CAAA,OAAI;;8CACH,6LAAC,4HAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC,4HAAA,CAAA,YAAS;4CAAC,WAAU;sDAAwB;;;;;;sDAG7C,6LAAC,4HAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,6LAAC,4HAAA,CAAA,cAAW;8CACT,+BACC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAU;;4DACb,KAAK,KAAK,CAAC,eAAe,YAAY;4DAAE;;;;;;;kEAE3C,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,6HAAA,CAAA,QAAK;gEAAC,SAAQ;gEAAU,WAAU;0EAChC,eAAe,OAAO;;;;;;0EAEzB,6LAAC;gEAAK,WAAU;;oEACb,eAAe,eAAe;oEAAC;;;;;;;;;;;;;;;;;;;0DAItC,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,yMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;;;;;;;;;;;6DAItB,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAK,WAAU;0DAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUxE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,OAAO;oBAAK,UAAU;gBAAI;0BAExC,cAAA,6LAAC,4HAAA,CAAA,OAAI;;sCACH,6LAAC,4HAAA,CAAA,aAAU;4BAAC,WAAU;sCACpB,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC,4HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,4HAAA,CAAA,kBAAe;;oDAAC;oDACQ,aAAa,kBAAkB;;;;;;;;;;;;;kDAG1D,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,6HAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAY,WAAU;;8DACnC,6LAAC,mNAAA,CAAA,YAAa;oDAAC,WAAU;;;;;;8DACzB,6LAAC;;wDAAM,eAAe,MAAM;wDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAKrC,6LAAC,4HAAA,CAAA,cAAW;4BAAC,WAAU;sCACpB,eAAe,MAAM,GAAG,kBACvB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;oCAAC,OAAM;oCAAO,QAAO;8CACvC,cAAA,6LAAC,wJAAA,CAAA,YAAS;wCACR,MAAM,yBAAyB;wCAC/B,QAAQ;4CAAE,KAAK;4CAAG,OAAO;4CAAI,MAAM;4CAAG,QAAQ;wCAAG;;0DAEjD,6LAAC,gKAAA,CAAA,gBAAa;gDAAC,iBAAgB;gDAAM,SAAS;;;;;;0DAC9C,6LAAC,wJAAA,CAAA,QAAK;gDACJ,SAAQ;gDACR,MAAM;oDAAE,UAAU;gDAAG;gDACrB,YAAY;;;;;;0DAEd,6LAAC,wJAAA,CAAA,QAAK;gDACJ,MAAM;oDAAE,UAAU;gDAAG;gDACrB,QAAQ;oDAAC;oDAAG;iDAAI;gDAChB,eAAe,CAAC,QAAU,GAAG,MAAM,CAAC,CAAC;;;;;;0DAEvC,6LAAC,0JAAA,CAAA,UAAO;gDACN,cAAc;oDACZ,iBAAiB;oDACjB,cAAc;oDACd,WAAW;oDACX,QAAQ;gDACV;gDACA,WAAW,CAAC,QAAe;wDAAC,GAAG,MAAM,CAAC,CAAC;wDAAE;qDAAQ;gDACjD,gBAAgB,CAAC,QAAU,CAAC,MAAM,EAAE,OAAO;;;;;;0DAE7C,6LAAC,yJAAA,CAAA,SAAM;gDAAC,eAAc;gDAAM,QAAQ;;;;;;0DACpC,6LAAC,uJAAA,CAAA,OAAI;gDACH,MAAK;gDACL,SAAQ;gDACR,MAAK;gDACL,QAAQ,OAAO,KAAK;gDACpB,aAAa;gDACb,WAAW;oDAAE,GAAG;gDAAE;gDAClB,KAAK;oDAAE,GAAG;gDAAE;;;;;;;;;;;;;;;;;;;;;qDAMpB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,mNAAA,CAAA,YAAa;4CAAC,WAAU;;;;;;sDACzB,6LAAC;4CAAE,WAAU;sDAA2B;;;;;;sDACxC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWjD,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,OAAO;oBAAK,UAAU;gBAAI;0BAExC,cAAA,6LAAC,4HAAA,CAAA,OAAI;;sCACH,6LAAC,4HAAA,CAAA,aAAU;sCACT,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC,4HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,4HAAA,CAAA,kBAAe;0DAAC;;;;;;;;;;;;kDAKnB,6LAAC;wCAAI,WAAU;kDAEb,cAAA,6LAAC;4CAAI,WAAU;;8DAEb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,yMAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;sEAClB,6LAAC,6HAAA,CAAA,QAAK;4DACJ,aAAY;4DACZ,WAAU;4DACV,OAAO,eAAe,UAAU,IAAI;4DACpC,UAAU,CAAC,IAAM,oBAAoB,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8DAKrE,6LAAC,8HAAA,CAAA,SAAM;oDACL,SAAQ;oDACR,MAAK;oDACL,SAAS,IAAM,oBAAoB,iBAAiB,eAAe,aAAa,KAAK,QAAQ,SAAS;oDACtG,WAAU;oDACV,OAAO,eAAe,aAAa,KAAK,QAAQ,oBAAoB;8DAEnE,eAAe,aAAa,KAAK,sBAChC,6LAAC,iOAAA,CAAA,UAAO;wDAAC,WAAU;;;;;6EAEnB,6LAAC,oOAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAOhC,6LAAC,4HAAA,CAAA,cAAW;sCACT,oBAAoB,MAAM,GAAG,kBAC5B,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;oCAAC,OAAM;oCAAO,QAAO;8CACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;wCACP,MAAM,oBAAoB,GAAG,CAAC,CAAA,OAAQ,CAAC;gDACrC,SAAS,KAAK,OAAO;gDACrB,OAAO,KAAK,KAAK,CAAC,KAAK,YAAY;gDACnC,iBAAiB,KAAK,eAAe;4CACvC,CAAC;wCACD,QAAQ;4CAAE,KAAK;4CAAG,OAAO;4CAAI,MAAM;4CAAI,QAAQ;wCAAG;wCAClD,SAAS;;0DAET,6LAAC,gKAAA,CAAA,gBAAa;gDAAC,iBAAgB;gDAAM,SAAS;;;;;;0DAC9C,6LAAC,wJAAA,CAAA,QAAK;gDACJ,SAAQ;gDACR,MAAM;oDAAE,UAAU;gDAAG;gDACrB,OAAO,CAAC;gDACR,YAAW;gDACX,QAAQ;;;;;;0DAEV,6LAAC,wJAAA,CAAA,QAAK;gDACJ,QAAQ;oDAAC;oDAAG;iDAAI;gDAChB,eAAe,CAAC,QAAU,GAAG,MAAM,CAAC,CAAC;;;;;;0DAEvC,6LAAC,0JAAA,CAAA,UAAO;gDACN,WAAW,CAAC,OAAY,MAAc;oDACpC,IAAI,SAAS,SAAS;wDACpB,OAAO;4DAAC,GAAG,MAAM,CAAC,CAAC;4DAAE;yDAAgB;oDACvC;oDACA,OAAO;wDAAC;wDAAO;qDAAK;gDACtB;gDACA,cAAc;oDACZ,iBAAiB;oDACjB,cAAc;oDACd,WAAW;oDACX,QAAQ;gDACV;gDACA,QAAQ;oDAAE,MAAM;gDAAsB;;;;;;0DAExC,6LAAC,yJAAA,CAAA,SAAM;gDAAC,WAAW,CAAC,QAAU,UAAU,UAAU,kBAAkB;;;;;;0DACpE,6LAAC,sJAAA,CAAA,MAAG;gDAAC,SAAQ;gDAAQ,MAAK;0DACvB,oBAAoB,GAAG,CAAC,CAAC,OAAO,sBAC/B,6LAAC,uJAAA,CAAA,OAAI;wDAEH,MAAM,OAAO,KAAK;wDAClB,aAAa;uDAFR,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;qDAUhC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,uNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;sDACrB,6LAAC;4CAAE,WAAU;sDAA2B;;;;;;sDAGxC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWvD;GA1jBgB;;QASV,oJAAA,CAAA,eAAY;QAEM,uHAAA,CAAA,UAAO;QAsDzB,sIAAA,CAAA,qBAAkB;QAOlB,sIAAA,CAAA,qBAAkB;;;KAxER","debugId":null}},
    {"offset": {"line": 3427, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\r\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3565, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => {\r\n  // Create a stable reference for the focus event handler to avoid recreation on each render\r\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\r\n    // Prevent default focus behavior to avoid recursion in focus scopes\r\n    event.preventDefault();\r\n    \r\n    // Stop propagation to prevent other FocusScope handlers from executing\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  return (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n        onCloseAutoFocus={handleCloseAutoFocus}\r\n        avoidCollisions={true}\r\n        collisionPadding={8}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n  );\r\n})\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    onFocus={(e) => {\r\n      // Prevent focus events from triggering too many rerenders\r\n      e.stopPropagation();\r\n    }}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3800, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/ClassParticipationAnalytics.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardFooter,\r\n} from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  Line,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport {\r\n  Users,\r\n  Clock,\r\n  CalendarClock,\r\n  BarChart3,\r\n  PieChart as PieChartIcon,\r\n  LineChart as LineChartIcon,\r\n  MessageSquare,\r\n  Calendar,\r\n  AlertCircle,\r\n  Timer,\r\n  BarChart2,\r\n} from \"lucide-react\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\r\nimport { Alert, AlertTitle, AlertDescription } from \"@/components/ui/alert\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { \r\n  useAnalytics, \r\n  ClassParticipationData,\r\n  generateEmptyClassParticipationData,\r\n  TimeFrame,\r\n  convertToLegacyFormat,\r\n  LegacyClassParticipationData\r\n} from \"@/components/providers/analytics-provider\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\r\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\r\n\r\ninterface ClassParticipationAnalyticsProps {\r\n  /**\r\n   * Total number of classes joined (fallback value)\r\n   */\r\n  classesJoined?: number;\r\n  /**\r\n   * Loading state\r\n   */\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst COLORS = [\"#10b981\", \"#f59e0b\", \"#ef4444\", \"#3b82f6\", \"#8b5cf6\"];\r\n\r\n// Helper function to format seconds into hours and minutes\r\nconst formatTimeSpent = (seconds: number): string => {\r\n  if (seconds < 60) return `${seconds}s`;\r\n  \r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  \r\n  if (hours === 0) return `${minutes}m`;\r\n  return `${hours}h ${minutes}m`;\r\n};\r\n\r\n// Helper to format dates for different time frames\r\nconst formatDateLabel = (dateStr: string, timeFrame: TimeFrame): string => {\r\n  try {\r\n    // Format depends on date format and time frame\r\n    if (timeFrame === \"last7days\" || timeFrame === \"last30days\") {\r\n      // For days format: \"yyyy-MM-dd\" to \"MMM d\"\r\n      return format(parseISO(dateStr), \"MMM d\");\r\n    } else if (timeFrame === \"last90days\") {\r\n      // For weeks format: \"yyyy-MM-dd\" (start of week) to \"MMM d\"\r\n      return format(parseISO(dateStr), \"MMM d\");\r\n    } else {\r\n      // For months format: \"yyyy-MM\" to \"MMM yyyy\"\r\n      return format(parseISO(`${dateStr}-01`), \"MMM yyyy\");\r\n    }\r\n  } catch (e) {\r\n    return dateStr;\r\n  }\r\n};\r\n\r\n/**\r\n * Detailed class participation analytics component for student dashboard\r\n */\r\nexport function ClassParticipationAnalytics({\r\n  classesJoined = 0,\r\n}: ClassParticipationAnalyticsProps) {\r\n  const { \r\n    classParticipationData: analyticsData,\r\n    classParticipationError: error,\r\n    isLoadingClassParticipation: isLoadingData,\r\n    timeFrame,\r\n    setTimeFrame,\r\n    fetchClassParticipation\r\n  } = useAnalytics();\r\n  \r\n  const { isStudent } = useAuth();\r\n  \r\n  // State to track if initial fetch has been done\r\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\r\n  \r\n  // Fetch analytics data when component mounts - only if user is a student\r\n  useEffect(() => {\r\n    // Only try to fetch data if user is a student and we haven't fetched yet\r\n    if (!hasInitialFetch && isStudent && !isLoadingData) {\r\n      fetchClassParticipation().finally(() => {\r\n        setHasInitialFetch(true);\r\n      });\r\n    }\r\n  }, [fetchClassParticipation, hasInitialFetch, isStudent, isLoadingData]);\r\n  \r\n  // Handle time frame change\r\n  const handleTimeFrameChange = useCallback((value: string) => {\r\n    if (value !== timeFrame) {\r\n      setTimeFrame(value as TimeFrame);\r\n    }\r\n  }, [timeFrame, setTimeFrame]);\r\n  \r\n  // Use fallback data if nothing is available\r\n  const data = analyticsData || generateEmptyClassParticipationData();\r\n  \r\n  // Generate legacy format data for backward compatibility with existing charts\r\n  const legacyData: LegacyClassParticipationData = convertToLegacyFormat(data);\r\n  \r\n  // Combined loading state\r\n  const isDataLoading = isLoadingData;\r\n\r\n  // Show loading state\r\n  if (isDataLoading) {\r\n    return <AnalyticsSkeleton type=\"class\" title=\"Class Participation\" />;\r\n  }\r\n\r\n  if (!isStudent) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"warning\"\r\n        title=\"Analytics not available\"\r\n        description=\"Class participation analytics are only available for student accounts.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // Show error state\r\n  if (error) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"error\"\r\n        title=\"Error loading class analytics\"\r\n        description={error || \"There was a problem loading your class participation data.\"}\r\n        action={{\r\n          label: \"Try Again\",\r\n          onClick: () => fetchClassParticipation()\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Key metrics cards */}\r\n      <div className=\"grid gap-4 md:grid-cols-4\">\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Active Classes</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{data.keyMetrics.activeClasses}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Currently active classes\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Engagement Rate</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{data.keyMetrics.overallEngagementRate}%</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Overall quiz completion rate\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total Study Time</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatTimeSpent(data.keyMetrics.totalStudyTimeSeconds)}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Time spent on quizzes\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Performance</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {data.classPerformanceBreakdown.length > 0 \r\n                ? `${Math.round(data.classPerformanceBreakdown.reduce((sum, item) => sum + item.classCompletionRate, 0) / data.classPerformanceBreakdown.length)}%`\r\n                : \"N/A\"}\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Average class completion\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Participation Over Time Chart */}\r\n      <Card>\r\n        <CardHeader className=\"pb-2\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <LineChartIcon className=\"h-5 w-5 text-blue-500\" />\r\n                Participation Over Time\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Your quiz completions over the selected time period\r\n              </CardDescription>\r\n            </div>\r\n            \r\n            <Select value={timeFrame} onValueChange={handleTimeFrameChange}>\r\n              <SelectTrigger className=\"w-[160px]\">\r\n                <SelectValue placeholder=\"Select time frame\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\r\n                <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\r\n                <SelectItem value=\"last90days\">Last 90 Days</SelectItem>\r\n                <SelectItem value=\"allTime\">All Time</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {data.participationOverTime.length === 0 || data.participationOverTime.every(item => item.completedQuizzes === 0) ? (\r\n            <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\r\n              <LineChartIcon className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\r\n              <h3 className=\"text-lg font-semibold\">No participation data yet</h3>\r\n              <p className=\"text-sm text-muted-foreground max-w-md\">\r\n                Start completing quizzes to see your participation trends over time.\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"h-[300px]\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <LineChart\r\n                  data={data.participationOverTime}\r\n                  margin={{\r\n                    top: 5,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5,\r\n                  }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis \r\n                    dataKey=\"date\" \r\n                    tick={{ fontSize: 12 }}\r\n                    interval=\"preserveStartEnd\"\r\n                  />\r\n                  <YAxis \r\n                    allowDecimals={false}\r\n                    tick={{ fontSize: 12 }}\r\n                  />\r\n                  <Tooltip \r\n                    formatter={(value) => [`${value} quizzes`, 'Completed']}\r\n                    labelFormatter={(value, payload) => {\r\n                      if (payload && payload.length > 0 && payload[0].payload) {\r\n                        const originalDate = payload[0].payload.date;\r\n                        return `Date: ${formatDateLabel(originalDate, timeFrame)}`;\r\n                      }\r\n                      return value;\r\n                    }}\r\n                  />\r\n                  <Legend />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"completedQuizzes\"\r\n                    name=\"Completed Quizzes\"\r\n                    stroke=\"#10b981\"\r\n                    activeDot={{ r: 8 }}\r\n                    strokeWidth={2}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Chart Tabs */}\r\n      <Tabs defaultValue=\"performance\" className=\"space-y-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <TabsList>\r\n            <TabsTrigger value=\"performance\" className=\"flex items-center gap-1\">\r\n              <BarChart3 className=\"h-4 w-4\" />\r\n              <span className=\"hidden sm:inline\">Class Performance</span>\r\n              <span className=\"sm:hidden\">Performance</span>\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"activity\" className=\"flex items-center gap-1\">\r\n              <PieChartIcon className=\"h-4 w-4\" />\r\n              <span className=\"hidden sm:inline\">Activity Distribution</span>\r\n              <span className=\"sm:hidden\">Activities</span>\r\n            </TabsTrigger>\r\n          </TabsList>\r\n        </div>\r\n\r\n        <TabsContent value=\"performance\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle>Class Performance Breakdown</CardTitle>\r\n              <CardDescription>\r\n                Your quiz completion rates across different classes\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"pt-2\">\r\n              {data.classPerformanceBreakdown.length === 0 ? (\r\n                <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\r\n                  <Users className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\r\n                  <h3 className=\"text-lg font-semibold\">No class data yet</h3>\r\n                  <p className=\"text-sm text-muted-foreground max-w-md\">\r\n                    Start participating in your classes by taking quizzes to see your performance analytics here.\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"h-[350px]\">\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                      layout=\"vertical\"\r\n                      data={data.classPerformanceBreakdown}\r\n                      margin={{\r\n                        top: 20,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 5,\r\n                      }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis type=\"number\" domain={[0, 100]} label={{ value: 'Completion Rate (%)', position: 'insideBottom', offset: -5 }} />\r\n                      <YAxis dataKey=\"className\" type=\"category\" width={100} />\r\n                      <Tooltip formatter={(value, name) => {\r\n                        if (name === \"classCompletionRate\") return [`${value}%`, 'Completion Rate'];\r\n                        return [value, name];\r\n                      }} />\r\n                      <Legend />\r\n                      <Bar \r\n                        dataKey=\"classCompletionRate\" \r\n                        name=\"Completion Rate\" \r\n                        fill=\"#10b981\" \r\n                        radius={[0, 4, 4, 0]}\r\n                      />\r\n                    </BarChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"activity\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle>Class Activity Distribution</CardTitle>\r\n              <CardDescription>\r\n                How your participation is distributed between active engagement and passive viewing\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"pt-2\">\r\n              {legacyData.classActivities.every(activity => activity.value === 0) ? (\r\n                <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\r\n                  <PieChartIcon className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\r\n                  <h3 className=\"text-lg font-semibold\">No activity data yet</h3>\r\n                  <p className=\"text-sm text-muted-foreground max-w-md\">\r\n                    Start participating in your classes to see how your activities are distributed.\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"h-[350px] flex items-center justify-center\">\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"max-w-[500px] mx-auto\">\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={legacyData.classActivities}\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        labelLine={false}\r\n                        outerRadius={120}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                      >\r\n                        {legacyData.classActivities.map((entry, index) => (\r\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                        ))}\r\n                      </Pie>\r\n                      <Tooltip formatter={(value) => `${value}%`} />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Class Time Spent Table */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Timer className=\"h-5 w-5 text-blue-500\" />\r\n            Time Spent by Class\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Detailed breakdown of your study time across classes\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {data.classPerformanceBreakdown.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center py-8 text-center\">\r\n              <Clock className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\r\n              <h3 className=\"text-lg font-semibold\">No time data available</h3>\r\n              <p className=\"text-sm text-muted-foreground max-w-md\">\r\n                Once you spend time on quizzes, your study time by class will appear here.\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Class</TableHead>\r\n                  <TableHead>Quizzes Completed</TableHead>\r\n                  <TableHead>Quizzes Assigned</TableHead>\r\n                  <TableHead className=\"text-right\">Time Spent</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {data.classPerformanceBreakdown.map((classData) => (\r\n                  <TableRow key={classData.classId}>\r\n                    <TableCell className=\"font-medium\">{classData.className}</TableCell>\r\n                    <TableCell>{classData.quizzesCompletedByStudent}</TableCell>\r\n                    <TableCell>{classData.quizzesAssigned}</TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      <Badge variant=\"outline\">\r\n                        <Clock className=\"h-3 w-3 mr-1\" />\r\n                        {formatTimeSpent(classData.timeSpentInClassSeconds)}\r\n                      </Badge>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5026, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/QuizCompletionAnalytics.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n} from \"recharts\";\r\nimport {\r\n  CheckCircle,\r\n  Clock,\r\n  BarChart2,\r\n  LineChart as LineChartIcon,\r\n  CalendarDays,\r\n  Sigma,\r\n  Calendar,\r\n  AreaChart as AreaChartIcon,\r\n  PieChart as PieChartIcon,\r\n  Flame,\r\n  Target,\r\n  Clock3,\r\n  AlertCircle,\r\n  BookText,\r\n  Award,\r\n  School,\r\n} from \"lucide-react\";\r\nimport { useAnalytics, TimeFrame, QuizCompletionAnalyticsData } from \"@/components/providers/analytics-provider\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\r\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\n// Chart colors\r\nconst COLORS = [\"#10b981\", \"#f59e0b\", \"#ef4444\", \"#3b82f6\", \"#8b5cf6\", \"#ec4899\", \"#14b8a6\"];\r\n\r\n/**\r\n * Detailed quiz completion analytics component for student dashboard\r\n * Shows completion rates, trends, categories and individual quiz breakdown\r\n */\r\nexport function QuizCompletionAnalytics() {\r\n  const { \r\n    quizCompletionData: analyticsData,\r\n    quizCompletionError: error,\r\n    isLoadingQuizCompletion: isLoading,\r\n    timeFrame,\r\n    setTimeFrame,\r\n    fetchQuizCompletion\r\n  } = useAnalytics();\r\n  \r\n  const { isStudent } = useAuth();\r\n  \r\n  // State to track if initial fetch has been done\r\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\r\n\r\n  const { toast } = useToast();\r\n\r\n  // Fetch analytics data when component mounts - only if user is a student\r\n  useEffect(() => {\r\n    // Only try to fetch data if user is a student and we haven't fetched yet and not already loading\r\n    if (!hasInitialFetch && isStudent && !isLoading) {\r\n      fetchQuizCompletion().finally(() => {\r\n        setHasInitialFetch(true);\r\n      });\r\n    }\r\n  }, [fetchQuizCompletion, hasInitialFetch, isStudent, isLoading]);\r\n\r\n  // Use useCallback to memoize handler function\r\n  const handleTimeFrameChange = useCallback((value: string) => {\r\n    if (value !== timeFrame) {\r\n      setTimeFrame(value as TimeFrame);\r\n    }\r\n  }, [timeFrame, setTimeFrame]);\r\n\r\n  // Thêm chức năng debug để kiểm tra dữ liệu API trực tiếp\r\n  const handleManualFetch = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`/api/users/me/quiz-completion-analytics?timeFrame=${timeFrame}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching data: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Direct API data:\", data);\r\n      if (data.success) {\r\n        toast({\r\n          title: \"API Data Successfully Retrieved\",\r\n          description: \"Check browser console for details.\",\r\n        });\r\n      } else {\r\n        toast({\r\n          title: \"API Error\",\r\n          description: data.message || \"No data returned from API\",\r\n          variant: \"destructive\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Manual fetch error:\", error);\r\n      toast({\r\n        title: \"API Request Failed\",\r\n        description: error instanceof Error ? error.message : \"Unknown error\",\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  }, [timeFrame, toast]);\r\n\r\n  // Determine if we're in a loading state (either from context or local state)\r\n  const showLoading = isLoading;\r\n\r\n  // Transform time-series data for charts\r\n  const completionTrendsData = useMemo(() => {\r\n    if (!analyticsData?.completionTrends) return [];\r\n    \r\n    return analyticsData.completionTrends.map(item => {\r\n      // Extract year and month from period (format: YYYY-MM)\r\n      const [year, month] = item.period.split('-');\r\n      const date = new Date(parseInt(year), parseInt(month) - 1);\r\n      \r\n      // Format based on time frame\r\n      let displayFormat = \"\";\r\n      if (timeFrame === \"last7days\" || timeFrame === \"last30days\") {\r\n        displayFormat = format(date, \"MMM d\");\r\n      } else if (timeFrame === \"last90days\") {\r\n        displayFormat = format(date, \"MMM d\");\r\n      } else {\r\n        displayFormat = format(date, \"MMM yyyy\");\r\n      }\r\n      \r\n      return {\r\n        date: displayFormat,\r\n        period: item.period,\r\n        completedCount: item.completedCount,\r\n        averageScore: item.averageScore\r\n      };\r\n    });\r\n  }, [analyticsData?.completionTrends, timeFrame]);\r\n\r\n  // Show skeleton during loading\r\n  if (isLoading) {\r\n    return <AnalyticsSkeleton type=\"quiz\" title=\"Quiz Completion\" />;\r\n  }\r\n\r\n  // Show not authenticated state for non-students\r\n  if (!isStudent) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"warning\"\r\n        title=\"Analytics not available\"\r\n        description=\"Quiz completion analytics are only available for student accounts.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <EmptyAnalyticsState\r\n        variant=\"error\"\r\n        title=\"Error loading analytics data\"\r\n        description={error}\r\n        action={{\r\n          label: \"Try Again\",\r\n          onClick: () => fetchQuizCompletion()\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // No data state\r\n  if (!analyticsData || !analyticsData.keyMetrics) {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        <EmptyAnalyticsState\r\n          variant=\"info\"\r\n          title=\"No quiz completion data available\"\r\n          description=\"We couldn't find any quiz data for your account. This could be because you haven't completed any quizzes yet or there was an issue loading your data.\"\r\n          action={{\r\n            label: \"Try Again\",\r\n            onClick: () => fetchQuizCompletion()\r\n          }}\r\n        />\r\n        \r\n        {/* Debug button for development only */}\r\n        <div className=\"flex justify-center\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={handleManualFetch}\r\n            className=\"text-xs\"\r\n          >\r\n            Check API Directly (Debug)\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Time frame selection */}\r\n      <div className=\"flex justify-end\">\r\n        <Select value={timeFrame} onValueChange={handleTimeFrameChange}>\r\n          <SelectTrigger className=\"w-[180px]\" id=\"time-frame-trigger\">\r\n            <SelectValue placeholder=\"Time Period\" />\r\n          </SelectTrigger>\r\n          <SelectContent position=\"popper\" sideOffset={4} avoidCollisions>\r\n            <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\r\n            <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\r\n            <SelectItem value=\"last90days\">Last 3 Months</SelectItem>\r\n            <SelectItem value=\"allTime\">All Time</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      \r\n      {/* Key metrics cards */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Target className=\"mr-2 h-4 w-4 text-emerald-500\" />\r\n              Completion Rate\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.completionRate || 0}%</div>\r\n              <Badge \r\n                variant={\r\n                  !analyticsData?.keyMetrics ? \"destructive\" :\r\n                  analyticsData.keyMetrics.completionRate >= 80 ? \"success\" : \r\n                  analyticsData.keyMetrics.completionRate >= 60 ? \"warning\" : \r\n                  \"destructive\"\r\n                }\r\n              >\r\n                {\r\n                  !analyticsData?.keyMetrics ? \"Needs improvement\" :\r\n                  analyticsData.keyMetrics.completionRate >= 80 ? \"Excellent\" : \r\n                  analyticsData.keyMetrics.completionRate >= 60 ? \"Good\" : \r\n                  \"Needs improvement\"\r\n                }\r\n              </Badge>\r\n            </div>\r\n            <Progress \r\n              value={analyticsData?.keyMetrics?.completionRate || 0}\r\n              className=\"h-2\"\r\n            />\r\n            <p className=\"text-xs text-muted-foreground mt-2\">\r\n              {analyticsData?.keyMetrics?.completedQuizzes} of {analyticsData?.keyMetrics?.totalQuizzes} assigned quizzes completed\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Award className=\"mr-2 h-4 w-4 text-amber-500\" />\r\n              Average Score\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.averageScore || 0}%</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Your average score on completed quizzes\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <BookText className=\"mr-2 h-4 w-4 text-purple-500\" />\r\n              Completed Quizzes\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.completedQuizzes || 0}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Quizzes successfully completed\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <School className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n              Average Attempts\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{analyticsData?.keyMetrics?.averageAttempts || 0}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Average attempts per quiz\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Chart Tabs */}\r\n      <Tabs defaultValue=\"time-series\" className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"time-series\" className=\"flex items-center gap-1\">\r\n            <AreaChartIcon className=\"h-4 w-4\" />\r\n            <span className=\"hidden sm:inline\">Progress Over Time</span>\r\n            <span className=\"sm:hidden\">Progress</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"by-category\" className=\"flex items-center gap-1\">\r\n            <BarChart2 className=\"h-4 w-4\" />\r\n            <span className=\"hidden sm:inline\">By Category</span>\r\n            <span className=\"sm:hidden\">Categories</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"quiz-list\" className=\"flex items-center gap-1\">\r\n            <Calendar className=\"h-4 w-4\" />\r\n            <span className=\"hidden sm:inline\">Quizzes Breakdown</span>\r\n            <span className=\"sm:hidden\">Quizzes</span>\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"time-series\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle>Quiz Completion Over Time</CardTitle>\r\n              <CardDescription>\r\n                Number of quizzes completed by period\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"pt-2\">\r\n              <div className=\"h-[300px]\">\r\n                {completionTrendsData.length > 0 ? (\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <AreaChart data={completionTrendsData}>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"date\" />\r\n                      <YAxis yAxisId=\"left\" />\r\n                      <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n                      <Tooltip \r\n                        formatter={(value, name) => {\r\n                          if (name === \"completedCount\") return [value, \"Quizzes Completed\"];\r\n                          if (name === \"averageScore\") {\r\n                            const numValue = typeof value === 'number' ? value : parseFloat(String(value));\r\n                            return [isNaN(numValue) ? value : numValue.toFixed(1) + \"%\", \"Average Score\"];\r\n                          }\r\n                          return [value, name];\r\n                        }}\r\n                      />\r\n                      <Legend />\r\n                      <Area \r\n                        yAxisId=\"left\"\r\n                        type=\"monotone\" \r\n                        dataKey=\"completedCount\" \r\n                        name=\"Completed Quizzes\" \r\n                        stroke=\"#10b981\" \r\n                        fill=\"rgba(16, 185, 129, 0.2)\" \r\n                      />\r\n                      <Line\r\n                        yAxisId=\"right\"\r\n                        type=\"monotone\"\r\n                        dataKey=\"averageScore\"\r\n                        name=\"Average Score\"\r\n                        stroke=\"#8b5cf6\"\r\n                      />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <div className=\"flex flex-col items-center justify-center h-full text-center\">\r\n                    <Calendar className=\"h-12 w-12 text-muted-foreground/50\" />\r\n                    <h3 className=\"mt-4 text-lg font-medium\">No completion data available</h3>\r\n                    <p className=\"mt-2 text-sm text-muted-foreground max-w-xs\">\r\n                      Complete more quizzes to see your progress over time.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"by-category\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle>Completion by Category</CardTitle>\r\n              <CardDescription>\r\n                How well you're completing quizzes across different categories\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {analyticsData?.categoryAnalysis && analyticsData.categoryAnalysis.length > 0 ? (\r\n                <div className=\"space-y-6\">\r\n                  {analyticsData.categoryAnalysis.map((category, index) => {\r\n                    return (\r\n                      <div key={category.category} className=\"space-y-2\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <div \r\n                              className=\"w-3 h-3 rounded-full\" \r\n                              style={{ backgroundColor: COLORS[index % COLORS.length] }}\r\n                            />\r\n                            <div className=\"font-medium\">{category.category}</div>\r\n                            <Badge variant=\"outline\" className=\"ml-2\">{category.completedCount}/{category.quizCount}</Badge>\r\n                          </div>\r\n                          <div className={`text-sm font-semibold ${\r\n                            category.completionRate >= 80 ? \"text-green-600\" : \r\n                            category.completionRate >= 60 ? \"text-amber-600\" : \r\n                            \"text-red-600\"\r\n                          }`}>\r\n                            {category.completionRate}%\r\n                          </div>\r\n                        </div>\r\n                        <Progress \r\n                          value={category.completionRate} \r\n                          className={`h-2 ${\r\n                            category.completionRate >= 80 ? \"bg-green-600\" :\r\n                            category.completionRate >= 60 ? \"bg-amber-600\" :\r\n                            \"bg-red-600\"\r\n                          }`}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\r\n                  <BookText className=\"h-12 w-12 text-muted-foreground/50\" />\r\n                  <h3 className=\"mt-4 text-lg font-medium\">No category data available</h3>\r\n                  <p className=\"mt-2 text-sm text-muted-foreground max-w-xs\">\r\n                    Complete more quizzes to see your performance breakdown by category.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"quiz-list\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <CardTitle>Quiz Details</CardTitle>\r\n              <CardDescription>\r\n                Status and performance on individual quizzes\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {analyticsData?.quizBreakdown && analyticsData.quizBreakdown.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {analyticsData.quizBreakdown.map((quiz, index) => (\r\n                    <Card key={`${quiz.quizId}-${index}`} className=\"overflow-hidden\">\r\n                      <div className=\"p-4\">\r\n                        <div className=\"flex justify-between items-start\">\r\n                          <div>\r\n                            <h3 className=\"font-medium text-sm\">{quiz.title}</h3>\r\n                            <p className=\"text-xs text-muted-foreground\">{quiz.className}</p>\r\n                          </div>\r\n                          <Badge\r\n                            variant={\r\n                              quiz.completionStatus === \"completed\" ? \"success\" :\r\n                              quiz.completionStatus === \"in_progress\" ? \"warning\" :\r\n                              \"outline\"\r\n                            }\r\n                          >\r\n                            {quiz.completionStatus === \"completed\" ? \"Completed\" :\r\n                             quiz.completionStatus === \"in_progress\" ? \"In Progress\" :\r\n                             \"Not Started\"}\r\n                          </Badge>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 gap-2 mt-3\">\r\n                          <div className=\"text-xs\">\r\n                            <span className=\"text-muted-foreground\">Score: </span>\r\n                            {quiz.bestScore !== null ? `${quiz.bestScore}%` : \"N/A\"}\r\n                          </div>\r\n                          <div className=\"text-xs\">\r\n                            <span className=\"text-muted-foreground\">Attempts: </span>\r\n                            {quiz.attemptCount}\r\n                          </div>\r\n                          <div className=\"col-span-2 text-xs\">\r\n                            <span className=\"text-muted-foreground\">Last attempt: </span>\r\n                            {quiz.lastAttemptDate ? format(new Date(quiz.lastAttemptDate), \"MMM d, yyyy\") : \"N/A\"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\r\n                  <BookText className=\"h-12 w-12 text-muted-foreground/50\" />\r\n                  <h3 className=\"mt-4 text-lg font-medium\">No quiz data available</h3>\r\n                  <p className=\"mt-2 text-sm text-muted-foreground max-w-xs\">\r\n                    You don't have any assigned quizzes in the selected time period.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6308, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/hooks/use-score-analytics.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { useQueryState, parseAsString, parseAsInteger } from \"nuqs\";\r\n\r\nexport interface ScoreAnalyticsData {\r\n  timeSeriesData: {\r\n    period: string;\r\n    score: number | null;\r\n    average: number | null;\r\n  }[];\r\n  subjectPerformance: {\r\n    subject: string;\r\n    score: number;\r\n    trend: number;\r\n    quizCount: number;\r\n  }[];\r\n  strengthWeakness: {\r\n    strongestSubject: string;\r\n    strongestScore: number;\r\n    weakestSubject: string;\r\n    weakestScore: number;\r\n  };\r\n  overallStats: {\r\n    averageScore: number;\r\n    previousAverageScore: number;\r\n    improvement: number;\r\n    totalAssessments: number;\r\n  };\r\n  classComparison?: {\r\n    averageClassScore: number;\r\n    percentile: number;\r\n  } | null;\r\n}\r\n\r\nexport interface ScoreAnalyticsMetadata {\r\n  page: number;\r\n  limit: number;\r\n  totalCount: number;\r\n  totalPages: number;\r\n  timeFrame: string;\r\n  filters: {\r\n    subject?: string;\r\n    minScore?: string;\r\n    maxScore?: string;\r\n  };\r\n}\r\n\r\nexport interface ScoreAnalyticsFilters {\r\n  timeFrame?: string;\r\n  subject?: string;\r\n  minScore?: string;\r\n  maxScore?: string;\r\n  page?: string;\r\n  limit?: string;\r\n  sortBy?: string;\r\n  sortDirection?: string;\r\n}\r\n\r\n/**\r\n * Hook to fetch and manage student score analytics data\r\n * @param initialFilters - Initial filter values\r\n * @returns Score analytics data, state, and pagination controls\r\n */\r\nexport function useScoreAnalytics(initialFilters?: ScoreAnalyticsFilters) {\r\n  const [data, setData] = useState<ScoreAnalyticsData | null>(null);\r\n  const [metadata, setMetadata] = useState<ScoreAnalyticsMetadata | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  // Use URL query params with parsers for persistent filters\r\n  const [timeFrame, setTimeFrame] = useQueryState('timeFrame', \r\n    parseAsString.withDefault(initialFilters?.timeFrame || 'last30days')\r\n  );\r\n  const [subject, setSubject] = useQueryState('subject', \r\n    parseAsString.withDefault('')\r\n  );\r\n  const [minScore, setMinScore] = useQueryState('minScore', \r\n    parseAsString.withDefault('')\r\n  );\r\n  const [maxScore, setMaxScore] = useQueryState('maxScore', \r\n    parseAsString.withDefault('')\r\n  );\r\n  const [page, setPage] = useQueryState('page', \r\n    parseAsString.withDefault(initialFilters?.page || '1')\r\n  );\r\n  const [limit, setLimit] = useQueryState('limit', \r\n    parseAsString.withDefault(initialFilters?.limit || '10')\r\n  );\r\n  const [sortBy, setSortBy] = useQueryState('sortBy', \r\n    parseAsString.withDefault(initialFilters?.sortBy || 'completedAt')\r\n  );\r\n  const [sortDirection, setSortDirection] = useQueryState('sortDirection', \r\n    parseAsString.withDefault(initialFilters?.sortDirection || 'desc')\r\n  );\r\n\r\n  /**\r\n   * Builds the query string from current filters\r\n   */\r\n  const buildQueryString = useCallback(() => {\r\n    const params = new URLSearchParams();\r\n    if (timeFrame) params.append('timeFrame', timeFrame);\r\n    if (subject) params.append('subject', subject);\r\n    if (minScore) params.append('minScore', minScore);\r\n    if (maxScore) params.append('maxScore', maxScore);\r\n    if (page) params.append('page', page);\r\n    if (limit) params.append('limit', limit);\r\n    if (sortBy) params.append('sortBy', sortBy);\r\n    if (sortDirection) params.append('sortDirection', sortDirection);\r\n    return params.toString();\r\n  }, [timeFrame, subject, minScore, maxScore, page, limit, sortBy, sortDirection]);\r\n\r\n  /**\r\n   * Updates filters and fetches data\r\n   */\r\n  const updateFilters = useCallback((newFilters: Partial<ScoreAnalyticsFilters>) => {\r\n    // Update all the filters that were provided\r\n    const updatePromises = [];\r\n    if ('timeFrame' in newFilters) updatePromises.push(setTimeFrame(newFilters.timeFrame || ''));\r\n    if ('subject' in newFilters) updatePromises.push(setSubject(newFilters.subject || ''));\r\n    if ('minScore' in newFilters) updatePromises.push(setMinScore(newFilters.minScore || ''));\r\n    if ('maxScore' in newFilters) updatePromises.push(setMaxScore(newFilters.maxScore || ''));\r\n    if ('page' in newFilters) updatePromises.push(setPage(newFilters.page || '1'));\r\n    if ('limit' in newFilters) updatePromises.push(setLimit(newFilters.limit || '10'));\r\n    if ('sortBy' in newFilters) updatePromises.push(setSortBy(newFilters.sortBy || 'completedAt'));\r\n    if ('sortDirection' in newFilters) updatePromises.push(setSortDirection(newFilters.sortDirection || 'desc'));\r\n    \r\n    // Wait for all updates to complete before fetching data\r\n    Promise.all(updatePromises).then(() => {\r\n      fetchData();\r\n    });\r\n  }, [setTimeFrame, setSubject, setMinScore, setMaxScore, setPage, setLimit, setSortBy, setSortDirection]);\r\n\r\n  /**\r\n   * Fetches analytics data with current filters\r\n   */\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const queryString = buildQueryString();\r\n      const response = await fetch(`/api/users/me/score-analytics?${queryString}`, {\r\n        cache: 'no-store', // Don't cache this request client-side\r\n        headers: {\r\n          'Cache-Control': 'no-cache', // Don't cache this request server-side\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching score analytics: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || \"Failed to load score analytics\");\r\n      }\r\n\r\n      setData(result.data);\r\n      setMetadata(result.meta);\r\n    } catch (err) {\r\n      console.error(\"Error fetching score analytics:\", err);\r\n      setError(\r\n        err instanceof Error\r\n          ? err.message\r\n          : \"An unknown error occurred while fetching score analytics\"\r\n      );\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Failed to load analytics\",\r\n        description:\r\n          err instanceof Error\r\n            ? err.message\r\n            : \"Could not load your score analytics. Please try again later.\",\r\n      });\r\n      \r\n      // Return fallback data during development to avoid UI breakage\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        setData(getFallbackData());\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [buildQueryString, toast]);\r\n\r\n  /**\r\n   * Pagination controls\r\n   */\r\n  const gotoPage = useCallback((newPage: number) => {\r\n    updateFilters({ page: newPage.toString() });\r\n  }, [updateFilters]);\r\n\r\n  const nextPage = useCallback(() => {\r\n    if (metadata && metadata.page < metadata.totalPages) {\r\n      gotoPage(metadata.page + 1);\r\n    }\r\n  }, [metadata, gotoPage]);\r\n\r\n  const prevPage = useCallback(() => {\r\n    if (metadata && metadata.page > 1) {\r\n      gotoPage(metadata.page - 1);\r\n    }\r\n  }, [metadata, gotoPage]);\r\n\r\n  // Reset page when filters change\r\n  useEffect(() => {\r\n    if (page !== '1') {\r\n      setPage('1');\r\n    }\r\n  }, [timeFrame, subject, minScore, maxScore, sortBy, sortDirection, setPage]);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    data,\r\n    metadata,\r\n    isLoading,\r\n    error,\r\n    // Filter controls\r\n    filters: {\r\n      timeFrame,\r\n      subject,\r\n      minScore,\r\n      maxScore,\r\n      page,\r\n      limit,\r\n      sortBy,\r\n      sortDirection,\r\n    },\r\n    updateFilters,\r\n    // Pagination controls\r\n    gotoPage,\r\n    nextPage,\r\n    prevPage,\r\n    // Manual refetch\r\n    refetch: fetchData,\r\n  };\r\n}\r\n\r\n/**\r\n * Generate fallback data for development environment when API fails\r\n * This helps developers see the UI even when the backend is not working\r\n */\r\nfunction getFallbackData(): ScoreAnalyticsData {\r\n  return {\r\n    timeSeriesData: Array.from({ length: 6 }, (_, i) => ({\r\n      period: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"][i],\r\n      score: Math.floor(Math.random() * 30) + 70,\r\n      average: Math.floor(Math.random() * 20) + 70,\r\n    })),\r\n    subjectPerformance: [\r\n      \"Mathematics\",\r\n      \"Physics\",\r\n      \"Chemistry\",\r\n      \"Biology\",\r\n      \"Literature\",\r\n      \"History\",\r\n    ].map((subject) => ({\r\n      subject,\r\n      score: Math.floor(Math.random() * 30) + 70,\r\n      trend: Math.floor(Math.random() * 20) - 10,\r\n      quizCount: Math.floor(Math.random() * 5) + 1,\r\n    })),\r\n    strengthWeakness: {\r\n      strongestSubject: \"Mathematics\",\r\n      strongestScore: 92,\r\n      weakestSubject: \"History\",\r\n      weakestScore: 75,\r\n    },\r\n    overallStats: {\r\n      averageScore: 85,\r\n      previousAverageScore: 82,\r\n      improvement: 3.7,\r\n      totalAssessments: 24,\r\n    },\r\n    classComparison: {\r\n      averageClassScore: 79,\r\n      percentile: 85,\r\n    }\r\n  };\r\n}\r\n\r\n// PHASE 1: SCORE ANALYTICS API UPGRADE - COMPLETED\r\n// Successfully migrated from basic API to advanced implementation with filtering, pagination, caching\r\n// Key improvements:\r\n// - Added filtering by timeFrame, subject, score range\r\n// - Added pagination support\r\n// - Added data caching for performance\r\n// - Added real class comparison data\r\n// - Implemented auto-generated analytics for faster access\r\n// - Enhanced time series data to support different time frames "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6594, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/pagination.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\r\n\r\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\r\n  <nav\r\n    role=\"navigation\"\r\n    aria-label=\"pagination\"\r\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\r\n    {...props}\r\n  />\r\n)\r\nPagination.displayName = \"Pagination\"\r\n\r\nconst PaginationContent = React.forwardRef<\r\n  HTMLUListElement,\r\n  React.ComponentProps<\"ul\">\r\n>(({ className, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    className={cn(\"flex flex-row items-center gap-1\", className)}\r\n    {...props}\r\n  />\r\n))\r\nPaginationContent.displayName = \"PaginationContent\"\r\n\r\nconst PaginationItem = React.forwardRef<\r\n  HTMLLIElement,\r\n  React.ComponentProps<\"li\">\r\n>(({ className, ...props }, ref) => (\r\n  <li ref={ref} className={cn(\"\", className)} {...props} />\r\n))\r\nPaginationItem.displayName = \"PaginationItem\"\r\n\r\ntype PaginationLinkProps = {\r\n  isActive?: boolean\r\n} & Pick<ButtonProps, \"size\"> &\r\n  React.ComponentProps<\"a\">\r\n\r\nconst PaginationLink = ({\r\n  className,\r\n  isActive,\r\n  size = \"icon\",\r\n  ...props\r\n}: PaginationLinkProps) => (\r\n  <a\r\n    aria-current={isActive ? \"page\" : undefined}\r\n    className={cn(\r\n      buttonVariants({\r\n        variant: isActive ? \"outline\" : \"ghost\",\r\n        size,\r\n      }),\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nPaginationLink.displayName = \"PaginationLink\"\r\n\r\nconst PaginationPrevious = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) => (\r\n  <PaginationLink\r\n    aria-label=\"Go to previous page\"\r\n    size=\"default\"\r\n    className={cn(\"gap-1 pl-2.5\", className)}\r\n    {...props}\r\n  >\r\n    <ChevronLeft className=\"h-4 w-4\" />\r\n    <span>Previous</span>\r\n  </PaginationLink>\r\n)\r\nPaginationPrevious.displayName = \"PaginationPrevious\"\r\n\r\nconst PaginationNext = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) => (\r\n  <PaginationLink\r\n    aria-label=\"Go to next page\"\r\n    size=\"default\"\r\n    className={cn(\"gap-1 pr-2.5\", className)}\r\n    {...props}\r\n  >\r\n    <span>Next</span>\r\n    <ChevronRight className=\"h-4 w-4\" />\r\n  </PaginationLink>\r\n)\r\nPaginationNext.displayName = \"PaginationNext\"\r\n\r\nconst PaginationEllipsis = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"span\">) => (\r\n  <span\r\n    aria-hidden\r\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\r\n    {...props}\r\n  >\r\n    <MoreHorizontal className=\"h-4 w-4\" />\r\n    <span className=\"sr-only\">More pages</span>\r\n  </span>\r\n)\r\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationContent,\r\n  PaginationLink,\r\n  PaginationItem,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n  PaginationEllipsis,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;AAEA,MAAM,aAAa,CAAC,EAAE,SAAS,EAAE,GAAG,OAAoC,iBACtE,6LAAC;QACC,MAAK;QACL,cAAW;QACX,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;KALP;AAQN,WAAW,WAAW,GAAG;AAEzB,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,oCAAoC;QACjD,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAG,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,IAAI;QAAa,GAAG,KAAK;;;;;;;AAEvD,eAAe,WAAW,GAAG;AAO7B,MAAM,iBAAiB,CAAC,EACtB,SAAS,EACT,QAAQ,EACR,OAAO,MAAM,EACb,GAAG,OACiB,iBACpB,6LAAC;QACC,gBAAc,WAAW,SAAS;QAClC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;YACb,SAAS,WAAW,YAAY;YAChC;QACF,IACA;QAED,GAAG,KAAK;;;;;;MAfP;AAkBN,eAAe,WAAW,GAAG;AAE7B,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OACyC,iBAC5C,6LAAC;QACC,cAAW;QACX,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;0BAET,6LAAC,uNAAA,CAAA,cAAW;gBAAC,WAAU;;;;;;0BACvB,6LAAC;0BAAK;;;;;;;;;;;;MAXJ;AAcN,mBAAmB,WAAW,GAAG;AAEjC,MAAM,iBAAiB,CAAC,EACtB,SAAS,EACT,GAAG,OACyC,iBAC5C,6LAAC;QACC,cAAW;QACX,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;0BAET,6LAAC;0BAAK;;;;;;0BACN,6LAAC,yNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;MAXtB;AAcN,eAAe,WAAW,GAAG;AAE7B,MAAM,qBAAqB,CAAC,EAC1B,SAAS,EACT,GAAG,OAC0B,iBAC7B,6LAAC;QACC,aAAW;QACX,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4CAA4C;QACzD,GAAG,KAAK;;0BAET,6LAAC,6NAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,6LAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;MAVxB;AAaN,mBAAmB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6767, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/student/StudentOverviewPageClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { StatCard } from \"@/components/dashboard/student/cards/StatCard\";\r\nimport { \r\n  BookOpen, \r\n  BarChart, \r\n  ClipboardCheck,\r\n  AlertCircle, \r\n  Calendar,\r\n  CheckCircle, \r\n  Clock,\r\n  FileText,\r\n  PieChart,\r\n  TrendingUp,\r\n  Target,\r\n  Award,\r\n  ClipboardX,\r\n  Search,\r\n  ChevronRight,\r\n  Filter,\r\n  ArrowUpDown,\r\n  RefreshCw\r\n} from \"lucide-react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport Link from \"next/link\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { QuizListItem } from \"@/components/dashboard/student/quiz-list-item\";\r\nimport { ResultListItem } from \"@/components/dashboard/student/result-list-item\";\r\nimport { StatDetailDialog } from \"@/components/dashboard/student/analytics/StatDetailDialog\";\r\nimport { ScoreAnalytics } from \"@/components/dashboard/student/analytics/ScoreAnalytics\";\r\nimport { ClassParticipationAnalytics } from \"@/components/dashboard/student/analytics/ClassParticipationAnalytics\";\r\nimport { QuizCompletionAnalytics } from \"@/components/dashboard/student/analytics/QuizCompletionAnalytics\";\r\nimport { useScoreAnalytics } from \"@/hooks/use-score-analytics\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { \r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue\r\n} from \"@/components/ui/select\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink } from \"@/components/ui/pagination\";\r\nimport { subDays, formatDistanceToNow } from \"date-fns\";\r\nimport { useAnalytics } from \"@/components/providers/analytics-provider\";\r\n\r\ninterface StudentStats {\r\n  classesJoined: number;\r\n  totalQuizzesCompleted: number;\r\n  averageScore: number;\r\n  assignedQuizCompletionRate: number;\r\n  assignedAverageScorePreviousPeriod?: number;\r\n  assignedPublishedQuizzesCurrentMonthCount?: number;\r\n  assignedCompletedQuizzesCurrentMonthCount?: number;\r\n}\r\n\r\ninterface UpcomingQuiz {\r\n  id: string;\r\n  title: string;\r\n  description: string | null;\r\n  startDate: string;\r\n  endDate: string | null;\r\n  timeLimit: number | null;\r\n  class: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n  _count: {\r\n    questions: number;\r\n  };\r\n}\r\n\r\ninterface QuizResultItem {\r\n  attemptId: string;\r\n  quizId: string;\r\n  quizTitle: string;\r\n  quizDescription: string | null;\r\n  className: string | null;\r\n  category: string | null;\r\n  score: number;\r\n  maxScore?: number;\r\n  totalQuestions: number;\r\n  correctQuestions: number;\r\n  completedAt: string;\r\n  timeTakenMinutes: number | null;\r\n  feedbackAvailable: boolean;\r\n}\r\n\r\n/**\r\n * Client component for student dashboard overview\r\n * Fetches and displays student statistics and upcoming quizzes\r\n */\r\nexport function StudentOverviewPageClient() {\r\n  const [stats, setStats] = useState<StudentStats | null>(null);\r\n  const [upcomingQuizzes, setUpcomingQuizzes] = useState<UpcomingQuiz[]>([]);\r\n  const [quizResults, setQuizResults] = useState<QuizResultItem[]>([]);\r\n  const [isLoadingStats, setIsLoadingStats] = useState(true);\r\n  const [isLoadingQuizzes, setIsLoadingQuizzes] = useState(true);\r\n  const [isLoadingResults, setIsLoadingResults] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n  \r\n  // Use refs to prevent duplicate fetches\r\n  const fetchingStats = useRef(false);\r\n  const fetchingQuizzes = useRef(false);\r\n  const fetchingResults = useRef(false);\r\n  const initialFetchDone = useRef(false);\r\n\r\n  // Analytics dialogs state\r\n  const [scoreAnalyticsOpen, setScoreAnalyticsOpen] = useState(false);\r\n  const [classAnalyticsOpen, setClassAnalyticsOpen] = useState(false);\r\n  const [completionAnalyticsOpen, setCompletionAnalyticsOpen] = useState(false);\r\n  const scoreAnalytics = useScoreAnalytics();\r\n\r\n  // Thêm state mới cho phân trang và filter của tab results\r\n  const [resultsPage, setResultsPage] = useState(1);\r\n  const [resultsPageSize, setResultsPageSize] = useState(5);\r\n  const [resultsTotalPages, setResultsTotalPages] = useState(1);\r\n  const [resultsTotalItems, setResultsTotalItems] = useState(0);\r\n  const [resultsSearchTerm, setResultsSearchTerm] = useState(\"\");\r\n  const [resultsTimeFrame, setResultsTimeFrame] = useState(\"last30days\");\r\n  const [filteredResults, setFilteredResults] = useState<QuizResultItem[]>([]);\r\n  const [resultsSortConfig, setResultsSortConfig] = useState<{\r\n    key: 'date' | 'score' | 'title';\r\n    direction: 'asc' | 'desc';\r\n  }>({\r\n    key: 'date',\r\n    direction: 'desc'\r\n  });\r\n\r\n  const [activeTab, setActiveTab] = useState<string>(\"all\");\r\n  const [quizzesData, setQuizzesData] = useState<any[]>([]);\r\n  const [isLoadingQuizzesData, setIsLoadingQuizzesData] = useState(true);\r\n  const [quizzesError, setQuizzesError] = useState<string | null>(null);\r\n  const [quizzesFilters, setQuizzesFilters] = useState({\r\n    status: \"upcoming\",\r\n    page: 1,\r\n    pageSize: 5\r\n  });\r\n\r\n  // Get analytics methods directly from the provider\r\n  const { \r\n    fetchQuizCompletion,\r\n    isLoadingQuizCompletion,\r\n    quizCompletionData,\r\n    quizCompletionError\r\n  } = useAnalytics();\r\n\r\n  const fetchStudentStats = useCallback(async () => {\r\n    // Prevent duplicate fetches\r\n    if (fetchingStats.current) return;\r\n    \r\n    fetchingStats.current = true;\r\n    setIsLoadingStats(true);\r\n    \r\n    try {\r\n      const response = await fetch(\"/api/users/me/dashboard-summary\");\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.error || \"Failed to load statistics\");\r\n      }\r\n      \r\n      setStats(data.data as StudentStats);\r\n    } catch (err) {\r\n      console.error(\"Error fetching student stats:\", err);\r\n      setError((prevError) => prevError || \"Could not load some dashboard data. Please try again later.\");\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Failed to load statistics\",\r\n        description: err instanceof Error ? err.message : \"An unknown error occurred\",\r\n      });\r\n    } finally {\r\n      setIsLoadingStats(false);\r\n      fetchingStats.current = false;\r\n    }\r\n  }, [toast]);\r\n\r\n  const fetchUpcomingQuizzes = useCallback(async () => {\r\n    // Prevent duplicate fetches\r\n    if (fetchingQuizzes.current) return;\r\n    \r\n    fetchingQuizzes.current = true;\r\n    setIsLoadingQuizzes(true);\r\n    \r\n    try {\r\n      const response = await fetch(\"/api/users/me/upcoming-assessments\");\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching quizzes: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.message || \"Failed to load upcoming quizzes\");\r\n      }\r\n      \r\n      // Assign the quizzes from actual data\r\n      setUpcomingQuizzes(data.data || []);\r\n      setError(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch upcoming quizzes:\", error);\r\n      setError(\"Could not load your upcoming quizzes. Please try again later.\");\r\n    } finally {\r\n      setIsLoadingQuizzes(false);\r\n      fetchingQuizzes.current = false;\r\n    }\r\n  }, []);\r\n\r\n  const fetchQuizResults = useCallback(async () => {\r\n    // Prevent duplicate fetches\r\n    if (fetchingResults.current) return;\r\n    \r\n    fetchingResults.current = true;\r\n    setIsLoadingResults(true);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/users/me/quiz-results?timeFrame=${resultsTimeFrame}&page=${resultsPage}&pageSize=${resultsPageSize}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching results: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.message || \"Failed to load quiz results\");\r\n      }\r\n      \r\n      // Properly handle the API response structure\r\n      setQuizResults(data.data?.results || []);\r\n      setResultsTotalPages(data.data?.pagination?.totalPages || 1);\r\n      setResultsTotalItems(data.data?.pagination?.totalItems || 0);\r\n      \r\n      // Filtered results được tạo từ quizResults\r\n      setFilteredResults(data.data?.results || []);\r\n      \r\n      setError(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch quiz results:\", error);\r\n      setError(\"Could not load your quiz results. Please try again later.\");\r\n    } finally {\r\n      setIsLoadingResults(false);\r\n      fetchingResults.current = false;\r\n    }\r\n  }, [resultsTimeFrame, resultsPage, resultsPageSize]);\r\n\r\n  // Function to fetch quizzes data using the same API as the dedicated quizzes page\r\n  const fetchQuizzesData = useCallback(async () => {\r\n    setIsLoadingQuizzesData(true);\r\n    \r\n    try {\r\n      const params = new URLSearchParams();\r\n      params.set('status', quizzesFilters.status);\r\n      params.set('page', quizzesFilters.page.toString());\r\n      params.set('pageSize', quizzesFilters.pageSize.toString());\r\n      \r\n      const response = await fetch(`/api/users/me/quizzes?${params.toString()}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching quizzes: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setQuizzesData(data.data.items || []);\r\n      } else {\r\n        throw new Error(data.message || \"Failed to load quizzes\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching quizzes data:\", error);\r\n      setQuizzesError((error as Error).message);\r\n      toast({\r\n        title: \"Error\",\r\n        description: (error as Error).message,\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoadingQuizzesData(false);\r\n    }\r\n  }, [quizzesFilters, toast]);\r\n\r\n  // Combined fetch function to load all dashboard data\r\n  const fetchDashboardData = useCallback(() => {\r\n    if (initialFetchDone.current) return;\r\n    \r\n    setError(null);\r\n    Promise.all([\r\n      fetchStudentStats(),\r\n      fetchUpcomingQuizzes(),\r\n      fetchQuizResults(),\r\n      fetchQuizzesData()\r\n    ]).then(() => {\r\n      initialFetchDone.current = true;\r\n    }).catch((err) => {\r\n      console.error(\"Error loading dashboard data:\", err);\r\n      setError(\"Failed to load dashboard data\");\r\n    });\r\n  }, [fetchStudentStats, fetchUpcomingQuizzes, fetchQuizResults, fetchQuizzesData]);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, [fetchDashboardData]);\r\n\r\n  const handleRefresh = () => {\r\n    setError(null);\r\n    initialFetchDone.current = false;\r\n    fetchDashboardData();\r\n  };\r\n\r\n  const formatDate = useCallback((dateString: string) => {\r\n    if (!dateString) return \"N/A\";\r\n    try {\r\n    const date = new Date(dateString);\r\n    return format(date, \"MMM d, yyyy h:mm a\");\r\n    } catch (error) {\r\n      console.error(\"Error formatting date:\", dateString, error);\r\n      return \"Invalid Date\";\r\n    }\r\n  }, []);\r\n\r\n  const monthlyAssignedQuizCompletionRate =\r\n    stats && stats.assignedPublishedQuizzesCurrentMonthCount && stats.assignedPublishedQuizzesCurrentMonthCount > 0 && typeof stats.assignedCompletedQuizzesCurrentMonthCount === 'number'\r\n      ? parseFloat(((stats.assignedCompletedQuizzesCurrentMonthCount / stats.assignedPublishedQuizzesCurrentMonthCount) * 100).toFixed(1))\r\n    : 0;\r\n\r\n  const isLoading = isLoadingStats;\r\n\r\n  // Effect để lọc kết quả khi search term thay đổi\r\n  useEffect(() => {\r\n    if (quizResults.length === 0) return;\r\n    \r\n    const filtered = quizResults.filter(result => {\r\n      if (!resultsSearchTerm) return true;\r\n      return (\r\n        result.quizTitle.toLowerCase().includes(resultsSearchTerm.toLowerCase()) ||\r\n        (result.className?.toLowerCase().includes(resultsSearchTerm.toLowerCase())) ||\r\n        (result.category?.toLowerCase().includes(resultsSearchTerm.toLowerCase()))\r\n      );\r\n    });\r\n    \r\n    setFilteredResults(filtered);\r\n  }, [quizResults, resultsSearchTerm]);\r\n  \r\n  // Xử lý sắp xếp kết quả\r\n  const handleResultsSort = (key: 'date' | 'score' | 'title') => {\r\n    setResultsSortConfig(prevConfig => ({\r\n      key,\r\n      direction: prevConfig.key === key && prevConfig.direction === 'desc' ? 'asc' : 'desc'\r\n    }));\r\n    \r\n    // Sắp xếp kết quả\r\n    const sortedResults = [...filteredResults].sort((a, b) => {\r\n      let comparison = 0;\r\n      \r\n      if (key === 'date') {\r\n        comparison = new Date(a.completedAt).getTime() - new Date(b.completedAt).getTime();\r\n      } else if (key === 'score') {\r\n        comparison = a.score - b.score;\r\n      } else if (key === 'title') {\r\n        comparison = a.quizTitle.localeCompare(b.quizTitle);\r\n      }\r\n      \r\n      return resultsSortConfig.direction === 'desc' ? -comparison : comparison;\r\n    });\r\n    \r\n    setFilteredResults(sortedResults);\r\n  };\r\n  \r\n  // Xử lý thay đổi timeFrame cho results\r\n  const handleResultsTimeFrameChange = (value: string) => {\r\n    setResultsTimeFrame(value);\r\n    setResultsPage(1); // Reset về trang 1\r\n    fetchingResults.current = false; // Reset trạng thái fetching\r\n    fetchQuizResults(); // Fetch lại kết quả với timeFrame mới\r\n  };\r\n\r\n  // Khai báo hàm để tạo các mục phân trang cho tab Results\r\n  const generateResultsPagination = () => {\r\n    const items = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    // Nút Previous\r\n    items.push(\r\n      <PaginationItem key=\"prev\">\r\n        <PaginationLink\r\n          onClick={() => setResultsPage(p => Math.max(1, p - 1))}\r\n          className={resultsPage === 1 || isLoadingResults ? \"pointer-events-none opacity-50\" : \"\"}\r\n          aria-disabled={resultsPage === 1 || isLoadingResults}\r\n        >\r\n          <span className=\"sr-only\">Previous</span>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            className=\"h-4 w-4\"\r\n          >\r\n            <path d=\"M15 18l-6-6 6-6\" />\r\n          </svg>\r\n        </PaginationLink>\r\n      </PaginationItem>\r\n    );\r\n    \r\n    // Always show the first page\r\n    items.push(\r\n      <PaginationItem key=\"page-1\">\r\n        <PaginationLink \r\n          isActive={resultsPage === 1} \r\n          onClick={() => setResultsPage(1)}\r\n        >\r\n          1\r\n        </PaginationLink>\r\n      </PaginationItem>\r\n    );\r\n    \r\n    if (resultsTotalPages <= maxVisiblePages) {\r\n      // If few pages, show all\r\n      for (let i = 2; i <= resultsTotalPages; i++) {\r\n        items.push(\r\n          <PaginationItem key={`page-${i}`}>\r\n            <PaginationLink \r\n              isActive={resultsPage === i}\r\n              onClick={() => setResultsPage(i)}\r\n            >\r\n              {i}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        );\r\n      }\r\n    } else {\r\n      // If many pages, show a subset\r\n      // Display ellipsis if current page is far from the start\r\n      if (resultsPage > 3) {\r\n        items.push(\r\n          <PaginationItem key=\"ellipsis-1\">\r\n            <PaginationEllipsis />\r\n          </PaginationItem>\r\n        );\r\n      }\r\n      \r\n      // Display nearby pages\r\n      const startPage = Math.max(2, resultsPage - 1);\r\n      const endPage = Math.min(resultsTotalPages - 1, resultsPage + 1);\r\n      \r\n      for (let i = startPage; i <= endPage; i++) {\r\n        items.push(\r\n          <PaginationItem key={`page-${i}`}>\r\n            <PaginationLink \r\n              isActive={resultsPage === i}\r\n              onClick={() => setResultsPage(i)}\r\n            >\r\n              {i}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        );\r\n      }\r\n      \r\n      // Display ellipsis if current page is far from the end\r\n      if (resultsPage < resultsTotalPages - 2) {\r\n        items.push(\r\n          <PaginationItem key=\"ellipsis-2\">\r\n            <PaginationEllipsis />\r\n          </PaginationItem>\r\n        );\r\n      }\r\n      \r\n      // Always show the last page\r\n      if (resultsTotalPages > 1) {\r\n        items.push(\r\n          <PaginationItem key={`page-${resultsTotalPages}`}>\r\n            <PaginationLink \r\n              isActive={resultsPage === resultsTotalPages}\r\n              onClick={() => setResultsPage(resultsTotalPages)}\r\n            >\r\n              {resultsTotalPages}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        );\r\n      }\r\n    }\r\n    \r\n    // Nút Next\r\n    items.push(\r\n      <PaginationItem key=\"next\">\r\n        <PaginationLink\r\n          onClick={() => setResultsPage(p => Math.min(resultsTotalPages, p + 1))}\r\n          className={resultsPage === resultsTotalPages || isLoadingResults ? \"pointer-events-none opacity-50\" : \"\"}\r\n          aria-disabled={resultsPage === resultsTotalPages || isLoadingResults}\r\n        >\r\n          <span className=\"sr-only\">Next</span>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            width=\"24\" \r\n            height=\"24\" \r\n            viewBox=\"0 0 24 24\" \r\n            fill=\"none\" \r\n            stroke=\"currentColor\" \r\n            strokeWidth=\"2\" \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\"\r\n            className=\"h-4 w-4\"\r\n          >\r\n            <path d=\"M9 18l6-6-6-6\" />\r\n          </svg>\r\n        </PaginationLink>\r\n      </PaginationItem>\r\n    );\r\n    \r\n    return items;\r\n  };\r\n\r\n  // Thêm formatDateToPrimary để sử dụng trong QuizListItem\r\n  const formatDateToPrimary = (dateString: string) => {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return format(date, \"MMM d, yyyy\");\r\n    } catch (error) {\r\n      console.error(\"Error formatting date:\", dateString, error);\r\n      return \"Invalid date\";\r\n    }\r\n  };\r\n\r\n  // Handle opening completion analytics dialog\r\n  const handleOpenCompletionAnalytics = useCallback(async () => {\r\n    try {\r\n      // Attempt to fetch quiz completion data before opening the dialog\r\n      await fetchQuizCompletion();\r\n      setCompletionAnalyticsOpen(true);\r\n    } catch (err) {\r\n      console.error(\"Error fetching quiz completion data:\", err);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch quiz completion analytics data. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  }, [fetchQuizCompletion, toast]);\r\n\r\n  return (\r\n    <div className=\"grid gap-6\">\r\n      {error && !isLoadingStats && !isLoadingQuizzes && !isLoadingResults && !isLoadingQuizzesData && (\r\n        <Alert variant=\"destructive\" className=\"mb-4\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          <AlertTitle>Error</AlertTitle>\r\n          <AlertDescription>{error}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Analytics Dialogs */}\r\n      <StatDetailDialog\r\n        open={scoreAnalyticsOpen}\r\n        setOpen={setScoreAnalyticsOpen}\r\n        title=\"Score Analytics\"\r\n        description=\"Detailed analysis of your academic performance\"\r\n        maxWidth=\"3xl\"\r\n      >\r\n        <ScoreAnalytics />\r\n      </StatDetailDialog>\r\n\r\n      <StatDetailDialog\r\n        open={classAnalyticsOpen}\r\n        setOpen={setClassAnalyticsOpen}\r\n        title=\"Class Participation Analytics\"\r\n        description=\"Detailed analysis of your class participation and activities\"\r\n        maxWidth=\"3xl\"\r\n      >\r\n        <ClassParticipationAnalytics\r\n          classesJoined={stats?.classesJoined ?? 0}\r\n          isLoading={isLoading}\r\n        />\r\n      </StatDetailDialog>\r\n\r\n      <StatDetailDialog\r\n        open={completionAnalyticsOpen}\r\n        setOpen={setCompletionAnalyticsOpen}\r\n        title=\"Quiz Completion Analytics\"\r\n        description=\"Detailed analysis of your quiz completion patterns and rates\"\r\n        maxWidth=\"3xl\"\r\n      >\r\n        <div className=\"relative\">\r\n          {isLoadingQuizCompletion && (\r\n            <div className=\"absolute inset-0 flex items-center justify-center bg-background/80 z-10\">\r\n              <div className=\"flex flex-col items-center gap-2\">\r\n                <div className=\"h-8 w-8 animate-spin rounded-full border-4 border-primary border-t-transparent\"></div>\r\n                <p className=\"text-sm text-muted-foreground\">Loading quiz completion data...</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {quizCompletionError && !isLoadingQuizCompletion && (\r\n            <Alert variant=\"destructive\" className=\"mb-4\">\r\n              <AlertCircle className=\"h-4 w-4\" />\r\n              <AlertTitle>Error</AlertTitle>\r\n              <AlertDescription>\r\n                {quizCompletionError}\r\n                <Button \r\n                  variant=\"outline\" \r\n                  size=\"sm\" \r\n                  onClick={() => fetchQuizCompletion()}\r\n                  className=\"ml-2\"\r\n                >\r\n                  Retry\r\n                </Button>\r\n              </AlertDescription>\r\n            </Alert>\r\n          )}\r\n          \r\n          <QuizCompletionAnalytics />\r\n        </div>\r\n      </StatDetailDialog>\r\n      \r\n      {/* Statistics Cards */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4\">\r\n        <StatCard\r\n          title=\"Classes Joined\"\r\n          value={stats?.classesJoined ?? 0}\r\n          icon={<BookOpen className=\"h-4 w-4\" />}\r\n          isLoading={isLoadingStats}\r\n          description=\"Total classes you're enrolled in\"\r\n          iconColor=\"text-blue-500\"\r\n          interactive={true}\r\n          onClick={() => setClassAnalyticsOpen(true)}\r\n        />\r\n        \r\n        <StatCard\r\n          title=\"Total Quizzes Completed\"\r\n          value={stats?.totalQuizzesCompleted ?? 0}\r\n          unit=\" quizzes\"\r\n          icon={<ClipboardCheck className=\"h-4 w-4\" />}\r\n          isLoading={isLoadingStats}\r\n          description=\"All quizzes you've finished (public & assigned)\"\r\n          iconColor=\"text-emerald-500\"\r\n          interactive={true}\r\n          onClick={handleOpenCompletionAnalytics}\r\n        />\r\n        \r\n        <StatCard\r\n          title=\"Average Score (Assigned)\"\r\n          value={stats?.averageScore ?? 0}\r\n          unit=\"%\"\r\n          previousValue={stats?.assignedAverageScorePreviousPeriod}\r\n          icon={<TrendingUp className=\"h-4 w-4\" />}\r\n          isLoading={isLoadingStats}\r\n          description=\"Your average score on assigned quizzes\"\r\n          iconColor=\"text-purple-500\"\r\n          interactive={true}\r\n          onClick={() => setScoreAnalyticsOpen(true)}\r\n        />\r\n\r\n        <StatCard\r\n          title=\"Assigned Quiz Completion Rate\"\r\n          value={stats?.assignedQuizCompletionRate ?? 0}\r\n          unit=\"%\"\r\n          icon={<Target className=\"h-4 w-4\" />}\r\n          isLoading={isLoadingStats}\r\n          description=\"Overall completion of your assigned quizzes\"\r\n          iconColor=\"text-orange-500\"\r\n          interactive={true}\r\n          onClick={handleOpenCompletionAnalytics}\r\n        />\r\n      </div>\r\n      \r\n      {/* Overview Tabs */}\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"quizzes\">Quizzes</TabsTrigger>\r\n          <TabsTrigger value=\"results\">Results</TabsTrigger>\r\n        </TabsList>\r\n        \r\n        <TabsContent value=\"overview\" className=\"space-y-4\">\r\n          <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2\">\r\n            <Card className=\"lg:col-span-1\">\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\r\n                <div>\r\n                  <CardTitle>Upcoming Assessments</CardTitle>\r\n                  <CardDescription>\r\n                    Quizzes you need to complete soon\r\n                  </CardDescription>\r\n                </div>\r\n                <Button variant=\"outline\" size=\"sm\" asChild className=\"h-8 gap-1\">\r\n                  <Link href=\"/dashboard/student/quizzes\">\r\n                    View all\r\n                    <ChevronRight className=\"h-3.5 w-3.5\" />\r\n                  </Link>\r\n                </Button>\r\n              </CardHeader>\r\n              <CardContent className=\"pl-2\">\r\n                {isLoadingQuizzes && (\r\n                  <>\r\n                    <Skeleton className=\"h-10 w-full mb-2\" />\r\n                    <Skeleton className=\"h-10 w-full mb-2\" />\r\n                    <Skeleton className=\"h-10 w-full\" />\r\n                  </>\r\n                )}\r\n                {!isLoadingQuizzes && upcomingQuizzes.length === 0 && (\r\n                  <div className=\"text-center text-muted-foreground py-6\">\r\n                    <CheckCircle className=\"mx-auto h-12 w-12 opacity-50\" />\r\n                    <p className=\"mt-2\">No upcoming assessments available</p>\r\n                  </div>\r\n                )}\r\n                {!isLoadingQuizzes && upcomingQuizzes.slice(0, 3).map((quiz) => (\r\n                  <QuizListItem key={quiz.id} quiz={quiz} />\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card className=\"lg:col-span-1\">\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\r\n                <div>\r\n                  <CardTitle>Monthly Progress</CardTitle>\r\n                  <CardDescription>\r\n                    Your completion rate for assigned quizzes\r\n                  </CardDescription>\r\n                </div>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"h-8 gap-1\" onClick={handleOpenCompletionAnalytics}>\r\n                  Analytics\r\n                  <BarChart className=\"h-3.5 w-3.5\" />\r\n                </Button>\r\n              </CardHeader>\r\n              <CardContent>\r\n                {isLoadingStats && (\r\n                  <>\r\n                    <Skeleton className=\"h-8 w-1/4 mb-2\" />\r\n                    <Skeleton className=\"h-4 w-1/2 mb-4\" />\r\n                    <Skeleton className=\"h-20 w-full\" />\r\n                  </>\r\n                )}\r\n                {!isLoadingStats && stats && (\r\n                  <div className=\"flex flex-col items-center justify-center h-full\">\r\n                    <div className=\"text-4xl font-bold text-primary\">\r\n                      {monthlyAssignedQuizCompletionRate}%\r\n                    </div>\r\n                    <div className=\"w-full mt-2\">\r\n                      <Progress \r\n                        value={monthlyAssignedQuizCompletionRate} \r\n                        max={100} \r\n                        className=\"h-2\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-sm text-muted-foreground mt-2\">\r\n                      {stats.assignedCompletedQuizzesCurrentMonthCount} of {stats.assignedPublishedQuizzesCurrentMonthCount} assigned quizzes completed this month\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {!isLoadingStats && !stats && !error && (\r\n                  <div className=\"text-center text-muted-foreground py-6\">\r\n                    <p>No data available</p>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"quizzes\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\r\n              <div>\r\n                <CardTitle>Available Assessments</CardTitle>\r\n                <CardDescription>\r\n                  Quizzes assigned to you and ready to take\r\n                </CardDescription>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Select \r\n                  value={quizzesFilters.status}\r\n                  onValueChange={(value) => setQuizzesFilters(prev => ({...prev, status: value}))}\r\n                >\r\n                  <SelectTrigger className=\"w-[140px] h-8\">\r\n                    <SelectValue placeholder=\"Select status\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"all\">All</SelectItem>\r\n                    <SelectItem value=\"upcoming\">Upcoming</SelectItem>\r\n                    <SelectItem value=\"ongoing\">Available now</SelectItem>\r\n                    <SelectItem value=\"completed\">Completed</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"h-8\"\r\n                  onClick={() => fetchQuizzesData()}\r\n                >\r\n                  <RefreshCw className=\"h-3.5 w-3.5\" />\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoadingQuizzesData ? (\r\n                <div className=\"space-y-3\">\r\n                  <Skeleton className=\"h-[125px] w-full rounded-md\" />\r\n                  <Skeleton className=\"h-[125px] w-full rounded-md\" />\r\n                </div>\r\n              ) : quizzesError ? (\r\n                <Alert variant=\"destructive\">\r\n                  <AlertTitle>Error</AlertTitle>\r\n                  <AlertDescription>{quizzesError}</AlertDescription>\r\n                </Alert>\r\n              ) : quizzesData.length > 0 ? (\r\n                <div className=\"space-y-3\">\r\n                  {quizzesData.slice(0, 3).map((quiz) => (\r\n                    <div key={quiz.id} className=\"border rounded-md p-4\">\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div>\r\n                          <h4 className=\"font-medium\">{quiz.title}</h4>\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            {quiz.class?.name || quiz.category || \"No class\"}\r\n                          </p>\r\n                        </div>\r\n                        <Badge variant=\"outline\">\r\n                          {quiz._count?.questions || 0} questions\r\n                        </Badge>\r\n                      </div>\r\n                      <p className=\"text-sm mt-2 line-clamp-2\">\r\n                        {quiz.description || \"No description available.\"}\r\n                      </p>\r\n                      <div className=\"mt-2 flex justify-between items-center\">\r\n                        <div className=\"text-sm flex gap-2 items-center\">\r\n                          <Calendar className=\"h-3.5 w-3.5 text-muted-foreground\" />\r\n                          <span>\r\n                            {new Date(quiz.startDate).toLocaleDateString()}\r\n                            {quiz.endDate && ` - ${new Date(quiz.endDate).toLocaleDateString()}`}\r\n                          </span>\r\n                        </div>\r\n                        <Button variant=\"default\" size=\"sm\" asChild>\r\n                          <Link href={`/quiz/${quiz.id}`}>\r\n                            {quiz.status === \"completed\" ? \"View Results\" : \"Take Quiz\"}\r\n                          </Link>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex flex-col items-center justify-center h-48 border rounded-md border-dashed\">\r\n                  <ClipboardX className=\"h-8 w-8 text-muted-foreground mb-2\" />\r\n                  <h3 className=\"text-lg font-medium\">No quizzes found</h3>\r\n                  <p className=\"text-sm text-muted-foreground mt-1\">\r\n                    You don't have any {quizzesFilters.status === \"all\" ? \"\" : quizzesFilters.status} quizzes at this time\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n            <CardFooter className=\"flex justify-between border-t pt-4\">\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                {!isLoadingQuizzesData && quizzesData.length > 0 && (\r\n                  <span>Showing {Math.min(3, quizzesData.length)} of {quizzesData.length} quizzes</span>\r\n                )}\r\n              </div>\r\n              <Button variant=\"outline\" size=\"sm\" asChild>\r\n                <Link href=\"/dashboard/student/quizzes\">View all quizzes</Link>\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        <TabsContent value=\"results\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex flex-col sm:flex-row justify-between sm:items-center gap-4\">\r\n                <div>\r\n                  <CardTitle>Assessment Results</CardTitle>\r\n                  <CardDescription>\r\n                    Results from your completed assessments\r\n                  </CardDescription>\r\n                </div>\r\n                \r\n                <Select \r\n                  value={resultsTimeFrame} \r\n                  onValueChange={handleResultsTimeFrameChange}\r\n                >\r\n                  <SelectTrigger className=\"w-[180px] h-9\">\r\n                    <Calendar className=\"h-4 w-4 mr-2 text-muted-foreground\" />\r\n                    <SelectValue placeholder=\"Select time period\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"last7days\">Last 7 days</SelectItem>\r\n                    <SelectItem value=\"last30days\">Last 30 days</SelectItem>\r\n                    <SelectItem value=\"last90days\">Last 90 days</SelectItem>\r\n                    <SelectItem value=\"last6months\">Last 6 months</SelectItem>\r\n                    <SelectItem value=\"lastYear\">Last year</SelectItem>\r\n                    <SelectItem value=\"allTime\">All time</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardHeader>\r\n            \r\n            <CardContent>\r\n              <div className=\"flex items-center gap-4 mb-4\">\r\n                <div className=\"relative flex-1\">\r\n                  <Search \r\n                    className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" \r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  <Input \r\n                    type=\"search\" \r\n                    placeholder=\"Search results...\" \r\n                    className=\"pl-8\"\r\n                    value={resultsSearchTerm}\r\n                    onChange={(e) => setResultsSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {isLoadingResults && (\r\n                <div className=\"space-y-3\">\r\n                  <Skeleton className=\"h-[170px] w-full rounded-md\" />\r\n                  <Skeleton className=\"h-[170px] w-full rounded-md\" />\r\n                </div>\r\n              )}\r\n              \r\n              {!isLoadingResults && filteredResults.length === 0 && !error && (\r\n                <div className=\"flex flex-col items-center justify-center h-48 border rounded-md border-dashed\">\r\n                  <ClipboardX className=\"h-8 w-8 text-muted-foreground mb-2\" />\r\n                  <h3 className=\"text-lg font-medium\">No results yet</h3>\r\n                  <p className=\"text-sm text-muted-foreground mt-1\">\r\n                    You haven't completed any assessments{resultsSearchTerm ? \" matching your search\" : \"\" }\r\n                  </p>\r\n                </div>\r\n              )}\r\n              \r\n              {!isLoadingResults && error && (\r\n                <Alert variant=\"destructive\">\r\n                  <AlertTitle>Error</AlertTitle>\r\n                  <AlertDescription>{error}</AlertDescription>\r\n                </Alert>\r\n              )}\r\n              \r\n              {!isLoadingResults && filteredResults.length > 0 && !error && (\r\n                <>\r\n                  <div className=\"relative w-full overflow-auto\">\r\n                    <table \r\n                      className=\"w-full caption-bottom text-sm\"\r\n                      aria-label=\"Assessment results table\"\r\n                    >\r\n                      <thead>\r\n                        <tr className=\"border-b\">\r\n                          <th \r\n                            scope=\"col\"\r\n                            className=\"h-12 px-4 text-left align-middle font-medium\"\r\n                          >\r\n                            <button \r\n                              onClick={() => handleResultsSort('title')}\r\n                              className=\"flex items-center gap-1 hover:text-primary\"\r\n                            >\r\n                              Assessment\r\n                              {resultsSortConfig.key === 'title' && (\r\n                                <ArrowUpDown className=\"h-3.5 w-3.5\" />\r\n                              )}\r\n                            </button>\r\n                          </th>\r\n                          <th \r\n                            scope=\"col\"\r\n                            className=\"h-12 px-4 text-left align-middle font-medium\"\r\n                          >\r\n                            Subject\r\n                          </th>\r\n                          <th \r\n                            scope=\"col\"\r\n                            className=\"h-12 px-4 text-left align-middle font-medium\"\r\n                          >\r\n                            <button \r\n                              onClick={() => handleResultsSort('date')}\r\n                              className=\"flex items-center gap-1 hover:text-primary\"\r\n                            >\r\n                              Date\r\n                              {resultsSortConfig.key === 'date' && (\r\n                                <ArrowUpDown className=\"h-3.5 w-3.5\" />\r\n                              )}\r\n                            </button>\r\n                          </th>\r\n                          <th \r\n                            scope=\"col\"\r\n                            className=\"h-12 px-4 text-right align-middle font-medium\"\r\n                          >\r\n                            <button \r\n                              onClick={() => handleResultsSort('score')}\r\n                              className=\"flex items-center gap-1 hover:text-primary ml-auto\"\r\n                            >\r\n                              Score\r\n                              {resultsSortConfig.key === 'score' && (\r\n                                <ArrowUpDown className=\"h-3.5 w-3.5\" />\r\n                              )}\r\n                            </button>\r\n                          </th>\r\n                          <th \r\n                            scope=\"col\"\r\n                            className=\"h-12 px-4 text-center align-middle font-medium\"\r\n                          >\r\n                            Details\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {filteredResults.map((result) => (\r\n                          <tr \r\n                            key={result.attemptId} \r\n                            className=\"border-b transition-colors hover:bg-muted/50\"\r\n                          >\r\n                            <td className=\"p-4 align-middle\">\r\n                              <div className=\"font-medium\">{result.quizTitle}</div>\r\n                              <div className=\"text-xs text-muted-foreground\">\r\n                                {result.correctQuestions}/{result.totalQuestions} questions correct\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"p-4 align-middle\">\r\n                              <Badge variant=\"outline\">\r\n                                {result.category || result.className || \"No subject\"}\r\n                              </Badge>\r\n                            </td>\r\n                            <td className=\"p-4 align-middle text-muted-foreground\">\r\n                              {format(new Date(result.completedAt), \"dd/MM/yyyy\")}\r\n                            </td>\r\n                            <td className=\"p-4 align-middle text-right\">\r\n                              <Badge\r\n                                variant={result.score >= 70 ? \"default\" : result.score >= 50 ? \"secondary\" : \"destructive\"}\r\n                              >\r\n                                {result.score.toFixed(1)}%\r\n                              </Badge>\r\n                            </td>\r\n                            <td className=\"p-4 align-middle text-center\">\r\n                              <Button \r\n                                variant=\"ghost\" \r\n                                size=\"icon\"\r\n                                asChild\r\n                              >\r\n                                <Link \r\n                                  href={`/dashboard/student/quizzes/results/${result.attemptId}`}\r\n                                  aria-label={`View details for ${result.quizTitle}`}\r\n                                >\r\n                                  <ChevronRight className=\"h-4 w-4\" />\r\n                                </Link>\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  \r\n                  {resultsTotalPages > 1 && (\r\n                    <Pagination className=\"mt-4\">\r\n                      <PaginationContent>\r\n                        {generateResultsPagination()}\r\n                      </PaginationContent>\r\n                    </Pagination>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CardContent>\r\n            \r\n            <CardFooter className=\"flex justify-between border-t pt-6\">\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                {!isLoadingResults && filteredResults.length > 0 && (\r\n                  <span>Showing {filteredResults.length} of {resultsTotalItems} results</span>\r\n                )}\r\n              </div>\r\n              <Button variant=\"outline\" asChild>\r\n                <Link href=\"/dashboard/student/quizzes/results\">\r\n                  View full results page\r\n                </Link>\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAEA;;;AAnDA;;;;;;;;;;;;;;;;;;;;;;;;AAmGO,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IACxD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACzE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IACnE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,WAAQ,AAAD;IAEzB,wCAAwC;IACxC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC7B,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC/B,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC/B,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAEhC,0BAA0B;IAC1B,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvE,MAAM,iBAAiB,CAAA,GAAA,qIAAA,CAAA,oBAAiB,AAAD;IAEvC,0DAA0D;IAC1D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC3E,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAGtD;QACD,KAAK;QACL,WAAW;IACb;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IACxD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACnD,QAAQ;QACR,MAAM;QACN,UAAU;IACZ;IAEA,mDAAmD;IACnD,MAAM,EACJ,mBAAmB,EACnB,uBAAuB,EACvB,kBAAkB,EAClB,mBAAmB,EACpB,GAAG,CAAA,GAAA,oJAAA,CAAA,eAAY,AAAD;IAEf,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oEAAE;YACpC,4BAA4B;YAC5B,IAAI,cAAc,OAAO,EAAE;YAE3B,cAAc,OAAO,GAAG;YACxB,kBAAkB;YAElB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,OAAO,EAAE,SAAS,MAAM,EAAE;gBAChE;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;oBACjB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;gBAChC;gBAEA,SAAS,KAAK,IAAI;YACpB,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C;gFAAS,CAAC,YAAc,aAAa;;gBACrC,MAAM;oBACJ,SAAS;oBACT,OAAO;oBACP,aAAa,eAAe,QAAQ,IAAI,OAAO,GAAG;gBACpD;YACF,SAAU;gBACR,kBAAkB;gBAClB,cAAc,OAAO,GAAG;YAC1B;QACF;mEAAG;QAAC;KAAM;IAEV,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uEAAE;YACvC,4BAA4B;YAC5B,IAAI,gBAAgB,OAAO,EAAE;YAE7B,gBAAgB,OAAO,GAAG;YAC1B,oBAAoB;YAEpB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,MAAM,EAAE;gBAC9D;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;oBACjB,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;gBAClC;gBAEA,sCAAsC;gBACtC,mBAAmB,KAAK,IAAI,IAAI,EAAE;gBAClC,SAAS;YACX,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qCAAqC;gBACnD,SAAS;YACX,SAAU;gBACR,oBAAoB;gBACpB,gBAAgB,OAAO,GAAG;YAC5B;QACF;sEAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mEAAE;YACnC,4BAA4B;YAC5B,IAAI,gBAAgB,OAAO,EAAE;YAE7B,gBAAgB,OAAO,GAAG;YAC1B,oBAAoB;YAEpB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,qCAAqC,EAAE,iBAAiB,MAAM,EAAE,YAAY,UAAU,EAAE,iBAAiB;gBACvI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,MAAM,EAAE;gBAC9D;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,CAAC,KAAK,OAAO,EAAE;oBACjB,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;gBAClC;gBAEA,6CAA6C;gBAC7C,eAAe,KAAK,IAAI,EAAE,WAAW,EAAE;gBACvC,qBAAqB,KAAK,IAAI,EAAE,YAAY,cAAc;gBAC1D,qBAAqB,KAAK,IAAI,EAAE,YAAY,cAAc;gBAE1D,2CAA2C;gBAC3C,mBAAmB,KAAK,IAAI,EAAE,WAAW,EAAE;gBAE3C,SAAS;YACX,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C,SAAS;YACX,SAAU;gBACR,oBAAoB;gBACpB,gBAAgB,OAAO,GAAG;YAC5B;QACF;kEAAG;QAAC;QAAkB;QAAa;KAAgB;IAEnD,kFAAkF;IAClF,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mEAAE;YACnC,wBAAwB;YAExB,IAAI;gBACF,MAAM,SAAS,IAAI;gBACnB,OAAO,GAAG,CAAC,UAAU,eAAe,MAAM;gBAC1C,OAAO,GAAG,CAAC,QAAQ,eAAe,IAAI,CAAC,QAAQ;gBAC/C,OAAO,GAAG,CAAC,YAAY,eAAe,QAAQ,CAAC,QAAQ;gBAEvD,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,OAAO,QAAQ,IAAI;gBAEzE,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,MAAM,EAAE;gBAC9D;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,KAAK,OAAO,EAAE;oBAChB,eAAe,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE;gBACtC,OAAO;oBACL,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;gBAClC;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,gBAAgB,AAAC,MAAgB,OAAO;gBACxC,MAAM;oBACJ,OAAO;oBACP,aAAa,AAAC,MAAgB,OAAO;oBACrC,SAAS;gBACX;YACF,SAAU;gBACR,wBAAwB;YAC1B;QACF;kEAAG;QAAC;QAAgB;KAAM;IAE1B,qDAAqD;IACrD,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qEAAE;YACrC,IAAI,iBAAiB,OAAO,EAAE;YAE9B,SAAS;YACT,QAAQ,GAAG,CAAC;gBACV;gBACA;gBACA;gBACA;aACD,EAAE,IAAI;6EAAC;oBACN,iBAAiB,OAAO,GAAG;gBAC7B;4EAAG,KAAK;6EAAC,CAAC;oBACR,QAAQ,KAAK,CAAC,iCAAiC;oBAC/C,SAAS;gBACX;;QACF;oEAAG;QAAC;QAAmB;QAAsB;QAAkB;KAAiB;IAEhF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+CAAE;YACR;QACF;8CAAG;QAAC;KAAmB;IAEvB,MAAM,gBAAgB;QACpB,SAAS;QACT,iBAAiB,OAAO,GAAG;QAC3B;IACF;IAEA,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE,CAAC;YAC9B,IAAI,CAAC,YAAY,OAAO;YACxB,IAAI;gBACJ,MAAM,OAAO,IAAI,KAAK;gBACtB,OAAO,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;YACpB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,0BAA0B,YAAY;gBACpD,OAAO;YACT;QACF;4DAAG,EAAE;IAEL,MAAM,oCACJ,SAAS,MAAM,yCAAyC,IAAI,MAAM,yCAAyC,GAAG,KAAK,OAAO,MAAM,yCAAyC,KAAK,WAC1K,WAAW,CAAC,AAAC,MAAM,yCAAyC,GAAG,MAAM,yCAAyC,GAAI,GAAG,EAAE,OAAO,CAAC,MACjI;IAEJ,MAAM,YAAY;IAElB,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+CAAE;YACR,IAAI,YAAY,MAAM,KAAK,GAAG;YAE9B,MAAM,WAAW,YAAY,MAAM;gEAAC,CAAA;oBAClC,IAAI,CAAC,mBAAmB,OAAO;oBAC/B,OACE,OAAO,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,kBAAkB,WAAW,OACpE,OAAO,SAAS,EAAE,cAAc,SAAS,kBAAkB,WAAW,OACtE,OAAO,QAAQ,EAAE,cAAc,SAAS,kBAAkB,WAAW;gBAE1E;;YAEA,mBAAmB;QACrB;8CAAG;QAAC;QAAa;KAAkB;IAEnC,wBAAwB;IACxB,MAAM,oBAAoB,CAAC;QACzB,qBAAqB,CAAA,aAAc,CAAC;gBAClC;gBACA,WAAW,WAAW,GAAG,KAAK,OAAO,WAAW,SAAS,KAAK,SAAS,QAAQ;YACjF,CAAC;QAED,kBAAkB;QAClB,MAAM,gBAAgB;eAAI;SAAgB,CAAC,IAAI,CAAC,CAAC,GAAG;YAClD,IAAI,aAAa;YAEjB,IAAI,QAAQ,QAAQ;gBAClB,aAAa,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO;YAClF,OAAO,IAAI,QAAQ,SAAS;gBAC1B,aAAa,EAAE,KAAK,GAAG,EAAE,KAAK;YAChC,OAAO,IAAI,QAAQ,SAAS;gBAC1B,aAAa,EAAE,SAAS,CAAC,aAAa,CAAC,EAAE,SAAS;YACpD;YAEA,OAAO,kBAAkB,SAAS,KAAK,SAAS,CAAC,aAAa;QAChE;QAEA,mBAAmB;IACrB;IAEA,uCAAuC;IACvC,MAAM,+BAA+B,CAAC;QACpC,oBAAoB;QACpB,eAAe,IAAI,mBAAmB;QACtC,gBAAgB,OAAO,GAAG,OAAO,4BAA4B;QAC7D,oBAAoB,sCAAsC;IAC5D;IAEA,yDAAyD;IACzD,MAAM,4BAA4B;QAChC,MAAM,QAAQ,EAAE;QAChB,MAAM,kBAAkB;QAExB,eAAe;QACf,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;sBACb,cAAA,6LAAC,kIAAA,CAAA,iBAAc;gBACb,SAAS,IAAM,eAAe,CAAA,IAAK,KAAK,GAAG,CAAC,GAAG,IAAI;gBACnD,WAAW,gBAAgB,KAAK,mBAAmB,mCAAmC;gBACtF,iBAAe,gBAAgB,KAAK;;kCAEpC,6LAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,6LAAC;wBACC,OAAM;wBACN,OAAM;wBACN,QAAO;wBACP,SAAQ;wBACR,MAAK;wBACL,QAAO;wBACP,aAAY;wBACZ,eAAc;wBACd,gBAAe;wBACf,WAAU;kCAEV,cAAA,6LAAC;4BAAK,GAAE;;;;;;;;;;;;;;;;;WAnBM;;;;;QAyBtB,6BAA6B;QAC7B,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;sBACb,cAAA,6LAAC,kIAAA,CAAA,iBAAc;gBACb,UAAU,gBAAgB;gBAC1B,SAAS,IAAM,eAAe;0BAC/B;;;;;;WAJiB;;;;;QAUtB,IAAI,qBAAqB,iBAAiB;YACxC,yBAAyB;YACzB,IAAK,IAAI,IAAI,GAAG,KAAK,mBAAmB,IAAK;gBAC3C,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;8BACb,cAAA,6LAAC,kIAAA,CAAA,iBAAc;wBACb,UAAU,gBAAgB;wBAC1B,SAAS,IAAM,eAAe;kCAE7B;;;;;;mBALgB,CAAC,KAAK,EAAE,GAAG;;;;;YASpC;QACF,OAAO;YACL,+BAA+B;YAC/B,yDAAyD;YACzD,IAAI,cAAc,GAAG;gBACnB,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;8BACb,cAAA,6LAAC,kIAAA,CAAA,qBAAkB;;;;;mBADD;;;;;YAIxB;YAEA,uBAAuB;YACvB,MAAM,YAAY,KAAK,GAAG,CAAC,GAAG,cAAc;YAC5C,MAAM,UAAU,KAAK,GAAG,CAAC,oBAAoB,GAAG,cAAc;YAE9D,IAAK,IAAI,IAAI,WAAW,KAAK,SAAS,IAAK;gBACzC,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;8BACb,cAAA,6LAAC,kIAAA,CAAA,iBAAc;wBACb,UAAU,gBAAgB;wBAC1B,SAAS,IAAM,eAAe;kCAE7B;;;;;;mBALgB,CAAC,KAAK,EAAE,GAAG;;;;;YASpC;YAEA,uDAAuD;YACvD,IAAI,cAAc,oBAAoB,GAAG;gBACvC,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;8BACb,cAAA,6LAAC,kIAAA,CAAA,qBAAkB;;;;;mBADD;;;;;YAIxB;YAEA,4BAA4B;YAC5B,IAAI,oBAAoB,GAAG;gBACzB,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;8BACb,cAAA,6LAAC,kIAAA,CAAA,iBAAc;wBACb,UAAU,gBAAgB;wBAC1B,SAAS,IAAM,eAAe;kCAE7B;;;;;;mBALgB,CAAC,KAAK,EAAE,mBAAmB;;;;;YASpD;QACF;QAEA,WAAW;QACX,MAAM,IAAI,eACR,6LAAC,kIAAA,CAAA,iBAAc;sBACb,cAAA,6LAAC,kIAAA,CAAA,iBAAc;gBACb,SAAS,IAAM,eAAe,CAAA,IAAK,KAAK,GAAG,CAAC,mBAAmB,IAAI;gBACnE,WAAW,gBAAgB,qBAAqB,mBAAmB,mCAAmC;gBACtG,iBAAe,gBAAgB,qBAAqB;;kCAEpD,6LAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,6LAAC;wBACC,OAAM;wBACN,OAAM;wBACN,QAAO;wBACP,SAAQ;wBACR,MAAK;wBACL,QAAO;wBACP,aAAY;wBACZ,eAAc;wBACd,gBAAe;wBACf,WAAU;kCAEV,cAAA,6LAAC;4BAAK,GAAE;;;;;;;;;;;;;;;;;WAnBM;;;;;QAyBtB,OAAO;IACT;IAEA,yDAAyD;IACzD,MAAM,sBAAsB,CAAC;QAC3B,IAAI;YACF,MAAM,OAAO,IAAI,KAAK;YACtB,OAAO,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B,YAAY;YACpD,OAAO;QACT;IACF;IAEA,6CAA6C;IAC7C,MAAM,gCAAgC,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gFAAE;YAChD,IAAI;gBACF,kEAAkE;gBAClE,MAAM;gBACN,2BAA2B;YAC7B,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,wCAAwC;gBACtD,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,SAAS;gBACX;YACF;QACF;+EAAG;QAAC;QAAqB;KAAM;IAE/B,qBACE,6LAAC;QAAI,WAAU;;YACZ,SAAS,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,sCACtE,6LAAC,6HAAA,CAAA,QAAK;gBAAC,SAAQ;gBAAc,WAAU;;kCACrC,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,6LAAC,6HAAA,CAAA,aAAU;kCAAC;;;;;;kCACZ,6LAAC,6HAAA,CAAA,mBAAgB;kCAAE;;;;;;;;;;;;0BAKvB,6LAAC,uKAAA,CAAA,mBAAgB;gBACf,MAAM;gBACN,SAAS;gBACT,OAAM;gBACN,aAAY;gBACZ,UAAS;0BAET,cAAA,6LAAC,qKAAA,CAAA,iBAAc;;;;;;;;;;0BAGjB,6LAAC,uKAAA,CAAA,mBAAgB;gBACf,MAAM;gBACN,SAAS;gBACT,OAAM;gBACN,aAAY;gBACZ,UAAS;0BAET,cAAA,6LAAC,kLAAA,CAAA,8BAA2B;oBAC1B,eAAe,OAAO,iBAAiB;oBACvC,WAAW;;;;;;;;;;;0BAIf,6LAAC,uKAAA,CAAA,mBAAgB;gBACf,MAAM;gBACN,SAAS;gBACT,OAAM;gBACN,aAAY;gBACZ,UAAS;0BAET,cAAA,6LAAC;oBAAI,WAAU;;wBACZ,yCACC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;;;;;;wBAKlD,uBAAuB,CAAC,yCACvB,6LAAC,6HAAA,CAAA,QAAK;4BAAC,SAAQ;4BAAc,WAAU;;8CACrC,6LAAC,uNAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;8CACvB,6LAAC,6HAAA,CAAA,aAAU;8CAAC;;;;;;8CACZ,6LAAC,6HAAA,CAAA,mBAAgB;;wCACd;sDACD,6LAAC,8HAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS,IAAM;4CACf,WAAU;sDACX;;;;;;;;;;;;;;;;;;sCAOP,6LAAC,8KAAA,CAAA,0BAAuB;;;;;;;;;;;;;;;;0BAK5B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,2JAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,OAAO,iBAAiB;wBAC/B,oBAAM,6LAAC,iNAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAC1B,WAAW;wBACX,aAAY;wBACZ,WAAU;wBACV,aAAa;wBACb,SAAS,IAAM,sBAAsB;;;;;;kCAGvC,6LAAC,2JAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,OAAO,yBAAyB;wBACvC,MAAK;wBACL,oBAAM,6LAAC,6NAAA,CAAA,iBAAc;4BAAC,WAAU;;;;;;wBAChC,WAAW;wBACX,aAAY;wBACZ,WAAU;wBACV,aAAa;wBACb,SAAS;;;;;;kCAGX,6LAAC,2JAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,OAAO,gBAAgB;wBAC9B,MAAK;wBACL,eAAe,OAAO;wBACtB,oBAAM,6LAAC,qNAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;wBAC5B,WAAW;wBACX,aAAY;wBACZ,WAAU;wBACV,aAAa;wBACb,SAAS,IAAM,sBAAsB;;;;;;kCAGvC,6LAAC,2JAAA,CAAA,WAAQ;wBACP,OAAM;wBACN,OAAO,OAAO,8BAA8B;wBAC5C,MAAK;wBACL,oBAAM,6LAAC,yMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;wBACxB,WAAW;wBACX,aAAY;wBACZ,WAAU;wBACV,aAAa;wBACb,SAAS;;;;;;;;;;;;0BAKb,6LAAC,4HAAA,CAAA,OAAI;gBAAC,cAAa;gBAAW,WAAU;;kCACtC,6LAAC,4HAAA,CAAA,WAAQ;;0CACP,6LAAC,4HAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,6LAAC,4HAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;0CAC7B,6LAAC,4HAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;;;;;;;kCAG/B,6LAAC,4HAAA,CAAA,cAAW;wBAAC,OAAM;wBAAW,WAAU;kCACtC,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,4HAAA,CAAA,OAAI;oCAAC,WAAU;;sDACd,6LAAC,4HAAA,CAAA,aAAU;4CAAC,WAAU;;8DACpB,6LAAC;;sEACC,6LAAC,4HAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,4HAAA,CAAA,kBAAe;sEAAC;;;;;;;;;;;;8DAInB,6LAAC,8HAAA,CAAA,SAAM;oDAAC,SAAQ;oDAAU,MAAK;oDAAK,OAAO;oDAAC,WAAU;8DACpD,cAAA,6LAAC,+JAAA,CAAA,UAAI;wDAAC,MAAK;;4DAA6B;0EAEtC,6LAAC,yNAAA,CAAA,eAAY;gEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;sDAI9B,6LAAC,4HAAA,CAAA,cAAW;4CAAC,WAAU;;gDACpB,kCACC;;sEACE,6LAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,6LAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,6LAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;;;gDAGvB,CAAC,oBAAoB,gBAAgB,MAAM,KAAK,mBAC/C,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,uNAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;sEACvB,6LAAC;4DAAE,WAAU;sEAAO;;;;;;;;;;;;gDAGvB,CAAC,oBAAoB,gBAAgB,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,qBACrD,6LAAC,8JAAA,CAAA,eAAY;wDAAe,MAAM;uDAAf,KAAK,EAAE;;;;;;;;;;;;;;;;;8CAKhC,6LAAC,4HAAA,CAAA,OAAI;oCAAC,WAAU;;sDACd,6LAAC,4HAAA,CAAA,aAAU;4CAAC,WAAU;;8DACpB,6LAAC;;sEACC,6LAAC,4HAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,4HAAA,CAAA,kBAAe;sEAAC;;;;;;;;;;;;8DAInB,6LAAC,8HAAA,CAAA,SAAM;oDAAC,SAAQ;oDAAU,MAAK;oDAAK,WAAU;oDAAY,SAAS;;wDAA+B;sEAEhG,6LAAC,iNAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;;;;;;;;;;;;;sDAGxB,6LAAC,4HAAA,CAAA,cAAW;;gDACT,gCACC;;sEACE,6LAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,6LAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,6LAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;;;gDAGvB,CAAC,kBAAkB,uBAClB,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;gEACZ;gEAAkC;;;;;;;sEAErC,6LAAC;4DAAI,WAAU;sEACb,cAAA,6LAAC,gIAAA,CAAA,WAAQ;gEACP,OAAO;gEACP,KAAK;gEACL,WAAU;;;;;;;;;;;sEAGd,6LAAC;4DAAE,WAAU;;gEACV,MAAM,yCAAyC;gEAAC;gEAAK,MAAM,yCAAyC;gEAAC;;;;;;;;;;;;;gDAI3G,CAAC,kBAAkB,CAAC,SAAS,CAAC,uBAC7B,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;kEAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQf,6LAAC,4HAAA,CAAA,cAAW;wBAAC,OAAM;wBAAU,WAAU;kCACrC,cAAA,6LAAC,4HAAA,CAAA,OAAI;;8CACH,6LAAC,4HAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC;;8DACC,6LAAC,4HAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,4HAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAInB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,8HAAA,CAAA,SAAM;oDACL,OAAO,eAAe,MAAM;oDAC5B,eAAe,CAAC,QAAU,kBAAkB,CAAA,OAAQ,CAAC;gEAAC,GAAG,IAAI;gEAAE,QAAQ;4DAAK,CAAC;;sEAE7E,6LAAC,8HAAA,CAAA,gBAAa;4DAAC,WAAU;sEACvB,cAAA,6LAAC,8HAAA,CAAA,cAAW;gEAAC,aAAY;;;;;;;;;;;sEAE3B,6LAAC,8HAAA,CAAA,gBAAa;;8EACZ,6LAAC,8HAAA,CAAA,aAAU;oEAAC,OAAM;8EAAM;;;;;;8EACxB,6LAAC,8HAAA,CAAA,aAAU;oEAAC,OAAM;8EAAW;;;;;;8EAC7B,6LAAC,8HAAA,CAAA,aAAU;oEAAC,OAAM;8EAAU;;;;;;8EAC5B,6LAAC,8HAAA,CAAA,aAAU;oEAAC,OAAM;8EAAY;;;;;;;;;;;;;;;;;;8DAGlC,6LAAC,8HAAA,CAAA,SAAM;oDACL,SAAQ;oDACR,MAAK;oDACL,WAAU;oDACV,SAAS,IAAM;8DAEf,cAAA,6LAAC,mNAAA,CAAA,YAAS;wDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;8CAI3B,6LAAC,4HAAA,CAAA,cAAW;8CACT,qCACC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,gIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,6LAAC,gIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;+CAEpB,6BACF,6LAAC,6HAAA,CAAA,QAAK;wCAAC,SAAQ;;0DACb,6LAAC,6HAAA,CAAA,aAAU;0DAAC;;;;;;0DACZ,6LAAC,6HAAA,CAAA,mBAAgB;0DAAE;;;;;;;;;;;+CAEnB,YAAY,MAAM,GAAG,kBACvB,6LAAC;wCAAI,WAAU;kDACZ,YAAY,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,qBAC5B,6LAAC;gDAAkB,WAAU;;kEAC3B,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;;kFACC,6LAAC;wEAAG,WAAU;kFAAe,KAAK,KAAK;;;;;;kFACvC,6LAAC;wEAAE,WAAU;kFACV,KAAK,KAAK,EAAE,QAAQ,KAAK,QAAQ,IAAI;;;;;;;;;;;;0EAG1C,6LAAC,6HAAA,CAAA,QAAK;gEAAC,SAAQ;;oEACZ,KAAK,MAAM,EAAE,aAAa;oEAAE;;;;;;;;;;;;;kEAGjC,6LAAC;wDAAE,WAAU;kEACV,KAAK,WAAW,IAAI;;;;;;kEAEvB,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,6MAAA,CAAA,WAAQ;wEAAC,WAAU;;;;;;kFACpB,6LAAC;;4EACE,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;4EAC3C,KAAK,OAAO,IAAI,CAAC,GAAG,EAAE,IAAI,KAAK,KAAK,OAAO,EAAE,kBAAkB,IAAI;;;;;;;;;;;;;0EAGxE,6LAAC,8HAAA,CAAA,SAAM;gEAAC,SAAQ;gEAAU,MAAK;gEAAK,OAAO;0EACzC,cAAA,6LAAC,+JAAA,CAAA,UAAI;oEAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;8EAC3B,KAAK,MAAM,KAAK,cAAc,iBAAiB;;;;;;;;;;;;;;;;;;+CAzB9C,KAAK,EAAE;;;;;;;;;6DAiCrB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,qNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;0DACtB,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAE,WAAU;;oDAAqC;oDAC5B,eAAe,MAAM,KAAK,QAAQ,KAAK,eAAe,MAAM;oDAAC;;;;;;;;;;;;;;;;;;8CAKzF,6LAAC,4HAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC;4CAAI,WAAU;sDACZ,CAAC,wBAAwB,YAAY,MAAM,GAAG,mBAC7C,6LAAC;;oDAAK;oDAAS,KAAK,GAAG,CAAC,GAAG,YAAY,MAAM;oDAAE;oDAAK,YAAY,MAAM;oDAAC;;;;;;;;;;;;sDAG3E,6LAAC,8HAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,MAAK;4CAAK,OAAO;sDACzC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gDAAC,MAAK;0DAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMhD,6LAAC,4HAAA,CAAA,cAAW;wBAAC,OAAM;wBAAU,WAAU;kCACrC,cAAA,6LAAC,4HAAA,CAAA,OAAI;;8CACH,6LAAC,4HAAA,CAAA,aAAU;8CACT,cAAA,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;;kEACC,6LAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,6LAAC,4HAAA,CAAA,kBAAe;kEAAC;;;;;;;;;;;;0DAKnB,6LAAC,8HAAA,CAAA,SAAM;gDACL,OAAO;gDACP,eAAe;;kEAEf,6LAAC,8HAAA,CAAA,gBAAa;wDAAC,WAAU;;0EACvB,6LAAC,6MAAA,CAAA,WAAQ;gEAAC,WAAU;;;;;;0EACpB,6LAAC,8HAAA,CAAA,cAAW;gEAAC,aAAY;;;;;;;;;;;;kEAE3B,6LAAC,8HAAA,CAAA,gBAAa;;0EACZ,6LAAC,8HAAA,CAAA,aAAU;gEAAC,OAAM;0EAAY;;;;;;0EAC9B,6LAAC,8HAAA,CAAA,aAAU;gEAAC,OAAM;0EAAa;;;;;;0EAC/B,6LAAC,8HAAA,CAAA,aAAU;gEAAC,OAAM;0EAAa;;;;;;0EAC/B,6LAAC,8HAAA,CAAA,aAAU;gEAAC,OAAM;0EAAc;;;;;;0EAChC,6LAAC,8HAAA,CAAA,aAAU;gEAAC,OAAM;0EAAW;;;;;;0EAC7B,6LAAC,8HAAA,CAAA,aAAU;gEAAC,OAAM;0EAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAMpC,6LAAC,4HAAA,CAAA,cAAW;;sDACV,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,yMAAA,CAAA,SAAM;wDACL,WAAU;wDACV,eAAY;;;;;;kEAEd,6LAAC,6HAAA,CAAA,QAAK;wDACJ,MAAK;wDACL,aAAY;wDACZ,WAAU;wDACV,OAAO;wDACP,UAAU,CAAC,IAAM,qBAAqB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;wCAKzD,kCACC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,gIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,6LAAC,gIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;wCAIvB,CAAC,oBAAoB,gBAAgB,MAAM,KAAK,KAAK,CAAC,uBACrD,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,qNAAA,CAAA,aAAU;oDAAC,WAAU;;;;;;8DACtB,6LAAC;oDAAG,WAAU;8DAAsB;;;;;;8DACpC,6LAAC;oDAAE,WAAU;;wDAAqC;wDACV,oBAAoB,0BAA0B;;;;;;;;;;;;;wCAKzF,CAAC,oBAAoB,uBACpB,6LAAC,6HAAA,CAAA,QAAK;4CAAC,SAAQ;;8DACb,6LAAC,6HAAA,CAAA,aAAU;8DAAC;;;;;;8DACZ,6LAAC,6HAAA,CAAA,mBAAgB;8DAAE;;;;;;;;;;;;wCAItB,CAAC,oBAAoB,gBAAgB,MAAM,GAAG,KAAK,CAAC,uBACnD;;8DACE,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDACC,WAAU;wDACV,cAAW;;0EAEX,6LAAC;0EACC,cAAA,6LAAC;oEAAG,WAAU;;sFACZ,6LAAC;4EACC,OAAM;4EACN,WAAU;sFAEV,cAAA,6LAAC;gFACC,SAAS,IAAM,kBAAkB;gFACjC,WAAU;;oFACX;oFAEE,kBAAkB,GAAG,KAAK,yBACzB,6LAAC,2NAAA,CAAA,cAAW;wFAAC,WAAU;;;;;;;;;;;;;;;;;sFAI7B,6LAAC;4EACC,OAAM;4EACN,WAAU;sFACX;;;;;;sFAGD,6LAAC;4EACC,OAAM;4EACN,WAAU;sFAEV,cAAA,6LAAC;gFACC,SAAS,IAAM,kBAAkB;gFACjC,WAAU;;oFACX;oFAEE,kBAAkB,GAAG,KAAK,wBACzB,6LAAC,2NAAA,CAAA,cAAW;wFAAC,WAAU;;;;;;;;;;;;;;;;;sFAI7B,6LAAC;4EACC,OAAM;4EACN,WAAU;sFAEV,cAAA,6LAAC;gFACC,SAAS,IAAM,kBAAkB;gFACjC,WAAU;;oFACX;oFAEE,kBAAkB,GAAG,KAAK,yBACzB,6LAAC,2NAAA,CAAA,cAAW;wFAAC,WAAU;;;;;;;;;;;;;;;;;sFAI7B,6LAAC;4EACC,OAAM;4EACN,WAAU;sFACX;;;;;;;;;;;;;;;;;0EAKL,6LAAC;0EACE,gBAAgB,GAAG,CAAC,CAAC,uBACpB,6LAAC;wEAEC,WAAU;;0FAEV,6LAAC;gFAAG,WAAU;;kGACZ,6LAAC;wFAAI,WAAU;kGAAe,OAAO,SAAS;;;;;;kGAC9C,6LAAC;wFAAI,WAAU;;4FACZ,OAAO,gBAAgB;4FAAC;4FAAE,OAAO,cAAc;4FAAC;;;;;;;;;;;;;0FAGrD,6LAAC;gFAAG,WAAU;0FACZ,cAAA,6LAAC,6HAAA,CAAA,QAAK;oFAAC,SAAQ;8FACZ,OAAO,QAAQ,IAAI,OAAO,SAAS,IAAI;;;;;;;;;;;0FAG5C,6LAAC;gFAAG,WAAU;0FACX,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,OAAO,WAAW,GAAG;;;;;;0FAExC,6LAAC;gFAAG,WAAU;0FACZ,cAAA,6LAAC,6HAAA,CAAA,QAAK;oFACJ,SAAS,OAAO,KAAK,IAAI,KAAK,YAAY,OAAO,KAAK,IAAI,KAAK,cAAc;;wFAE5E,OAAO,KAAK,CAAC,OAAO,CAAC;wFAAG;;;;;;;;;;;;0FAG7B,6LAAC;gFAAG,WAAU;0FACZ,cAAA,6LAAC,8HAAA,CAAA,SAAM;oFACL,SAAQ;oFACR,MAAK;oFACL,OAAO;8FAEP,cAAA,6LAAC,+JAAA,CAAA,UAAI;wFACH,MAAM,CAAC,mCAAmC,EAAE,OAAO,SAAS,EAAE;wFAC9D,cAAY,CAAC,iBAAiB,EAAE,OAAO,SAAS,EAAE;kGAElD,cAAA,6LAAC,yNAAA,CAAA,eAAY;4FAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;uEAlCzB,OAAO,SAAS;;;;;;;;;;;;;;;;;;;;;gDA4C9B,oBAAoB,mBACnB,6LAAC,kIAAA,CAAA,aAAU;oDAAC,WAAU;8DACpB,cAAA,6LAAC,kIAAA,CAAA,oBAAiB;kEACf;;;;;;;;;;;;;;;;;;;8CAQb,6LAAC,4HAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC;4CAAI,WAAU;sDACZ,CAAC,oBAAoB,gBAAgB,MAAM,GAAG,mBAC7C,6LAAC;;oDAAK;oDAAS,gBAAgB,MAAM;oDAAC;oDAAK;oDAAkB;;;;;;;;;;;;sDAGjE,6LAAC,8HAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,OAAO;sDAC/B,cAAA,6LAAC,+JAAA,CAAA,UAAI;gDAAC,MAAK;0DAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUhE;GA59BgB;;QAQI,mIAAA,CAAA,WAAQ;QAYH,qIAAA,CAAA,oBAAiB;QAkCpC,oJAAA,CAAA,eAAY;;;KAtDF","debugId":null}}]
}
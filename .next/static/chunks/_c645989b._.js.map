{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> & {\n    variant?: \"default\" | \"muted\" | \"accent\" | \"gradient\"\n  }\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, variant = \"default\", ...props },\n    ref\n  ) => {\n    const variantClasses = {\n      default: \"bg-border\",\n      muted: \"bg-muted\",\n      accent: \"bg-accent/30\",\n      gradient: \"bg-gradient-to-r from-transparent via-border/70 to-transparent\"\n    }\n\n    return (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n          \"shrink-0\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n          variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  )\n  }\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAM/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAC3F;IAEA,MAAM,iBAAiB;QACrB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IAEA,qBACA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,YACF,gBAAgB,eAAe,mBAAmB,kBAChD,cAAc,CAAC,QAAQ,EACzB;QAED,GAAG,KAAK;;;;;;AAGb;;AAEF,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/toggle.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-2 min-w-9\",\n        sm: \"h-8 px-1.5 min-w-8\",\n        lg: \"h-10 px-2.5 min-w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,mYACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,oBACzC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;;AAIb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/toggle-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAGA;AACA;;;AAPA;;;;;AASA,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EAE3C;IACA,MAAM;IACN,SAAS;AACX;AAEA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAIjC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACnD,6LAAC,8KAAA,CAAA,OAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;kBAET,cAAA,6LAAC,mBAAmB,QAAQ;YAAC,OAAO;gBAAE;gBAAS;YAAK;sBACjD;;;;;;;;;;;;AAKP,YAAY,WAAW,GAAG,8KAAA,CAAA,OAAyB,CAAC,WAAW;AAE/D,MAAM,gCAAkB,GAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,WAIrC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;;IACnD,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,qBACE,6LAAC,8KAAA,CAAA,OAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;YACb,SAAS,QAAQ,OAAO,IAAI;YAC5B,MAAM,QAAQ,IAAI,IAAI;QACxB,IACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEA,gBAAgB,WAAW,GAAG,8KAAA,CAAA,OAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/editor/rich-text-editor.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEditor, EditorContent, type Editor as TiptapEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport Placeholder from '@tiptap/extension-placeholder';\nimport Heading from '@tiptap/extension-heading';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport ListItem from '@tiptap/extension-list-item';\nimport Link from '@tiptap/extension-link';\nimport { cn } from \"@/lib/utils\";\nimport { \n  Bold, \n  Italic, \n  List, \n  ListOrdered, \n  Heading1, \n  Heading2, \n  Link2,\n  AlignLeft,\n  AlignCenter,\n  AlignRight\n} from \"lucide-react\";\nimport { Toggle } from \"../toggle\";\nimport { \n  ToggleGroup, \n  ToggleGroupItem \n} from \"../toggle-group\";\n\ninterface RichTextEditorProps {\n  content: string;\n  onChange: (html: string) => void;\n  placeholder?: string;\n  className?: string;\n  minHeight?: string;\n  rawOutput?: boolean;\n}\n\nexport function RichTextEditor({\n  content,\n  onChange,\n  placeholder = \"Enter content...\",\n  className,\n  minHeight = \"200px\",\n  rawOutput = false\n}: RichTextEditorProps) {\n  \n  const sanitizeContent = (html: string): string => {\n    if (!rawOutput) {\n      const isSimpleText = html.startsWith('<p>') && html.endsWith('</p>') &&\n        !html.includes('<p>', 1) && !html.slice(0, html.length - 4).includes('</p>') &&\n        !/<[a-z][^>]*>/i.test(html.substring(3, html.length - 4));\n        \n      if (isSimpleText) {\n        return html.substring(3, html.length - 4);\n      }\n    }\n    \n    return html;\n  };\n  \n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      Placeholder.configure({\n        placeholder,\n      }),\n      Heading.configure({\n        levels: [1, 2],\n      }),\n      BulletList,\n      OrderedList,\n      ListItem,\n      Link.configure({\n        openOnClick: true,\n        autolink: true,\n        HTMLAttributes: {\n          target: '_blank',\n          rel: 'noopener noreferrer nofollow',\n        },\n      }),\n    ],\n    content,\n    onUpdate: ({ editor }: { editor: TiptapEditor }) => {\n      const html = editor.getHTML();\n      onChange(sanitizeContent(html));\n    },\n    editorProps: {\n      attributes: {\n        class: 'prose dark:prose-invert prose-sm sm:prose-base prose-stone focus:outline-none max-w-none h-full',\n      },\n    },\n  });\n\n  const setLink = () => {\n    if (!editor) return;\n    \n    const previousUrl = editor.getAttributes('link').href;\n    const url = window.prompt('URL', previousUrl);\n\n    if (url === null) return;\n\n    if (url === '') {\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\n      return;\n    }\n\n    editor.chain().focus().extendMarkRange('link').setLink({ href: url }).run();\n  };\n\n  if (!editor) {\n    return null;\n  }\n\n  return (\n    <div className={cn(\"flex flex-col gap-2\", className)}>\n      <div className=\"flex flex-wrap bg-muted/50 rounded-md border p-1 gap-1\">\n        <ToggleGroup type=\"multiple\">\n          <ToggleGroupItem \n            value=\"bold\" \n            aria-label=\"Bold\" \n            size=\"sm\"\n            data-state={editor.isActive('bold') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleBold().run()}\n          >\n            <Bold className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n          <ToggleGroupItem \n            value=\"italic\" \n            aria-label=\"Italic\" \n            size=\"sm\"\n            data-state={editor.isActive('italic') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleItalic().run()}\n          >\n            <Italic className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n\n        <div className=\"w-px h-6 bg-border mx-1\" />\n\n        <ToggleGroup type=\"single\" value={editor.isActive('heading', { level: 1 }) ? 'h1' : editor.isActive('heading', { level: 2 }) ? 'h2' : 'p'}>\n          <ToggleGroupItem \n            value=\"h1\" \n            aria-label=\"Heading 1\" \n            size=\"sm\"\n            data-state={editor.isActive('heading', { level: 1 }) ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\n          >\n            <Heading1 className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n          <ToggleGroupItem \n            value=\"h2\" \n            aria-label=\"Heading 2\" \n            size=\"sm\"\n            data-state={editor.isActive('heading', { level: 2 }) ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\n          >\n            <Heading2 className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n\n        <div className=\"w-px h-6 bg-border mx-1\" />\n\n        <ToggleGroup type=\"multiple\">\n          <ToggleGroupItem \n            value=\"bulletList\" \n            aria-label=\"Bullet List\" \n            size=\"sm\"\n            data-state={editor.isActive('bulletList') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleBulletList().run()}\n          >\n            <List className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n          <ToggleGroupItem \n            value=\"orderedList\" \n            aria-label=\"Ordered List\" \n            size=\"sm\"\n            data-state={editor.isActive('orderedList') ? \"on\" : \"off\"}\n            onClick={() => editor.chain().focus().toggleOrderedList().run()}\n          >\n            <ListOrdered className=\"h-4 w-4\" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n        \n        <div className=\"w-px h-6 bg-border mx-1\" />\n        \n        <Toggle\n          size=\"sm\"\n          pressed={editor.isActive('link')}\n          onClick={setLink}\n          aria-label=\"Link\"\n        >\n          <Link2 className=\"h-4 w-4\" />\n        </Toggle>\n      </div>\n      <div \n        className={cn(\n          \"border rounded-md p-3 overflow-y-auto\",\n          minHeight ? `min-h-[${minHeight}]` : undefined\n        )}\n        style={{ minHeight }}\n      >\n        <EditorContent editor={editor} />\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/components/EssayGrading.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { RichTextEditor } from \"@/components/ui/editor/rich-text-editor\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { RubricCriterion } from \"@/components/ui/editor/rubric-builder\";\nimport { HelpCircle, Save, ThumbsUp, MessageSquare, AlertCircle } from \"lucide-react\";\n\ntype ScoreByLevel = {\n  [criterionId: string]: string; // Level ID selected for each criterion\n};\n\ninterface RubricLevel {\n  id: string;\n  name: string;\n  description: string;\n  points: number;\n}\n\ninterface EssayGradingProps {\n  quizId: string;\n  attemptId: string;\n  answerId: string;\n  questionContent: string;\n  studentAnswer: string;\n  questionPoints: number;\n  existingScore?: number | null;\n  existingFeedback?: string | null;\n  rubric?: RubricCriterion[];\n  gradingGuide?: string | null;\n  exampleAnswer?: string | null;\n  onSaveGrade: (score: number, feedback: string) => Promise<void>;\n  isRichText?: boolean;\n}\n\nexport function EssayGrading({\n  quizId,\n  attemptId,\n  answerId,\n  questionContent,\n  studentAnswer,\n  questionPoints,\n  existingScore,\n  existingFeedback = \"\",\n  rubric = [],\n  gradingGuide = null,\n  exampleAnswer = null,\n  onSaveGrade,\n  isRichText = false\n}: EssayGradingProps) {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [feedback, setFeedback] = useState(existingFeedback || \"\");\n  const [score, setScore] = useState<number>(existingScore || 0);\n  const [selectedLevels, setSelectedLevels] = useState<ScoreByLevel>({});\n  const [wordCount, setWordCount] = useState(0);\n  const [activeTab, setActiveTab] = useState(rubric.length > 0 ? \"rubric\" : \"manual\");\n  const [showGradingResources, setShowGradingResources] = useState(false);\n\n  // Count words in student answer\n  useEffect(() => {\n    if (studentAnswer) {\n      // Strip HTML tags if richText is true\n      const textOnly = isRichText \n        ? studentAnswer.replace(/<[^>]*>/g, ' ') \n        : studentAnswer;\n      \n      const words = textOnly.trim().split(/\\s+/);\n      setWordCount(words.length);\n    } else {\n      setWordCount(0);\n    }\n  }, [studentAnswer, isRichText]);\n\n  // Update score when a rubric level is selected\n  useEffect(() => {\n    if (rubric.length > 0 && Object.keys(selectedLevels).length > 0) {\n      let calculatedScore = 0;\n      \n      rubric.forEach(criterion => {\n        const selectedLevelId = selectedLevels[criterion.id];\n        if (selectedLevelId) {\n          const level = criterion.levels.find(l => l.id === selectedLevelId);\n          if (level) {\n            calculatedScore += level.points;\n          }\n        }\n      });\n      \n      // Đảm bảo điểm không vượt quá giới hạn điểm tối đa của câu hỏi\n      calculatedScore = Math.min(calculatedScore, questionPoints);\n      \n      setScore(calculatedScore);\n    }\n  }, [selectedLevels, rubric, questionPoints]);\n\n  const handleLevelSelect = (criterionId: string, levelId: string) => {\n    setSelectedLevels(prev => ({\n      ...prev,\n      [criterionId]: levelId\n    }));\n  };\n\n  const handleSave = async () => {\n    setIsLoading(true);\n    \n    try {\n      // Đảm bảo điểm nằm trong khoảng hợp lệ trước khi lưu\n      const validScore = Math.min(Math.max(0, score), questionPoints);\n      \n      if (validScore !== score) {\n        setScore(validScore);\n        toast({\n          title: \"Score adjusted\",\n          description: `Score has been adjusted to ${validScore} to stay within allowed range (0-${questionPoints}).`,\n          variant: \"destructive\",\n        });\n      }\n      \n      await onSaveGrade(validScore, feedback);\n      toast({\n        title: \"Grade saved\",\n        description: \"The essay has been graded successfully.\",\n      });\n    } catch (error) {\n      console.error(\"Error saving grade:\", error);\n      toast({\n        title: \"Error saving grade\",\n        description: \"There was a problem saving the grade. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-xl font-semibold\">Essay Grading</h2>\n          <p className=\"text-muted-foreground\">\n            Grade the student's essay response and provide feedback\n          </p>\n        </div>\n        <Button onClick={handleSave} disabled={isLoading}>\n          {isLoading ? (\n            <>Saving...</>\n          ) : (\n            <>\n              <Save className=\"h-4 w-4 mr-2\" />\n              Save Grade\n            </>\n          )}\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Left column: Question and Answer */}\n        <div className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-lg\">Question</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div \n                className=\"prose prose-sm dark:prose-invert max-w-none\"\n                dangerouslySetInnerHTML={{ __html: questionContent }}\n              />\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"flex justify-between items-center\">\n                <span className=\"text-lg\">Student Answer</span>\n                <Badge variant=\"outline\">{wordCount} words</Badge>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {isRichText ? (\n                <div \n                  className=\"prose prose-sm dark:prose-invert max-w-none\"\n                  dangerouslySetInnerHTML={{ __html: studentAnswer }}\n                />\n              ) : (\n                <div className=\"whitespace-pre-wrap\">{studentAnswer}</div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Grading Resources (Conditionally Show) */}\n          {(gradingGuide || exampleAnswer) && (\n            <div className=\"mt-4\">\n              <Button \n                variant=\"outline\" \n                onClick={() => setShowGradingResources(!showGradingResources)}\n                className=\"w-full\"\n              >\n                {showGradingResources ? \"Hide Grading Resources\" : \"Show Grading Resources\"}\n              </Button>\n              \n              {showGradingResources && (\n                <div className=\"space-y-4 mt-4\">\n                  {gradingGuide && (\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <CardTitle className=\"text-lg flex items-center\">\n                          <HelpCircle className=\"h-4 w-4 mr-2\" />\n                          Grading Guide\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div \n                          className=\"prose prose-sm dark:prose-invert max-w-none\"\n                          dangerouslySetInnerHTML={{ __html: gradingGuide }}\n                        />\n                      </CardContent>\n                    </Card>\n                  )}\n                  \n                  {exampleAnswer && (\n                    <Card>\n                      <CardHeader className=\"pb-2\">\n                        <CardTitle className=\"text-lg flex items-center\">\n                          <ThumbsUp className=\"h-4 w-4 mr-2\" />\n                          Example Answer\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div \n                          className=\"prose prose-sm dark:prose-invert max-w-none\"\n                          dangerouslySetInnerHTML={{ __html: exampleAnswer }}\n                        />\n                      </CardContent>\n                    </Card>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Right column: Grading */}\n        <div className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-lg\">Grading</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Tabs value={activeTab} onValueChange={setActiveTab}>\n                <TabsList className=\"grid w-full grid-cols-2\">\n                  {rubric.length > 0 && (\n                    <TabsTrigger value=\"rubric\">Rubric Grading</TabsTrigger>\n                  )}\n                  <TabsTrigger value=\"manual\">Manual Grading</TabsTrigger>\n                </TabsList>\n\n                {rubric.length > 0 && (\n                  <TabsContent value=\"rubric\" className=\"space-y-4 pt-4\">\n                    {rubric.map((criterion) => (\n                      <div key={criterion.id} className=\"space-y-2 pt-2\">\n                        <div className=\"font-medium\">{criterion.name} ({criterion.pointsAvailable} points)</div>\n                        {criterion.description && (\n                          <p className=\"text-sm text-muted-foreground mb-2\">{criterion.description}</p>\n                        )}\n                        \n                        <div className=\"grid gap-2\">\n                          {criterion.levels.map((level) => (\n                            <div \n                              key={level.id}\n                              className={`\n                                p-3 rounded-md border cursor-pointer\n                                ${selectedLevels[criterion.id] === level.id ? \n                                  'border-primary bg-primary/5' : \n                                  'hover:border-primary/50'\n                                }\n                              `}\n                              onClick={() => handleLevelSelect(criterion.id, level.id)}\n                            >\n                              <div className=\"flex justify-between\">\n                                <div className=\"font-medium\">{level.name}</div>\n                                <div>{level.points} points</div>\n                              </div>\n                              {level.description && (\n                                <p className=\"text-sm mt-1\">{level.description}</p>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                        <Separator className=\"my-4\" />\n                      </div>\n                    ))}\n                  </TabsContent>\n                )}\n\n                <TabsContent value=\"manual\" className=\"space-y-4 pt-4\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"flex justify-between mb-2\">\n                        <label className=\"font-medium\">Score</label>\n                        <span>{score} / {questionPoints}</span>\n                      </div>\n                      <Slider\n                        value={[score]}\n                        max={questionPoints}\n                        step={0.5}\n                        onValueChange={(values) => setScore(values[0])}\n                      />\n                    </div>\n                  </div>\n                </TabsContent>\n              </Tabs>\n              \n              <div className=\"mt-6 space-y-2\">\n                <label className=\"font-medium\">Feedback</label>\n                <RichTextEditor\n                  content={feedback}\n                  onChange={setFeedback}\n                  placeholder=\"Enter feedback for the student...\"\n                  minHeight=\"150px\"\n                />\n                <div className=\"flex items-start gap-2 mt-2\">\n                  <AlertCircle className=\"h-4 w-4 text-muted-foreground mt-0.5\" />\n                  <p className=\"text-sm text-muted-foreground\">\n                    Provide specific feedback on strengths and areas for improvement\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1624, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1659, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1736, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { AlertCircle, Check, Info, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success:\n          \"border-success/50 text-success dark:border-success [&>svg]:text-success\",\n        warning:\n          \"border-warning/50 text-warning dark:border-warning [&>svg]:text-warning\",\n        info:\n          \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n      size: {\n        default: \"text-sm\",\n        sm: \"text-xs p-3 [&>svg]:top-3 [&>svg]:left-3\",\n        lg: \"text-base p-5 [&>svg]:top-5 [&>svg]:left-5\",\n      },\n      dismissible: {\n        true: \"pr-10\", // Extra space for close button\n        false: \"\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      dismissible: false,\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof alertVariants> & {\n      icon?: React.ReactNode,\n      dismissible?: boolean,\n      onDismiss?: () => void\n    }\n>(({ className, variant, size, icon, dismissible = false, onDismiss, children, ...props }, ref) => {\n    // Default icons based on variant\n  const getDefaultIcon = () => {\n    if (!icon) {\n      switch (variant) {\n        case \"destructive\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"success\":\n          return <Check className=\"h-4 w-4\" />\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />\n        case \"info\":\n          return <Info className=\"h-4 w-4\" />\n        default:\n      return null\n      }\n    }\n    return icon\n    }\n\n    return (\n  <div\n    ref={ref}\n    role=\"alert\"\n      className={cn(alertVariants({ variant, size, dismissible, className }))}\n    {...props}\n      >\n      {getDefaultIcon()}\n      <div className=\"flex-1\">{children}</div>\n      {dismissible && onDismiss && (\n        <button \n          onClick={onDismiss}\n          className=\"absolute right-3 top-3 rounded-full p-1 text-foreground/50 opacity-70 transition-opacity hover:opacity-100 hover:bg-muted\"\n          aria-label=\"Dismiss alert\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      )}\n      </div>\n    )\n})\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;QACA,aAAa;YACX,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,aAAa;IACf;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAQ3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvF,iCAAiC;IACnC,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM;YACT,OAAQ;gBACN,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;gBAC1B,KAAK;oBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;gBAChC,KAAK;oBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;gBACzB;oBACF,OAAO;YACP;QACF;QACA,OAAO;IACP;IAEA,qBACF,6LAAC;QACC,KAAK;QACL,MAAK;QACH,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;YAAS;YAAM;YAAa;QAAU;QACrE,GAAG,KAAK;;YAEN;0BACD,6LAAC;gBAAI,WAAU;0BAAU;;;;;;YACxB,eAAe,2BACd,6LAAC;gBACC,SAAS;gBACT,WAAU;gBACV,cAAW;0BAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,qKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/components/CodeGrading.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Save, Play, Check, X, Code, Terminal } from \"lucide-react\";\n\ninterface TestCase {\n  input: string;\n  output: string;\n  hidden?: boolean;\n  result?: {\n    passed: boolean;\n    actual?: string;\n    expected?: string;\n  };\n}\n\ninterface CodeGradingProps {\n  quizId: string;\n  attemptId: string;\n  answerId: string;\n  questionContent: string;\n  studentCode: string;\n  questionPoints: number;\n  existingScore?: number | null;\n  existingFeedback?: string | null;\n  language?: string;\n  testCases?: TestCase[];\n  solutionCode?: string;\n  onSaveGrade: (score: number, feedback: string) => Promise<void>;\n}\n\nexport function CodeGrading({\n  quizId,\n  attemptId,\n  answerId,\n  questionContent,\n  studentCode,\n  questionPoints,\n  existingScore,\n  existingFeedback = \"\",\n  language = \"javascript\",\n  testCases = [],\n  solutionCode = \"\",\n  onSaveGrade\n}: CodeGradingProps) {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRunningCode, setIsRunningCode] = useState(false);\n  const [feedback, setFeedback] = useState(existingFeedback || \"\");\n  const [score, setScore] = useState<number>(existingScore || 0);\n  const [testResults, setTestResults] = useState<TestCase[]>(testCases);\n  const [manualScore, setManualScore] = useState(existingScore || Math.floor(questionPoints / 2));\n  const [codeOutput, setCodeOutput] = useState<string>(\"\");\n  const [autoGradeEnabled, setAutoGradeEnabled] = useState(true);\n  const [activeTab, setActiveTab] = useState(\"code\");\n\n  // Automatically calculate score based on test case results when autoGradeEnabled\n  useEffect(() => {\n    if (autoGradeEnabled && testResults.some(test => test.result)) {\n      const passedTests = testResults.filter(test => test.result?.passed).length;\n      const totalTests = testResults.length;\n      \n      if (totalTests > 0) {\n        const calculatedScore = Math.round((passedTests / totalTests) * questionPoints);\n        setScore(calculatedScore);\n      }\n    } else {\n      setScore(manualScore);\n    }\n  }, [testResults, questionPoints, autoGradeEnabled, manualScore]);\n\n  // Run the student code against test cases\n  const runCode = async () => {\n    setIsRunningCode(true);\n    setCodeOutput(\"\");\n    \n    try {\n      // In a real implementation, this would call an API endpoint that can run the code safely\n      const response = await fetch(\"/api/code-runner\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          code: studentCode,\n          language,\n          testCases\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to run code\");\n      }\n      \n      const data = await response.json();\n      \n      setTestResults(data.testResults);\n      setCodeOutput(data.output || \"Code execution completed\");\n      \n      toast({\n        title: \"Code execution completed\",\n        description: `${data.testResults.filter((t: TestCase) => t.result?.passed).length}/${data.testResults.length} tests passed`,\n      });\n    } catch (error) {\n      console.error(\"Error running code:\", error);\n      setCodeOutput(\"Error running code. This could be due to syntax errors or execution timeout.\");\n      \n      toast({\n        title: \"Error running code\",\n        description: \"There was a problem executing the code\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsRunningCode(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setIsLoading(true);\n    \n    try {\n      await onSaveGrade(score, feedback);\n      toast({\n        title: \"Grade saved\",\n        description: \"The code submission has been graded successfully.\",\n      });\n    } catch (error) {\n      console.error(\"Error saving grade:\", error);\n      toast({\n        title: \"Error saving grade\",\n        description: \"There was a problem saving the grade. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-xl font-semibold\">Code Grading</h2>\n          <p className=\"text-muted-foreground\">\n            Grade the student's code submission and provide feedback\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button onClick={runCode} variant=\"secondary\" disabled={isRunningCode}>\n            {isRunningCode ? (\n              <>Running...</>\n            ) : (\n              <>\n                <Play className=\"h-4 w-4 mr-2\" />\n                Run Code\n              </>\n            )}\n          </Button>\n          <Button onClick={handleSave} disabled={isLoading}>\n            {isLoading ? (\n              <>Saving...</>\n            ) : (\n              <>\n                <Save className=\"h-4 w-4 mr-2\" />\n                Save Grade\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"code\">\n            <Code className=\"h-4 w-4 mr-2\" />\n            Student Code\n          </TabsTrigger>\n          <TabsTrigger value=\"tests\">\n            <Terminal className=\"h-4 w-4 mr-2\" />\n            Test Cases\n          </TabsTrigger>\n          <TabsTrigger value=\"solution\">Solution</TabsTrigger>\n          <TabsTrigger value=\"grading\">Grading</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"code\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex justify-between\">\n                <CardTitle className=\"text-lg\">Question</CardTitle>\n                <Badge>{language}</Badge>\n              </div>\n              <div \n                className=\"prose prose-sm dark:prose-invert max-w-none\"\n                dangerouslySetInnerHTML={{ __html: questionContent }}\n              />\n            </CardHeader>\n            <CardContent>\n              <ScrollArea className=\"h-[400px] w-full rounded-md border\">\n                <pre className=\"p-4 text-sm font-mono\">{studentCode}</pre>\n              </ScrollArea>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"tests\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Test Results</CardTitle>\n              <CardDescription>\n                Run the code to see test results. {testCases.length} test case(s) available.\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {codeOutput && (\n                <Alert className={testResults.every(t => t.result?.passed) ? \"border-green-500\" : \"border-red-500\"}>\n                  <Terminal className=\"h-4 w-4\" />\n                  <AlertTitle>Code Execution Output</AlertTitle>\n                  <AlertDescription>\n                    <pre className=\"mt-2 whitespace-pre-wrap text-sm\">{codeOutput}</pre>\n                  </AlertDescription>\n                </Alert>\n              )}\n              \n              <div className=\"space-y-3\">\n                {testResults.map((testCase, index) => (\n                  <Card key={index} className=\"overflow-hidden\">\n                    <CardHeader className={`py-2 px-4 ${\n                      testCase.result \n                        ? testCase.result.passed \n                          ? \"bg-green-50 dark:bg-green-950\" \n                          : \"bg-red-50 dark:bg-red-950\"\n                        : \"\"\n                    }`}>\n                      <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-medium text-sm\">Test Case {index + 1} {testCase.hidden && \"(Hidden)\"}</h3>\n                        {testCase.result && (\n                          <Badge \n                            variant={testCase.result.passed ? \"default\" : \"destructive\"}\n                            className=\"ml-auto\"\n                          >\n                            {testCase.result.passed ? (\n                              <><Check className=\"h-3 w-3 mr-1\" /> Passed</>\n                            ) : (\n                              <><X className=\"h-3 w-3 mr-1\" /> Failed</>\n                            )}\n                          </Badge>\n                        )}\n                      </div>\n                    </CardHeader>\n                    <CardContent className=\"py-3 px-4\">\n                      <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                        <div>\n                          <p className=\"font-medium text-xs text-muted-foreground mb-1\">Input:</p>\n                          <pre className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">{testCase.input}</pre>\n                        </div>\n                        <div>\n                          <p className=\"font-medium text-xs text-muted-foreground mb-1\">Expected Output:</p>\n                          <pre className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">{testCase.output}</pre>\n                        </div>\n                        {testCase.result && testCase.result.actual && (\n                          <div className=\"col-span-2\">\n                            <p className=\"font-medium text-xs text-muted-foreground mb-1\">Actual Output:</p>\n                            <pre className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">{testCase.result.actual}</pre>\n                          </div>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"solution\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Solution Code</CardTitle>\n              <CardDescription>\n                Sample solution for reference. This is not shown to students.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ScrollArea className=\"h-[400px] w-full rounded-md border\">\n                <pre className=\"p-4 text-sm font-mono\">{solutionCode || \"No solution code provided.\"}</pre>\n              </ScrollArea>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"grading\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Grade Assignment</CardTitle>\n              <CardDescription>\n                Assign a grade and provide feedback for this submission\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"auto-grade\">Auto-grade based on test results</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Score will be calculated based on passed test cases\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"auto-grade\"\n                    checked={autoGradeEnabled}\n                    onCheckedChange={setAutoGradeEnabled}\n                  />\n                </div>\n                <Separator className=\"my-4\" />\n              </div>\n              \n              {!autoGradeEnabled && (\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"manual-score\">Manual Score</Label>\n                    <span className=\"font-medium\">{manualScore} / {questionPoints}</span>\n                  </div>\n                  <Slider\n                    id=\"manual-score\"\n                    min={0}\n                    max={questionPoints}\n                    step={1}\n                    value={[manualScore]}\n                    onValueChange={(value) => {\n                      setManualScore(value[0]);\n                      setScore(value[0]);\n                    }}\n                  />\n                </div>\n              )}\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"feedback\">Feedback</Label>\n                <Textarea\n                  id=\"feedback\"\n                  placeholder=\"Provide feedback to the student...\"\n                  value={feedback}\n                  onChange={(e) => setFeedback(e.target.value)}\n                  className=\"min-h-[150px]\"\n                />\n              </div>\n              \n              <div className=\"flex items-center justify-between bg-muted p-4 rounded-md\">\n                <span>Final Score:</span>\n                <Badge variant=\"outline\" className=\"text-lg\">\n                  {score} / {questionPoints} points\n                </Badge>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2919, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/quizzes/%5BquizId%5D/grading/GradingPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { EssayGrading } from \"./components/EssayGrading\";\nimport { CodeGrading } from \"./components/CodeGrading\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { ChevronLeft, ChevronRight, CheckCircle, AlertCircle, Timer, Code, FileText, XCircle } from \"lucide-react\";\nimport { QuestionType } from \"@prisma/client\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2 } from \"lucide-react\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\n\ninterface Student {\n  id: string;\n  name: string | null;\n  email: string | null;\n}\n\ninterface Answer {\n  id: string;\n  questionId: string;\n  textAnswer: string | null;\n  score: number | null;\n  feedback: string | null;\n  selectedOption?: string | null;      // For single-choice MCQ backward compatibility\n  selectedOptionIds?: string[];        // For multiple-choice MCQ\n  jsonData?: any;                      // For matching, fill-in-blank questions\n  question: {\n    id: string;\n    content: string;\n    points: number;\n    type: string;\n    metadata: any;\n    options?: any[];                  // Options for MCQ/true-false questions\n  };\n}\n\ninterface Attempt {\n  id: string;\n  startedAt: Date;\n  completedAt: Date | null;\n  score: number | null;\n  user: Student;\n  answers: Answer[];\n}\n\ninterface Question {\n  id: string;\n  content: string;\n  points: number;\n  type: string;\n  metadata: any;\n  options?: Array<{\n    id: string;\n    content: string;\n    isCorrect: boolean;\n    order: number;\n  }>;\n}\n\ninterface GradingPanelProps {\n  quizId: string;\n  quizTitle: string;\n  questions: Question[];\n  attempts: Attempt[];\n  selectedAttempt: Attempt | undefined;\n}\n\nexport function GradingPanel({ \n  quizId, \n  quizTitle,\n  questions,\n  attempts,\n  selectedAttempt,\n}: GradingPanelProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [currentAttempt, setCurrentAttempt] = useState<Attempt | undefined>(selectedAttempt);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showGradedAttempts, setShowGradedAttempts] = useState(false);\n\n  // Helper to get need-grading status\n  const needsGrading = (attempt: Attempt) => \n    attempt.answers.some(answer => answer.score === null);\n  \n  // Get attempts that need grading\n  const attemptsNeedingGrading = attempts.filter(needsGrading);\n  const attemptFullyGraded = currentAttempt ? !needsGrading(currentAttempt) : false;\n  \n  // Filter attempts based on state\n  const displayedAttempts = showGradedAttempts ? attempts : attemptsNeedingGrading;\n  \n  // Determine the current question/answer being graded\n  const currentQuestion = currentAttempt?.answers[currentQuestionIndex]?.question;\n  const currentAnswer = currentAttempt?.answers[currentQuestionIndex];\n  \n  // Handle attempt selection\n  const handleAttemptSelect = (attemptId: string) => {\n    const attempt = attempts.find(a => a.id === attemptId);\n    setCurrentAttempt(attempt);\n    setCurrentQuestionIndex(0);\n    router.push(`/dashboard/teacher/quizzes/${quizId}/grading?attemptId=${attemptId}`);\n  };\n  \n  // Navigate to previous or next question\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  \n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < (currentAttempt?.answers.length || 0) - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  // Send notification to student\n  const sendGradingNotification = async (attemptId: string, studentId: string) => {\n    try {\n      const response = await fetch(\"/api/notifications\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n                  body: JSON.stringify({\n            userId: studentId,\n            title: \"Quiz Graded\",\n            message: `Your quiz \"${quizTitle}\" has been graded and is ready to review.`,\n            category: \"QUIZ_GRADED\",\n            resourceId: attemptId,\n            resourceType: \"quiz_attempt\",\n          }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to send notification\");\n      }\n      \n      return true;\n    } catch (error) {\n      console.error(\"Error sending notification:\", error);\n      return false;\n    }\n  };\n  \n  // Save grade for the current answer\n  const handleSaveGrade = async (score: number, feedback: string) => {\n    if (!currentAnswer || !currentAttempt) return;\n    \n    setIsSaving(true);\n    \n    try {\n      const response = await fetch(\"/api/teacher/grading\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          answerId: currentAnswer.id,\n          score,\n          feedback,\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to save grade\");\n      }\n      \n      // Update local state with the new grade\n      if (currentAttempt) {\n        const updatedAnswers = [...currentAttempt.answers];\n        updatedAnswers[currentQuestionIndex] = {\n          ...updatedAnswers[currentQuestionIndex],\n          score,\n          feedback,\n        };\n        \n        const updatedAttempt = {\n          ...currentAttempt,\n          answers: updatedAnswers,\n        };\n        \n        setCurrentAttempt(updatedAttempt);\n        \n        // Check if all questions are now graded\n        const allGraded = updatedAnswers.every(answer => answer.score !== null);\n        \n        if (allGraded) {\n          // Send notification to student\n          const notificationSent = await sendGradingNotification(\n            currentAttempt.id, \n            currentAttempt.user.id\n          );\n          \n          toast({\n            title: \"Grading completed\",\n            description: `All questions have been graded. ${notificationSent ? 'Student notified.' : 'Unable to notify student.'}`,\n          });\n        }\n      }\n      \n      toast({\n        title: \"Grade saved\",\n        description: \"The grade has been saved successfully.\",\n      });\n      \n      // Go to the next question if there is one\n      if (currentQuestionIndex < (currentAttempt?.answers.length || 0) - 1) {\n        goToNextQuestion();\n      } else {\n        // Refresh the page to get updated data\n        router.refresh();\n      }\n    } catch (error) {\n      console.error(\"Error saving grade:\", error);\n      toast({\n        title: \"Error saving grade\",\n        description: \"There was a problem saving the grade. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Format date for display\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  // Get the correct grading component based on question type\n  const renderGradingComponent = () => {\n    if (!currentQuestion || !currentAnswer) return null;\n    \n    switch (currentQuestion.type) {\n      case QuestionType.ESSAY:\n        return (\n          <EssayGrading\n            quizId={quizId}\n            attemptId={currentAttempt?.id || \"\"}\n            answerId={currentAnswer.id}\n            questionContent={currentQuestion.content}\n            studentAnswer={currentAnswer.textAnswer || \"\"}\n            questionPoints={currentQuestion.points}\n            existingScore={currentAnswer.score}\n            existingFeedback={currentAnswer.feedback}\n            rubric={currentQuestion.metadata?.rubric}\n            gradingGuide={currentQuestion.metadata?.gradingGuide || null}\n            exampleAnswer={currentQuestion.metadata?.exampleAnswer || null}\n            isRichText={currentQuestion.metadata?.richText}\n            onSaveGrade={handleSaveGrade}\n          />\n        );\n      case QuestionType.CODE:\n        return (\n          <CodeGrading\n            quizId={quizId}\n            attemptId={currentAttempt?.id || \"\"}\n            answerId={currentAnswer.id}\n            questionContent={currentQuestion.content}\n            studentCode={currentAnswer.textAnswer || \"\"}\n            questionPoints={currentQuestion.points}\n            existingScore={currentAnswer.score}\n            existingFeedback={currentAnswer.feedback}\n            language={currentQuestion.metadata?.language || \"javascript\"}\n            testCases={currentQuestion.metadata?.testCases || []}\n            solutionCode={currentQuestion.metadata?.solutionCode || \"\"}\n            onSaveGrade={handleSaveGrade}\n          />\n        );\n      case QuestionType.MULTIPLE_CHOICE:\n      case QuestionType.TRUE_FALSE:\n        // Multiple choice questions typically get auto-graded, but we show their answers and allow feedback\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"prose dark:prose-invert max-w-none\">\n              <div dangerouslySetInnerHTML={{ __html: currentQuestion.content }} />\n            </div>\n            \n            <div className=\"mt-4 space-y-2\">\n              <h3 className=\"text-lg font-semibold\">Student Answer:</h3>\n              <div className=\"space-y-2\">\n                {/* Get options from the question */}\n                {currentQuestion.options ? currentQuestion.options.map((option: any) => {\n                  // Check if selected, either from selectedOption (single) or selectedOptionIds (multiple)\n                  const isSelected = currentAnswer.selectedOption === option.id ||\n                    (Array.isArray(currentAnswer.selectedOptionIds) && \n                     currentAnswer.selectedOptionIds.includes(option.id));\n                  \n                  const isCorrect = option.isCorrect;\n                  \n                  // Determine style based on selection and correctness\n                  let optionClassName = \"flex items-center p-3 rounded-md border\";\n                  let iconComponent = null;\n                  \n                  if (isSelected && isCorrect) {\n                    // Selected and correct\n                    optionClassName += \" border-green-500 bg-green-50 dark:bg-green-950/20\";\n                    iconComponent = <CheckCircle className=\"h-5 w-5 text-green-500 flex-shrink-0\" />;\n                  } else if (isSelected && !isCorrect) {\n                    // Selected but incorrect\n                    optionClassName += \" border-red-500 bg-red-50 dark:bg-red-950/20\";\n                    iconComponent = <XCircle className=\"h-5 w-5 text-red-500 flex-shrink-0\" />;\n                  } else if (!isSelected && isCorrect) {\n                    // Not selected but correct (show as hint)\n                    optionClassName += \" border-amber-500 bg-amber-50 dark:bg-amber-950/10\";\n                    iconComponent = <CheckCircle className=\"h-5 w-5 text-amber-500 flex-shrink-0\" />;\n                  } else {\n                    // Not selected and incorrect\n                    optionClassName += \" border-gray-200 dark:border-gray-700\";\n                  }\n                  \n                  return (\n                    <div key={option.id} className={optionClassName}>\n                      <div className=\"flex-1 ml-3\">\n                        <div dangerouslySetInnerHTML={{ __html: option.content }} />\n                      </div>\n                      <div className=\"ml-2\">\n                        {iconComponent}\n                      </div>\n                    </div>\n                  );\n                }) : <div>No options available</div>}\n              </div>\n            </div>\n            \n            {/* Feedback section for MCQ */}\n            <div className=\"mt-6\">\n              <h3 className=\"text-lg font-semibold\">Feedback (Optional):</h3>\n              <form \n                className=\"space-y-4 mt-2\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  // Keep the existing auto-calculated score, just update feedback\n                  const form = e.target as HTMLFormElement;\n                  const feedback = (form.elements.namedItem('feedback') as HTMLTextAreaElement).value;\n                  handleSaveGrade(currentAnswer.score || 0, feedback);\n                }}\n              >\n                <Textarea\n                  id=\"feedback\"\n                  name=\"feedback\"\n                  placeholder=\"Add feedback for the student...\"\n                  defaultValue={currentAnswer.feedback || \"\"}\n                  rows={4}\n                  className=\"w-full\"\n                />\n                \n                <Button type=\"submit\" disabled={isSaving}>\n                  {isSaving ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Saving...\n                    </>\n                  ) : (\n                    'Save Feedback'\n                  )}\n                </Button>\n              </form>\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"p-6 text-center\">\n            <p>Unsupported question type for manual grading: {currentQuestion.type}</p>\n            <p className=\"mt-2 text-muted-foreground\">\n              This question type is auto-graded or not supported for manual grading.\n            </p>\n          </div>\n        );\n    }\n  };\n  \n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* Left sidebar: Attempts list */}\n        <Card className=\"w-full lg:w-80 h-fit\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              Student Submissions ({attemptsNeedingGrading.length} need grading)\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <div className=\"px-6 py-2 border-b\">\n              <div className=\"flex items-center\">\n                <Switch\n                  id=\"show-graded\"\n                  checked={showGradedAttempts}\n                  onCheckedChange={setShowGradedAttempts}\n                />\n                <Label htmlFor=\"show-graded\" className=\"ml-2 text-sm\">\n                  {showGradedAttempts ? \"Showing all submissions\" : \"Showing only ungraded submissions\"}\n                </Label>\n              </div>\n            </div>\n            <div className=\"divide-y\">\n              {displayedAttempts.length === 0 ? (\n                <div className=\"px-6 py-4 text-center text-muted-foreground\">\n                  No submissions yet\n                </div>\n              ) : (\n                displayedAttempts.map((attempt) => (\n                  <div \n                    key={attempt.id}\n                    className={`\n                      px-6 py-4 hover:bg-slate-50 cursor-pointer\n                      ${currentAttempt?.id === attempt.id ? \"bg-slate-50\" : \"\"}\n                    `}\n                    onClick={() => handleAttemptSelect(attempt.id)}\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <p className=\"font-medium\">{attempt.user.name || \"Anonymous\"}</p>\n                        <p className=\"text-sm text-muted-foreground\">{attempt.user.email}</p>\n                      </div>\n                      {needsGrading(attempt) ? (\n                        <Badge variant=\"secondary\">Needs Grading</Badge>\n                      ) : (\n                        <Badge variant=\"outline\" className=\"bg-green-50 text-green-700\">\n                          <CheckCircle className=\"h-3 w-3 mr-1\" />\n                          Graded\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    <div className=\"mt-2 flex items-center gap-2 text-sm text-muted-foreground\">\n                      <Timer className=\"h-3 w-3\" />\n                      <span>Submitted: {formatDate(attempt.startedAt)}</span>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Main content: Grading area */}\n        <div className=\"flex-1\">\n          {!currentAttempt ? (\n            <Card className=\"h-[600px] flex items-center justify-center\">\n              <div className=\"text-center p-6\">\n                <AlertCircle className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium\">No submission selected</h3>\n                <p className=\"text-muted-foreground mt-1\">\n                  Select a student submission from the list to start grading\n                </p>\n              </div>\n            </Card>\n          ) : (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-2xl font-bold\">\n                    {currentAttempt.user.name || \"Anonymous\"}\n                  </h2>\n                  <p className=\"text-muted-foreground\">\n                    {currentAttempt.answers.length} question(s) to grade • \n                    Submitted {formatDate(currentAttempt.startedAt)}\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center gap-3\">\n                  <Button\n                    variant=\"outline\" \n                    size=\"sm\"\n                    onClick={goToPreviousQuestion}\n                    disabled={currentQuestionIndex === 0}\n                  >\n                    <ChevronLeft className=\"h-4 w-4 mr-2\" />\n                    Previous\n                  </Button>\n                  \n                  <Select \n                    value={currentQuestionIndex.toString()} \n                    onValueChange={(value) => setCurrentQuestionIndex(parseInt(value))}\n                  >\n                    <SelectTrigger className=\"w-[180px]\">\n                      <SelectValue placeholder=\"Select question\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {currentAttempt.answers.map((answer, index) => (\n                        <SelectItem key={answer.id} value={index.toString()}>\n                          <div className=\"flex items-center\">\n                            <div className=\"mr-2\">\n                              {answer.question.type === QuestionType.ESSAY && <FileText className=\"h-4 w-4\" />}\n                              {answer.question.type === QuestionType.CODE && <Code className=\"h-4 w-4\" />}\n                            </div>\n                            Question {index + 1} \n                            {answer.score !== null && \" ✓\"}\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  \n                  <Button\n                    variant=\"outline\" \n                    size=\"sm\"\n                    onClick={goToNextQuestion}\n                    disabled={currentQuestionIndex === currentAttempt.answers.length - 1}\n                  >\n                    Next\n                    <ChevronRight className=\"h-4 w-4 ml-2\" />\n                  </Button>\n                </div>\n              </div>\n              \n              <Separator />\n              \n              {renderGradingComponent()}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
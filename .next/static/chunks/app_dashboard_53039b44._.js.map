{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/components/navigation-compatibility-wrapper.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { usePathname, useRouter } from \"next/navigation\";\r\nimport { useEffect, ReactNode } from \"react\";\r\nimport { mapToOldRoute, mapToNewRoute } from \"@/lib/navigation-adapter\";\r\n\r\ninterface NavigationCompatibilityWrapperProps {\r\n  children: ReactNode;\r\n  /**\r\n   * Nếu true, sẽ tự động chuyển hướng từ route cũ sang route mới\r\n   * Ví dụ: nếu user truy cập \"/dashboard/teacher/results\"\r\n   * họ sẽ được chuyển hướng đến \"/dashboard/teacher/grading\"\r\n   */\r\n  redirectToNewRoutes?: boolean;\r\n  /**\r\n   * Nếu true, sẽ tự động chuyển hướng từ route mới sang route cũ\r\n   * Chỉ dùng trong trường hợp đặc biệt khi cần rollback\r\n   */\r\n  redirectToOldRoutes?: boolean;\r\n}\r\n\r\n/**\r\n * Component wrapper để đảm bảo tính tương thích giữa route cũ và mới\r\n * Sử dụng cho các trang cần điều hướng tự động hoặc tích hợp với hệ thống cũ\r\n */\r\nexport function NavigationCompatibilityWrapper({\r\n  children,\r\n  redirectToNewRoutes = false,\r\n  redirectToOldRoutes = false,\r\n}: NavigationCompatibilityWrapperProps) {\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n  \r\n  useEffect(() => {\r\n    // Điều hướng từ route cũ sang route mới nếu cần\r\n    if (redirectToNewRoutes) {\r\n      const newRoute = mapToNewRoute(pathname);\r\n      if (newRoute !== pathname) {\r\n        router.replace(newRoute);\r\n      }\r\n    }\r\n    \r\n    // Điều hướng từ route mới sang route cũ nếu cần (rollback)\r\n    if (redirectToOldRoutes) {\r\n      const oldRoute = mapToOldRoute(pathname);\r\n      if (oldRoute !== pathname) {\r\n        router.replace(oldRoute);\r\n      }\r\n    }\r\n  }, [pathname, router, redirectToNewRoutes, redirectToOldRoutes]);\r\n  \r\n  return <>{children}</>;\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAyBO,SAAS,+BAA+B,EAC7C,QAAQ,EACR,sBAAsB,KAAK,EAC3B,sBAAsB,KAAK,EACS;;IACpC,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oDAAE;YACR,gDAAgD;YAChD,IAAI,qBAAqB;gBACvB,MAAM,WAAW,CAAA,GAAA,+HAAA,CAAA,gBAAa,AAAD,EAAE;gBAC/B,IAAI,aAAa,UAAU;oBACzB,OAAO,OAAO,CAAC;gBACjB;YACF;YAEA,2DAA2D;YAC3D,IAAI,qBAAqB;gBACvB,MAAM,WAAW,CAAA,GAAA,+HAAA,CAAA,gBAAa,AAAD,EAAE;gBAC/B,IAAI,aAAa,UAAU;oBACzB,OAAO,OAAO,CAAC;gBACjB;YACF;QACF;mDAAG;QAAC;QAAU;QAAQ;QAAqB;KAAoB;IAE/D,qBAAO;kBAAG;;AACZ;GA3BgB;;QAKG,qIAAA,CAAA,cAAW;QACb,qIAAA,CAAA,YAAS;;;KANV","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/app/dashboard/teacher/results/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { NavigationCompatibilityWrapper } from \"../../components/navigation-compatibility-wrapper\";\r\n\r\nexport default function TeacherResultsPage() {\r\n  return (\r\n    <NavigationCompatibilityWrapper redirectToNewRoutes={true}>\r\n      <div className=\"container py-8\">\r\n        <h1 className=\"text-2xl font-bold mb-6\">Redirecting to new grading system...</h1>\r\n        <p>Please wait while we redirect you to the new grading system.</p>\r\n      </div>\r\n    </NavigationCompatibilityWrapper>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC,4KAAA,CAAA,iCAA8B;QAAC,qBAAqB;kBACnD,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX;KATwB","debugId":null}}]
}
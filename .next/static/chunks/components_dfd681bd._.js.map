{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/teacher/stats-section.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { \r\n  BarChart2, \r\n  Users, \r\n  GraduationCap, \r\n  CheckCircle2, \r\n  PieChart \r\n} from \"lucide-react\";\r\n\r\ninterface StatsProps {\r\n  overview: {\r\n    activeClasses: number;\r\n    totalStudents: number;\r\n    activeQuizzes: number;\r\n    completedQuizzes: number;\r\n    engagementRate: number;\r\n  };\r\n}\r\n\r\nexport function StatsSection({ overview }: StatsProps) {\r\n  // Define color schemes for different statistic types\r\n  const statConfigs = [\r\n    {\r\n      title: \"Active Classes\",\r\n      value: overview.activeClasses,\r\n      description: \"classes currently active\",\r\n      icon: <GraduationCap className=\"h-5 w-5\" />,\r\n      iconColor: \"text-blue-500\",\r\n      badgeColor: \"bg-blue-500/10 text-blue-700 dark:text-blue-400\",\r\n      trend: \"+2 this month\",\r\n    },\r\n    {\r\n      title: \"Total Students\",\r\n      value: overview.totalStudents,\r\n      description: \"students enrolled\",\r\n      icon: <Users className=\"h-5 w-5\" />,\r\n      iconColor: \"text-emerald-500\",\r\n      badgeColor: \"bg-emerald-500/10 text-emerald-700 dark:text-emerald-400\",\r\n      trend: \"+5 this week\",\r\n    },\r\n    {\r\n      title: \"Active Quizzes\",\r\n      value: overview.activeQuizzes,\r\n      description: \"quizzes open for students\",\r\n      icon: <BarChart2 className=\"h-5 w-5\" />,\r\n      iconColor: \"text-violet-500\",\r\n      badgeColor: \"bg-violet-500/10 text-violet-700 dark:text-violet-400\",\r\n      trend: \"+3 this month\",\r\n    },\r\n    {\r\n      title: \"Engagement Rate\",\r\n      value: `${overview.engagementRate}%`,\r\n      description: \"student quiz participation\",\r\n      icon: <PieChart className=\"h-5 w-5\" />,\r\n      iconColor: \"text-orange-500\",\r\n      badgeColor: \"bg-orange-500/10 text-orange-700 dark:text-orange-400\",\r\n      trend: \"+12% this month\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n      {statConfigs.map((stat, i) => (\r\n        <Card key={i} className=\"overflow-hidden\">\r\n          <div className={`absolute top-0 left-0 w-1 h-full ${stat.badgeColor.split(' ')[0]}`} />\r\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\r\n            <CardTitle className=\"text-sm font-medium\">\r\n              {stat.title}\r\n            </CardTitle>\r\n            <div className={`rounded-full p-1 ${stat.iconColor.replace('text-', 'bg-')}/10`}>\r\n              <div className={stat.iconColor}>\r\n                {stat.icon}\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{stat.value}</div>\r\n            <p className=\"text-xs text-muted-foreground mt-1\">\r\n              {stat.description}\r\n            </p>\r\n            <Badge variant=\"outline\" className={`mt-3 ${stat.badgeColor}`}>\r\n              {stat.trend}\r\n            </Badge>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;;AAkBO,SAAS,aAAa,EAAE,QAAQ,EAAc;IACnD,qDAAqD;IACrD,MAAM,cAAc;QAClB;YACE,OAAO;YACP,OAAO,SAAS,aAAa;YAC7B,aAAa;YACb,oBAAM,6LAAC,2NAAA,CAAA,gBAAa;gBAAC,WAAU;;;;;;YAC/B,WAAW;YACX,YAAY;YACZ,OAAO;QACT;QACA;YACE,OAAO;YACP,OAAO,SAAS,aAAa;YAC7B,aAAa;YACb,oBAAM,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;YACvB,WAAW;YACX,YAAY;YACZ,OAAO;QACT;QACA;YACE,OAAO;YACP,OAAO,SAAS,aAAa;YAC7B,aAAa;YACb,oBAAM,6LAAC,uNAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAC3B,WAAW;YACX,YAAY;YACZ,OAAO;QACT;QACA;YACE,OAAO;YACP,OAAO,GAAG,SAAS,cAAc,CAAC,CAAC,CAAC;YACpC,aAAa;YACb,oBAAM,6LAAC,iNAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;YAC1B,WAAW;YACX,YAAY;YACZ,OAAO;QACT;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;kBACZ,YAAY,GAAG,CAAC,CAAC,MAAM,kBACtB,6LAAC,4HAAA,CAAA,OAAI;gBAAS,WAAU;;kCACtB,6LAAC;wBAAI,WAAW,CAAC,iCAAiC,EAAE,KAAK,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;;;;;;kCACnF,6LAAC,4HAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,6LAAC,4HAAA,CAAA,YAAS;gCAAC,WAAU;0CAClB,KAAK,KAAK;;;;;;0CAEb,6LAAC;gCAAI,WAAW,CAAC,iBAAiB,EAAE,KAAK,SAAS,CAAC,OAAO,CAAC,SAAS,OAAO,GAAG,CAAC;0CAC7E,cAAA,6LAAC;oCAAI,WAAW,KAAK,SAAS;8CAC3B,KAAK,IAAI;;;;;;;;;;;;;;;;;kCAIhB,6LAAC,4HAAA,CAAA,cAAW;;0CACV,6LAAC;gCAAI,WAAU;0CAAsB,KAAK,KAAK;;;;;;0CAC/C,6LAAC;gCAAE,WAAU;0CACV,KAAK,WAAW;;;;;;0CAEnB,6LAAC,6HAAA,CAAA,QAAK;gCAAC,SAAQ;gCAAU,WAAW,CAAC,KAAK,EAAE,KAAK,UAAU,EAAE;0CAC1D,KAAK,KAAK;;;;;;;;;;;;;eAlBN;;;;;;;;;;AAyBnB;KArEgB","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/teacher/activity-section.tsx"],"sourcesContent":["import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { \r\n  Book, \r\n  Clock, \r\n  FileText, \r\n  Layers, \r\n  MoreHorizontal, \r\n  School, \r\n  Users \r\n} from \"lucide-react\";\r\nimport { format, formatDistanceToNow } from \"date-fns\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface ActivityItem {\r\n  id: string;\r\n  type: 'class' | 'quiz';\r\n  title: string;\r\n  subject?: string | null;\r\n  date: Date;\r\n  metadata: Record<string, any>;\r\n}\r\n\r\ninterface ClassData {\r\n  id: string;\r\n  name: string;\r\n  subject: string | null;\r\n  type: string;\r\n  isActive: boolean;\r\n  studentCount: number;\r\n  coverImage?: string | null;\r\n  updatedAt: Date;\r\n}\r\n\r\ninterface QuizData {\r\n  id: string;\r\n  title: string;\r\n  isActive: boolean;\r\n  isPublished: boolean;\r\n  category: string | null;\r\n  questionCount: number;\r\n  attemptCount: number;\r\n  className: string | null;\r\n  classId: string | null;\r\n  updatedAt: Date;\r\n}\r\n\r\ninterface ActivitySectionProps {\r\n  activityFeed: ActivityItem[];\r\n  recentClasses: ClassData[];\r\n  recentQuizzes: QuizData[];\r\n}\r\n\r\nexport function ActivitySection({ activityFeed, recentClasses, recentQuizzes }: ActivitySectionProps) {\r\n  const router = useRouter();\r\n  \r\n  // Function to get activity icon based on type\r\n  const getActivityIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'class':\r\n        return <School className=\"h-6 w-6 text-blue-500\" />;\r\n      case 'quiz':\r\n        return <FileText className=\"h-6 w-6 text-violet-500\" />;\r\n      default:\r\n        return <Clock className=\"h-6 w-6 text-muted-foreground\" />;\r\n    }\r\n  };\r\n  \r\n  // Function to format date for display\r\n  const formatDate = (date: Date) => {\r\n    const now = new Date();\r\n    const dateObj = new Date(date);\r\n    const diffInDays = Math.floor((now.getTime() - dateObj.getTime()) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffInDays < 2) {\r\n      return formatDistanceToNow(dateObj, { addSuffix: true });\r\n    }\r\n    \r\n    return format(dateObj, \"MMM d, yyyy\");\r\n  };\r\n  \r\n  return (\r\n    <Tabs defaultValue=\"all\" className=\"space-y-4\">\r\n      <TabsList>\r\n        <TabsTrigger value=\"all\">All Activity</TabsTrigger>\r\n        <TabsTrigger value=\"classes\">Classes</TabsTrigger>\r\n        <TabsTrigger value=\"quizzes\">Quizzes</TabsTrigger>\r\n      </TabsList>\r\n      \r\n      {/* All Activity Tab */}\r\n      <TabsContent value=\"all\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Recent Activity</CardTitle>\r\n            <CardDescription>\r\n              Your latest updates and activities\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ScrollArea className=\"h-[400px] pr-4\">\r\n              <div className=\"space-y-8\">\r\n                {activityFeed.map((activity, index) => (\r\n                  <div key={activity.id} className=\"flex\">\r\n                    <div className=\"relative mr-4\">\r\n                      <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-muted\">\r\n                        {getActivityIcon(activity.type)}\r\n                      </div>\r\n                      {index < activityFeed.length - 1 && (\r\n                        <div className=\"absolute bottom-0 left-1/2 h-full w-0.5 -translate-x-1/2 translate-y-3 bg-border\" />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium leading-none\">\r\n                            {activity.title}\r\n                          </p>\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            {activity.type === 'class' ? 'Class' : 'Quiz'} \r\n                            {activity.subject && ` • ${activity.subject}`}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {activity.type === 'class' \r\n                              ? `${activity.metadata.studentCount} students` \r\n                              : `${activity.metadata.attemptCount} attempts`}\r\n                          </Badge>\r\n                          <Button \r\n                            variant=\"ghost\" \r\n                            size=\"icon\" \r\n                            className=\"h-8 w-8\" \r\n                            onClick={() => router.push(`/dashboard/teacher/${activity.type === 'class' ? 'classes' : 'quizzes'}/${activity.id}`)}\r\n                          >\r\n                            <MoreHorizontal className=\"h-4 w-4\" />\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-xs text-muted-foreground\">\r\n                        {formatDate(new Date(activity.date))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </ScrollArea>\r\n          </CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n      \r\n      {/* Classes Tab */}\r\n      <TabsContent value=\"classes\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Recent Classes</CardTitle>\r\n            <CardDescription>\r\n              Your recently updated classes\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid gap-4 md:grid-cols-2\">\r\n              {recentClasses.map((classItem) => (\r\n                <Card key={classItem.id} className=\"cursor-pointer hover:bg-muted/50 transition-colors\"\r\n                  onClick={() => router.push(`/dashboard/teacher/classes/${classItem.id}`)}>\r\n                  <CardContent className=\"p-4 flex\">\r\n                    <div className=\"w-12 h-12 mr-4 rounded-md overflow-hidden flex items-center justify-center bg-muted\">\r\n                      {classItem.coverImage ? (\r\n                        <img src={classItem.coverImage} alt={classItem.name} className=\"w-full h-full object-cover\" />\r\n                      ) : (\r\n                        <School className=\"h-6 w-6 text-muted-foreground\" />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <h4 className=\"font-medium text-sm\">{classItem.name}</h4>\r\n                        <Badge variant={classItem.isActive ? \"default\" : \"outline\"} className=\"text-xs\">\r\n                          {classItem.isActive ? \"Active\" : \"Inactive\"}\r\n                        </Badge>\r\n                      </div>\r\n                      <p className=\"text-xs text-muted-foreground mt-1\">\r\n                        {classItem.subject || \"No subject\"} • {classItem.type}\r\n                      </p>\r\n                      <div className=\"flex items-center mt-2 text-xs text-muted-foreground\">\r\n                        <Users className=\"h-3 w-3 mr-1\" /> \r\n                        {classItem.studentCount} students\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n      \r\n      {/* Quizzes Tab */}\r\n      <TabsContent value=\"quizzes\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Recent Quizzes</CardTitle>\r\n            <CardDescription>\r\n              Your recently updated quizzes\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid gap-4 md:grid-cols-2\">\r\n              {recentQuizzes.map((quiz) => (\r\n                <Card key={quiz.id} className=\"cursor-pointer hover:bg-muted/50 transition-colors\"\r\n                  onClick={() => router.push(`/dashboard/teacher/quizzes/${quiz.id}`)}>\r\n                  <CardContent className=\"p-4 flex\">\r\n                    <div className=\"w-12 h-12 mr-4 rounded-md overflow-hidden flex items-center justify-center bg-muted\">\r\n                      <Layers className=\"h-6 w-6 text-muted-foreground\" />\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <h4 className=\"font-medium text-sm\">{quiz.title}</h4>\r\n                        <div className=\"flex gap-1\">\r\n                          <Badge variant={quiz.isActive ? \"default\" : \"outline\"} className=\"text-xs\">\r\n                            {quiz.isActive ? \"Active\" : \"Inactive\"}\r\n                          </Badge>\r\n                          {!quiz.isPublished && (\r\n                            <Badge variant=\"outline\" className=\"text-xs bg-amber-500/10 text-amber-700 dark:text-amber-400\">\r\n                              Draft\r\n                            </Badge>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"text-xs text-muted-foreground mt-1\">\r\n                        {quiz.className || \"No class\"} • {quiz.category || \"Uncategorized\"}\r\n                      </p>\r\n                      <div className=\"flex items-center justify-between mt-2 text-xs text-muted-foreground\">\r\n                        <span>\r\n                          <Book className=\"h-3 w-3 inline mr-1\" /> \r\n                          {quiz.questionCount} questions\r\n                        </span>\r\n                        <span>\r\n                          <Users className=\"h-3 w-3 inline mr-1\" /> \r\n                          {quiz.attemptCount} attempts\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n    </Tabs>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/teacher/performance-charts.tsx"],"sourcesContent":["import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  PieChart as RePieChart,\r\n  Pie,\r\n  Cell,\r\n  Legend\r\n} from \"recharts\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface ClassPerformance {\r\n  id: string;\r\n  className: string;\r\n  averageScore: number;\r\n  studentCount: number;\r\n  completionRate: number;\r\n}\r\n\r\ninterface CategoryDistribution {\r\n  category: string;\r\n  count: number;\r\n}\r\n\r\ninterface PerformanceChartsProps {\r\n  classPerformance: ClassPerformance[];\r\n  categoryDistribution: CategoryDistribution[];\r\n  fullWidth?: boolean;\r\n}\r\n\r\nexport function PerformanceCharts({ \r\n  classPerformance, \r\n  categoryDistribution,\r\n  fullWidth = false \r\n}: PerformanceChartsProps) {\r\n  // Animation states\r\n  const [animate, setAnimate] = useState(false);\r\n  \r\n  // Enhanced color palette with educational theme\r\n  const COLORS = [\r\n    '#4285F4', // Google Blue\r\n    '#34A853', // Google Green\r\n    '#FBBC05', // Google Yellow\r\n    '#EA4335', // Google Red\r\n    '#8667C9', // Purple\r\n    '#35C7FB', // Light Blue\r\n    '#FF8942', // Orange\r\n    '#52CDAE', // Teal\r\n  ];\r\n  \r\n  // Prepare category data for pie chart with \"Other\" grouping\r\n  const preparedCategoryData = usePreparedCategoryData(categoryDistribution);\r\n  \r\n  // Start animation when component mounts\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setAnimate(true);\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  \r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-background border rounded-md shadow-md p-2 text-xs\">\r\n          <p className=\"font-medium\">{label}</p>\r\n          <p>\r\n            <span className=\"text-blue-500\">Average Score: </span>\r\n            {payload[0].value}%\r\n          </p>\r\n          <p>\r\n            <span className=\"text-emerald-500\">Students: </span>\r\n            {payload[0].payload.studentCount}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  const PieCustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-background border rounded-md shadow-md p-2 text-xs\">\r\n          <p className=\"font-medium\">{payload[0].name}</p>\r\n          <p>\r\n            <span className=\"text-blue-500\">Count: </span>\r\n            {payload[0].value}\r\n          </p>\r\n          <p>\r\n            <span className=\"text-emerald-500\">Percentage: </span>\r\n            {Math.round((payload[0].value / preparedCategoryData.reduce((sum, item) => sum + item.value, 0)) * 100)}%\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  return (\r\n    <div className={`grid gap-4 ${fullWidth ? \"md:grid-cols-2\" : \"\"}`}>\r\n      {/* Class Performance Chart */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Class Performance</CardTitle>\r\n          <CardDescription>Average scores across your classes</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"h-[300px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n              data={classPerformance.sort((a, b) => b.averageScore - a.averageScore)}\r\n              margin={{ top: 10, right: 10, left: 0, bottom: 20 }}\r\n            >\r\n              <defs>\r\n                <linearGradient id=\"colorScore\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#4285F4\" stopOpacity={0.8} />\r\n                  <stop offset=\"95%\" stopColor=\"#4285F4\" stopOpacity={0.2} />\r\n                </linearGradient>\r\n              </defs>\r\n              <XAxis \r\n                dataKey=\"className\" \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => value.length > 12 ? `${value.substring(0, 12)}...` : value}\r\n              />\r\n              <YAxis\r\n                tick={{ fontSize: 12 }}\r\n                domain={[0, 100]}\r\n                tickFormatter={(value) => `${value}%`}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Bar \r\n                dataKey=\"averageScore\" \r\n                fill=\"url(#colorScore)\" \r\n                radius={[4, 4, 0, 0]}\r\n                animationDuration={2000}\r\n                animationBegin={0}\r\n                animationEasing=\"ease-out\"\r\n                isAnimationActive={animate}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Quiz Category Distribution */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Quiz Categories</CardTitle>\r\n          <CardDescription>Distribution of quiz types</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"h-[300px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <RePieChart>\r\n              <Pie\r\n                data={preparedCategoryData}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                innerRadius={60}\r\n                outerRadius={80}\r\n                paddingAngle={5}\r\n                dataKey=\"value\"\r\n                animationDuration={2000}\r\n                animationBegin={0}\r\n                animationEasing=\"ease-out\"\r\n                isAnimationActive={animate}\r\n                label={({ name, percent }) => \r\n                  percent > 0.05 ? `${name}: ${(percent * 100).toFixed(0)}%` : ''\r\n                }\r\n                labelLine={false}\r\n              >\r\n                {preparedCategoryData.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color || COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip content={<PieCustomTooltip />} />\r\n              <Legend \r\n                formatter={(value) => <span className=\"text-sm font-medium\">{value}</span>} \r\n                layout=\"vertical\"\r\n                verticalAlign=\"middle\"\r\n                align=\"right\"\r\n                wrapperStyle={{ paddingLeft: 10 }}\r\n              />\r\n            </RePieChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Helper function to prepare and optimize category data for visualization\r\n * Groups small categories into \"Other\" to improve chart readability\r\n */\r\nfunction usePreparedCategoryData(categoryDistribution: CategoryDistribution[]) {\r\n  // Define a threshold for grouping small categories (e.g., less than 5% of total)\r\n  const THRESHOLD_PERCENT = 5;\r\n  \r\n  // Enhanced color palette with educational theme\r\n  const COLORS = [\r\n    '#4285F4', // Google Blue\r\n    '#34A853', // Google Green\r\n    '#FBBC05', // Google Yellow\r\n    '#EA4335', // Google Red\r\n    '#8667C9', // Purple\r\n    '#35C7FB', // Light Blue \r\n    '#FF8942', // Orange\r\n    '#52CDAE', // Teal\r\n    '#9E9E9E'  // Grey (for \"Other\")\r\n  ];\r\n\r\n  if (!categoryDistribution || categoryDistribution.length === 0) {\r\n    return [];\r\n  }\r\n  \r\n  // Sort categories by count in descending order\r\n  const sortedCategories = [...categoryDistribution].sort((a, b) => b.count - a.count);\r\n  \r\n  // Calculate total count for percentage calculations\r\n  const totalCount = sortedCategories.reduce((sum, item) => sum + item.count, 0);\r\n  \r\n  // Initialize prepared data\r\n  const mainCategories: any[] = [];\r\n  let otherCategoryCount = 0;\r\n  \r\n  // Process each category\r\n  sortedCategories.forEach((item, index) => {\r\n    const percent = (item.count / totalCount) * 100;\r\n    \r\n    // If category is significant or one of the top 5, keep it separate\r\n    if (percent >= THRESHOLD_PERCENT || index < 5) {\r\n      mainCategories.push({\r\n        name: item.category || \"Uncategorized\",\r\n        value: item.count,\r\n        color: COLORS[index % (COLORS.length - 1)] // Reserve last color for \"Other\"\r\n      });\r\n    } else {\r\n      // Otherwise add to \"Other\" group\r\n      otherCategoryCount += item.count;\r\n    }\r\n  });\r\n  \r\n  // Add \"Other\" category if there are small categories\r\n  if (otherCategoryCount > 0) {\r\n    mainCategories.push({\r\n      name: \"Other\",\r\n      value: otherCategoryCount,\r\n      color: COLORS[COLORS.length - 1] // Use the last color for \"Other\"\r\n    });\r\n  }\r\n  \r\n  return mainCategories;\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1491, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1537, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/teacher/student-section.tsx"],"sourcesContent":["import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ChevronRight } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface Student {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  image: string | null;\r\n  averageScore: number;\r\n  attemptCount: number;\r\n}\r\n\r\ninterface StudentSectionProps {\r\n  students: Student[];\r\n}\r\n\r\nexport function StudentSection({ students }: StudentSectionProps) {\r\n  const router = useRouter();\r\n  \r\n  // Function to get performance badge and color\r\n  const getPerformanceBadge = (score: number) => {\r\n    if (score >= 90) {\r\n      return { label: \"Outstanding\", color: \"bg-emerald-500/10 text-emerald-700 dark:text-emerald-400\" };\r\n    } else if (score >= 80) {\r\n      return { label: \"Excellent\", color: \"bg-green-500/10 text-green-700 dark:text-green-400\" };\r\n    } else if (score >= 70) {\r\n      return { label: \"Good\", color: \"bg-blue-500/10 text-blue-700 dark:text-blue-400\" };\r\n    } else if (score >= 60) {\r\n      return { label: \"Satisfactory\", color: \"bg-amber-500/10 text-amber-700 dark:text-amber-400\" };\r\n    } else {\r\n      return { label: \"Needs Improvement\", color: \"bg-red-500/10 text-red-700 dark:text-red-400\" };\r\n    }\r\n  };\r\n  \r\n  // Function to get progress bar color\r\n  const getProgressColor = (score: number) => {\r\n    if (score >= 90) return \"bg-emerald-500\";\r\n    if (score >= 80) return \"bg-green-500\";\r\n    if (score >= 70) return \"bg-blue-500\";\r\n    if (score >= 60) return \"bg-amber-500\";\r\n    return \"bg-red-500\";\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"overflow-hidden\">\r\n      <CardHeader className=\"pb-2\">\r\n        <CardTitle className=\"text-sm font-medium\">Top Performing Students</CardTitle>\r\n        <CardDescription>\r\n          Students with highest average scores\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"p-0\">\r\n        <div className=\"space-y-2\">\r\n          {students.length > 0 ? (\r\n            <>\r\n              {students.map((student) => {\r\n                const performanceBadge = getPerformanceBadge(student.averageScore);\r\n                const progressColor = getProgressColor(student.averageScore);\r\n                \r\n                return (\r\n                  <div \r\n                    key={student.id}\r\n                    className=\"flex items-center p-3 cursor-pointer hover:bg-muted/50 transition-colors\"\r\n                    onClick={() => router.push(`/dashboard/teacher/students/${student.id}`)}\r\n                  >\r\n                    <Avatar className=\"h-9 w-9 mr-3\">\r\n                      <AvatarImage src={student.image || undefined} />\r\n                      <AvatarFallback>{student.name.substring(0, 2).toUpperCase()}</AvatarFallback>\r\n                    </Avatar>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center justify-between mb-1\">\r\n                        <p className=\"text-sm font-medium truncate\">\r\n                          {student.name}\r\n                        </p>\r\n                        <div className=\"flex items-center\">\r\n                          <Badge variant=\"outline\" className={`text-xs mr-2 ${performanceBadge.color}`}>\r\n                            {performanceBadge.label}\r\n                          </Badge>\r\n                          <p className=\"text-sm font-semibold whitespace-nowrap\">\r\n                            {student.averageScore}%\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Progress value={student.averageScore} className={`h-1.5 ${progressColor}`} />\r\n                        <span className=\"text-xs text-muted-foreground whitespace-nowrap\">\r\n                          {student.attemptCount} quizzes\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              \r\n              <Button \r\n                variant=\"ghost\" \r\n                className=\"w-full justify-between py-2 px-3 h-auto\"\r\n                onClick={() => router.push('/dashboard/teacher/students')}\r\n              >\r\n                <span className=\"text-sm\">View all students</span>\r\n                <ChevronRight className=\"h-4 w-4\" />\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <div className=\"p-4 text-center text-sm text-muted-foreground\">\r\n              No student data available\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1819, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/teacher/dashboard-content.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { StatsSection } from \"./stats-section\";\nimport { ActivitySection } from \"./activity-section\";\nimport { PerformanceCharts } from \"./performance-charts\";\nimport { StudentSection } from \"./student-section\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  CalendarRange,\n  CheckCircle2,\n  Clock,\n  Layers,\n  Users\n} from \"lucide-react\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface DashboardData {\n  overview: {\n    activeClasses: number;\n    totalStudents: number;\n    activeQuizzes: number;\n    completedQuizzes: number;\n    engagementRate: number;\n  };\n  recentClasses: any[];\n  recentQuizzes: any[];\n  classPerformance: any[];\n  activityFeed: any[];\n  studentPerformance: any[];\n  categoryDistribution: any[];\n  upcomingDeadlines: any[];\n}\n\ninterface TeacherDashboardContentProps {\n  initialData?: DashboardData;\n}\n\nexport default function TeacherDashboardContent({ initialData }: TeacherDashboardContentProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(initialData || null);\n  const [isLoading, setIsLoading] = useState(!initialData);\n  const [activeTab, setActiveTab] = useState(\"overview\");\n\n  // Fetch dashboard data if no initial data was provided\n  useEffect(() => {\n    if (!initialData) {\n      fetchDashboardData();\n    }\n  }, [initialData]);\n\n  // Function to fetch dashboard data\n  const fetchDashboardData = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"/api/teacher/dashboard\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch dashboard data\");\n      }\n      const data = await response.json();\n      setDashboardData(data);\n    } catch (error) {\n      console.error(\"Error fetching dashboard data:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load dashboard data. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Refresh dashboard data\n  const handleRefresh = () => {\n    fetchDashboardData();\n  };\n\n  // Loading state\n  if (isLoading) {\n    return <DashboardSkeleton />;\n  }\n\n  // Error state if no data available\n  if (!dashboardData) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Error Loading Dashboard</CardTitle>\n          <CardDescription>Unable to load dashboard data</CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex justify-center\">\n          <Button onClick={handleRefresh}>Retry</Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Tabs for different dashboard views */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <TabsList>\n            <TabsTrigger value=\"overview\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\">\n              Overview\n            </TabsTrigger>\n            <TabsTrigger value=\"performance\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\">\n              Performance\n            </TabsTrigger>\n            <TabsTrigger value=\"activity\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\">\n              Activity\n            </TabsTrigger>\n          </TabsList>\n          <Button variant=\"outline\" size=\"sm\" onClick={handleRefresh} className=\"gap-1\">\n            <CheckCircle2 className=\"h-4 w-4\" />\n            Refresh\n          </Button>\n        </div>\n\n        {/* Overview Tab */}\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          {/* Statistics Section */}\n          <StatsSection overview={dashboardData.overview} />\n          \n          {/* Two Column Layout */}\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {/* Performance Charts (2 columns on large screens) */}\n            <div className=\"lg:col-span-2\">\n              <PerformanceCharts \n                classPerformance={dashboardData.classPerformance}\n                categoryDistribution={dashboardData.categoryDistribution}\n              />\n            </div>\n            \n            {/* Activity and Students Section (1 column) */}\n            <div className=\"space-y-4\">\n              {/* Top Students Section */}\n              <StudentSection students={dashboardData.studentPerformance} />\n              \n              {/* Upcoming Deadlines */}\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Upcoming Deadlines</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {dashboardData.upcomingDeadlines.length > 0 ? (\n                      dashboardData.upcomingDeadlines.map((deadline) => (\n                        <div key={deadline.id} className=\"flex items-start space-x-3\">\n                          <Clock className=\"h-5 w-5 text-muted-foreground\" />\n                          <div>\n                            <p className=\"text-sm font-medium\">{deadline.title}</p>\n                            <p className=\"text-xs text-muted-foreground\">\n                              {deadline.class?.name || 'No class'} • \n                              {new Date(deadline.endDate).toLocaleDateString('en-US', {\n                                month: 'short',\n                                day: 'numeric',\n                              })}\n                            </p>\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <p className=\"text-sm text-muted-foreground\">No upcoming deadlines</p>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Performance Tab */}\n        <TabsContent value=\"performance\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <PerformanceCharts \n              classPerformance={dashboardData.classPerformance}\n              categoryDistribution={dashboardData.categoryDistribution}\n              fullWidth\n            />\n          </div>\n        </TabsContent>\n\n        {/* Activity Tab */}\n        <TabsContent value=\"activity\" className=\"space-y-4\">\n          <ActivitySection \n            activityFeed={dashboardData.activityFeed}\n            recentClasses={dashboardData.recentClasses}\n            recentQuizzes={dashboardData.recentQuizzes}\n          />\n        </TabsContent>\n      </Tabs>\n      \n      {/* Quick Action Buttons */}\n      <div className=\"grid grid-cols-2 gap-4 md:grid-cols-4\">\n        <Button \n          variant=\"outline\"\n          className=\"h-20 flex flex-col items-center justify-center gap-1\"\n          onClick={() => router.push('/dashboard/teacher/classes/create')}\n        >\n          <Users className=\"h-5 w-5\" />\n          <span className=\"text-xs\">Create Class</span>\n        </Button>\n        <Button \n          variant=\"outline\"\n          className=\"h-20 flex flex-col items-center justify-center gap-1\"\n          onClick={() => router.push('/dashboard/teacher/quizzes/create')}\n        >\n          <Layers className=\"h-5 w-5\" />\n          <span className=\"text-xs\">Create Quiz</span>\n        </Button>\n        <Button \n          variant=\"outline\"\n          className=\"h-20 flex flex-col items-center justify-center gap-1\"\n          onClick={() => router.push('/dashboard/teacher/classes')}\n        >\n          <Users className=\"h-5 w-5\" />\n          <span className=\"text-xs\">View Classes</span>\n        </Button>\n        <Button \n          variant=\"outline\"\n          className=\"h-20 flex flex-col items-center justify-center gap-1\"\n          onClick={() => router.push('/dashboard/teacher/students')}\n        >\n          <CalendarRange className=\"h-5 w-5\" />\n          <span className=\"text-xs\">View Students</span>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction DashboardSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <Skeleton className=\"h-10 w-[200px]\" />\n        <Skeleton className=\"h-10 w-[100px]\" />\n      </div>\n      \n      {/* Stats Skeleton */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {Array(4).fill(0).map((_, i) => (\n          <Skeleton key={i} className=\"h-[120px] w-full\" />\n        ))}\n      </div>\n      \n      {/* Charts Skeleton */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        <div className=\"lg:col-span-2\">\n          <Skeleton className=\"h-[300px] w-full\" />\n        </div>\n        <div className=\"space-y-4\">\n          <Skeleton className=\"h-[200px] w-full\" />\n          <Skeleton className=\"h-[200px] w-full\" />\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => {\n  // Create a stable reference for the focus event handler to avoid recreation on each render\n  const handleCloseAutoFocus = React.useCallback((event: Event) => {\n    // Prevent default focus behavior to avoid recursion in focus scopes\n    event.preventDefault();\n    \n    // Stop propagation to prevent other FocusScope handlers from executing\n    event.stopPropagation();\n  }, []);\n\n  return (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        avoidCollisions={true}\n        collisionPadding={8}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n  );\n})\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    onFocus={(e) => {\n      // Prevent focus events from triggering too many rerenders\n      e.stopPropagation();\n    }}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/EmptyAnalyticsState.tsx"],"sourcesContent":["import React from 'react'\r\nimport { AlertCircle, BarChart3, Info } from 'lucide-react'\r\nimport { Card } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\n\r\ninterface EmptyAnalyticsStateProps {\r\n  /**\r\n   * The title to display\r\n   */\r\n  title?: string\r\n  /**\r\n   * The description to display\r\n   */\r\n  description?: string\r\n  /**\r\n   * The icon to display\r\n   */\r\n  icon?: React.ReactNode\r\n  /**\r\n   * The action to display\r\n   */\r\n  action?: {\r\n    label: string\r\n    onClick: () => void\r\n  }\r\n  /**\r\n   * Visual style of the empty state\r\n   * @default \"default\"\r\n   */\r\n  variant?: \"default\" | \"error\" | \"warning\" | \"info\"\r\n}\r\n\r\n/**\r\n * Empty state component for analytics sections\r\n * Follows the design system for consistent empty states\r\n */\r\nexport function EmptyAnalyticsState({\r\n  title = \"No data available\",\r\n  description = \"There's no analytics data available for this section at the moment.\",\r\n  icon,\r\n  action,\r\n  variant = \"default\"\r\n}: EmptyAnalyticsStateProps) {\r\n  // Determine icon and colors based on variant\r\n  const getIcon = () => {\r\n    if (icon) return icon\r\n    \r\n    switch(variant) {\r\n      case \"error\":\r\n        return <AlertCircle className=\"h-12 w-12 text-destructive/60\" />\r\n      case \"warning\":\r\n        return <AlertCircle className=\"h-12 w-12 text-amber-500/60\" />\r\n      case \"info\":\r\n        return <Info className=\"h-12 w-12 text-blue-500/60\" />\r\n      default:\r\n        return <BarChart3 className=\"h-12 w-12 text-muted-foreground/60\" />\r\n    }\r\n  }\r\n  \r\n  // Determine title classes based on variant\r\n  const getTitleClass = () => {\r\n    switch(variant) {\r\n      case \"error\":\r\n        return \"text-destructive\"\r\n      case \"warning\":\r\n        return \"text-amber-500\"\r\n      case \"info\":\r\n        return \"text-blue-500\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex flex-col items-center justify-center text-center py-8\">\r\n        {getIcon()}\r\n        <h3 className={`mt-4 text-lg font-semibold ${getTitleClass()}`}>\r\n          {title}\r\n        </h3>\r\n        <p className=\"mt-2 text-sm text-muted-foreground max-w-xs mx-auto\">\r\n          {description}\r\n        </p>\r\n        {action && (\r\n          <Button \r\n            onClick={action.onClick} \r\n            variant={variant === \"default\" ? \"default\" : \"outline\"}\r\n            className=\"mt-6\"\r\n          >\r\n            {action.label}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  )\r\n} "],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;;;;;AAiCO,SAAS,oBAAoB,EAClC,QAAQ,mBAAmB,EAC3B,cAAc,qEAAqE,EACnF,IAAI,EACJ,MAAM,EACN,UAAU,SAAS,EACM;IACzB,6CAA6C;IAC7C,MAAM,UAAU;QACd,IAAI,MAAM,OAAO;QAEjB,OAAO;YACL,KAAK;gBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,6LAAC,uNAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;QAChC;IACF;IAEA,2CAA2C;IAC3C,MAAM,gBAAgB;QACpB,OAAO;YACL,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;;gBACZ;8BACD,6LAAC;oBAAG,WAAW,CAAC,2BAA2B,EAAE,iBAAiB;8BAC3D;;;;;;8BAEH,6LAAC;oBAAE,WAAU;8BACV;;;;;;gBAEF,wBACC,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAS,OAAO,OAAO;oBACvB,SAAS,YAAY,YAAY,YAAY;oBAC7C,WAAU;8BAET,OAAO,KAAK;;;;;;;;;;;;;;;;;AAMzB;KA3DgB","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/AnalyticsSkeletons.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { BarChart3 } from \"lucide-react\";\r\n\r\ninterface AnalyticsSkeletonProps {\r\n  /**\r\n   * The type of analytics skeleton to display\r\n   */\r\n  type: \"score\" | \"class\" | \"quiz\";\r\n  /**\r\n   * The title to display in the skeleton\r\n   */\r\n  title?: string;\r\n}\r\n\r\n/**\r\n * Skeleton loading component for analytics sections\r\n * Follows the design system for consistent loading states\r\n */\r\nexport function AnalyticsSkeleton({\r\n  type = \"score\",\r\n  title = \"Loading Analytics...\"\r\n}: AnalyticsSkeletonProps) {\r\n  // Renders a metrics card skeleton\r\n  const renderMetricCardSkeleton = (count: number = 4) => {\r\n    return (\r\n      <div className=\"grid gap-4 md:grid-cols-4\">\r\n        {Array.from({ length: count }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader className=\"pb-2\">\r\n              <Skeleton className=\"h-4 w-24\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Skeleton className=\"h-8 w-16 mb-2\" />\r\n              <Skeleton className=\"h-3 w-28\" />\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renders a chart skeleton\r\n  const renderChartSkeleton = (height: string = \"h-[300px]\") => {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <Skeleton className=\"h-6 w-48 mb-2\" />\r\n          <Skeleton className=\"h-4 w-64\" />\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className={`${height} flex items-center justify-center`}>\r\n            <div className=\"w-full h-full bg-muted/20 rounded-md flex items-center justify-center\">\r\n              <BarChart3 className=\"h-12 w-12 text-muted-foreground/30\" />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  // Renders a tabbed interface skeleton\r\n  const renderTabbedSkeleton = () => {\r\n    return (\r\n      <Tabs defaultValue=\"tab1\" className=\"space-y-4\">\r\n        <TabsList className=\"grid grid-cols-3 w-full sm:w-[400px]\">\r\n          <TabsTrigger value=\"tab1\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tab2\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"tab3\" className=\"cursor-wait\">\r\n            <Skeleton className=\"h-4 w-16\" />\r\n          </TabsTrigger>\r\n        </TabsList>\r\n        \r\n        <TabsContent value=\"tab1\">\r\n          {renderChartSkeleton()}\r\n        </TabsContent>\r\n      </Tabs>\r\n    );\r\n  };\r\n  \r\n  // Different skeleton types based on analytics component\r\n  if (type === \"score\") {\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-32\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(4)}\r\n        \r\n        <div className=\"space-y-6\">\r\n          {renderChartSkeleton()}\r\n          {renderChartSkeleton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (type === \"class\") {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-40\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(4)}\r\n        {renderTabbedSkeleton()}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (type === \"quiz\") {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Skeleton className=\"h-6 w-32\" />\r\n          <Skeleton className=\"h-9 w-[160px]\" />\r\n        </div>\r\n        \r\n        {renderMetricCardSkeleton(3)}\r\n        {renderTabbedSkeleton()}\r\n        \r\n        <Card>\r\n          <CardHeader>\r\n            <Skeleton className=\"h-6 w-48 mb-2\" />\r\n            <Skeleton className=\"h-4 w-64\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n              {Array.from({ length: 6 }).map((_, i) => (\r\n                <Card key={i} className=\"overflow-hidden\">\r\n                  <div className=\"p-4\">\r\n                    <Skeleton className=\"h-5 w-full mb-3\" />\r\n                    <div className=\"space-y-2\">\r\n                      <Skeleton className=\"h-3 w-3/4\" />\r\n                      <Skeleton className=\"h-3 w-1/2\" />\r\n                      <Skeleton className=\"h-3 w-2/3\" />\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Default fallback skeleton\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>\r\n          <Skeleton className=\"h-4 w-2/3\" />\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[400px] flex items-center justify-center\">\r\n          <div className=\"w-full h-full bg-muted/20 rounded-md flex items-center justify-center\">\r\n            <BarChart3 className=\"h-12 w-12 text-muted-foreground/30\" />\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/ClassParticipationAnalytics.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n  PieChart,\n  Pie,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport {\n  Users,\n  Clock,\n  CalendarClock,\n  BarChart3,\n  PieChart as PieChartIcon,\n  LineChart as LineChartIcon,\n  MessageSquare,\n  Calendar,\n  AlertCircle,\n  Timer,\n  BarChart2,\n} from \"lucide-react\";\nimport { format, parseISO } from \"date-fns\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Alert, AlertTitle, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { \n  useAnalytics, \n  ClassParticipationData,\n  generateEmptyClassParticipationData,\n  TimeFrame,\n  convertToLegacyFormat,\n  LegacyClassParticipationData\n} from \"@/components/providers/analytics-provider\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { EmptyAnalyticsState } from './EmptyAnalyticsState';\nimport { AnalyticsSkeleton } from './AnalyticsSkeletons';\n\ninterface ClassParticipationAnalyticsProps {\n  /**\n   * Total number of classes joined (fallback value)\n   */\n  classesJoined?: number;\n  /**\n   * Loading state\n   */\n  isLoading?: boolean;\n}\n\nconst COLORS = [\"#10b981\", \"#f59e0b\", \"#ef4444\", \"#3b82f6\", \"#8b5cf6\"];\n\n// Helper function to format seconds into hours and minutes\nconst formatTimeSpent = (seconds: number): string => {\n  if (seconds < 60) return `${seconds}s`;\n  \n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  \n  if (hours === 0) return `${minutes}m`;\n  return `${hours}h ${minutes}m`;\n};\n\n// Helper to format dates for different time frames\nconst formatDateLabel = (dateStr: string, timeFrame: TimeFrame): string => {\n  try {\n    // Format depends on date format and time frame\n    if (timeFrame === \"last7days\" || timeFrame === \"last30days\") {\n      // For days format: \"yyyy-MM-dd\" to \"MMM d\"\n      return format(parseISO(dateStr), \"MMM d\");\n    } else if (timeFrame === \"last90days\") {\n      // For weeks format: \"yyyy-MM-dd\" (start of week) to \"MMM d\"\n      return format(parseISO(dateStr), \"MMM d\");\n    } else {\n      // For months format: \"yyyy-MM\" to \"MMM yyyy\"\n      return format(parseISO(`${dateStr}-01`), \"MMM yyyy\");\n    }\n  } catch (e) {\n    return dateStr;\n  }\n};\n\n/**\n * Detailed class participation analytics component for student dashboard\n */\nexport function ClassParticipationAnalytics({\n  classesJoined = 0,\n}: ClassParticipationAnalyticsProps) {\n  const { \n    classParticipationData: analyticsData,\n    classParticipationError: error,\n    isLoadingClassParticipation: isLoadingData,\n    timeFrame,\n    setTimeFrame,\n    fetchClassParticipation\n  } = useAnalytics();\n  \n  const { isStudent } = useAuth();\n  \n  // State to track if initial fetch has been done\n  const [hasInitialFetch, setHasInitialFetch] = useState(false);\n  \n  // Fetch analytics data when component mounts - only if user is a student\n  useEffect(() => {\n    // Only try to fetch data if user is a student and we haven't fetched yet\n    if (!hasInitialFetch && isStudent && !isLoadingData) {\n      fetchClassParticipation().finally(() => {\n        setHasInitialFetch(true);\n      });\n    }\n  }, [fetchClassParticipation, hasInitialFetch, isStudent, isLoadingData]);\n  \n  // Handle time frame change\n  const handleTimeFrameChange = useCallback((value: string) => {\n    if (value !== timeFrame) {\n      setTimeFrame(value as TimeFrame);\n    }\n  }, [timeFrame, setTimeFrame]);\n  \n  // Use fallback data if nothing is available\n  const data = analyticsData || generateEmptyClassParticipationData();\n  \n  // Generate legacy format data for backward compatibility with existing charts\n  const legacyData: LegacyClassParticipationData = convertToLegacyFormat(data);\n  \n  // Combined loading state\n  const isDataLoading = isLoadingData;\n\n  // Show loading state\n  if (isDataLoading) {\n    return <AnalyticsSkeleton type=\"class\" title=\"Class Participation\" />;\n  }\n\n  if (!isStudent) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"warning\"\n        title=\"Analytics not available\"\n        description=\"Class participation analytics are only available for student accounts.\"\n      />\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <EmptyAnalyticsState\n        variant=\"error\"\n        title=\"Error loading class analytics\"\n        description={error || \"There was a problem loading your class participation data.\"}\n        action={{\n          label: \"Try Again\",\n          onClick: () => fetchClassParticipation()\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Key metrics cards */}\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Classes</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.keyMetrics.activeClasses}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Currently active classes\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Engagement Rate</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.keyMetrics.overallEngagementRate}%</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Overall quiz completion rate\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Study Time</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatTimeSpent(data.keyMetrics.totalStudyTimeSeconds)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Time spent on quizzes\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Performance</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {data.classPerformanceBreakdown.length > 0 \n                ? `${Math.round(data.classPerformanceBreakdown.reduce((sum, item) => sum + item.classCompletionRate, 0) / data.classPerformanceBreakdown.length)}%`\n                : \"N/A\"}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Average class completion\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Participation Over Time Chart */}\n      <Card>\n        <CardHeader className=\"pb-2\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <CardTitle className=\"flex items-center gap-2\">\n                <LineChartIcon className=\"h-5 w-5 text-blue-500\" />\n                Participation Over Time\n              </CardTitle>\n              <CardDescription>\n                Your quiz completions over the selected time period\n              </CardDescription>\n            </div>\n            \n            <Select value={timeFrame} onValueChange={handleTimeFrameChange}>\n              <SelectTrigger className=\"w-[160px]\">\n                <SelectValue placeholder=\"Select time frame\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\n                <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\n                <SelectItem value=\"last90days\">Last 90 Days</SelectItem>\n                <SelectItem value=\"allTime\">All Time</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {data.participationOverTime.length === 0 || data.participationOverTime.every(item => item.completedQuizzes === 0) ? (\n            <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\n              <LineChartIcon className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n              <h3 className=\"text-lg font-semibold\">No participation data yet</h3>\n              <p className=\"text-sm text-muted-foreground max-w-md\">\n                Start completing quizzes to see your participation trends over time.\n              </p>\n            </div>\n          ) : (\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                  data={data.participationOverTime}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"date\" \n                    tick={{ fontSize: 12 }}\n                    interval=\"preserveStartEnd\"\n                  />\n                  <YAxis \n                    allowDecimals={false}\n                    tick={{ fontSize: 12 }}\n                  />\n                  <Tooltip \n                    formatter={(value) => [`${value} quizzes`, 'Completed']}\n                    labelFormatter={(value, payload) => {\n                      if (payload && payload.length > 0 && payload[0].payload) {\n                        const originalDate = payload[0].payload.date;\n                        return `Date: ${formatDateLabel(originalDate, timeFrame)}`;\n                      }\n                      return value;\n                    }}\n                  />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"completedQuizzes\"\n                    name=\"Completed Quizzes\"\n                    stroke=\"#10b981\"\n                    activeDot={{ r: 8 }}\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Chart Tabs */}\n      <Tabs defaultValue=\"performance\" className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <TabsList>\n            <TabsTrigger value=\"performance\" className=\"flex items-center gap-1\">\n              <BarChart3 className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Class Performance</span>\n              <span className=\"sm:hidden\">Performance</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"activity\" className=\"flex items-center gap-1\">\n              <PieChartIcon className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">Activity Distribution</span>\n              <span className=\"sm:hidden\">Activities</span>\n            </TabsTrigger>\n          </TabsList>\n        </div>\n\n        <TabsContent value=\"performance\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Class Performance Breakdown</CardTitle>\n              <CardDescription>\n                Your quiz completion rates across different classes\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              {data.classPerformanceBreakdown.length === 0 ? (\n                <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\n                  <Users className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n                  <h3 className=\"text-lg font-semibold\">No class data yet</h3>\n                  <p className=\"text-sm text-muted-foreground max-w-md\">\n                    Start participating in your classes by taking quizzes to see your performance analytics here.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"h-[350px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                      layout=\"vertical\"\n                      data={data.classPerformanceBreakdown}\n                      margin={{\n                        top: 20,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis type=\"number\" domain={[0, 100]} label={{ value: 'Completion Rate (%)', position: 'insideBottom', offset: -5 }} />\n                      <YAxis dataKey=\"className\" type=\"category\" width={100} />\n                      <Tooltip formatter={(value, name) => {\n                        if (name === \"classCompletionRate\") return [`${value}%`, 'Completion Rate'];\n                        return [value, name];\n                      }} />\n                      <Legend />\n                      <Bar \n                        dataKey=\"classCompletionRate\" \n                        name=\"Completion Rate\" \n                        fill=\"#10b981\" \n                        radius={[0, 4, 4, 0]}\n                      />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"activity\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Class Activity Distribution</CardTitle>\n              <CardDescription>\n                How your participation is distributed between active engagement and passive viewing\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              {legacyData.classActivities.every(activity => activity.value === 0) ? (\n                <div className=\"flex flex-col items-center justify-center h-[300px] text-center p-4\">\n                  <PieChartIcon className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n                  <h3 className=\"text-lg font-semibold\">No activity data yet</h3>\n                  <p className=\"text-sm text-muted-foreground max-w-md\">\n                    Start participating in your classes to see how your activities are distributed.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"h-[350px] flex items-center justify-center\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"max-w-[500px] mx-auto\">\n                    <PieChart>\n                      <Pie\n                        data={legacyData.classActivities}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={120}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                      >\n                        {legacyData.classActivities.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => `${value}%`} />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Class Time Spent Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Timer className=\"h-5 w-5 text-blue-500\" />\n            Time Spent by Class\n          </CardTitle>\n          <CardDescription>\n            Detailed breakdown of your study time across classes\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {data.classPerformanceBreakdown.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n              <Clock className=\"h-10 w-10 text-muted-foreground opacity-50 mb-2\" />\n              <h3 className=\"text-lg font-semibold\">No time data available</h3>\n              <p className=\"text-sm text-muted-foreground max-w-md\">\n                Once you spend time on quizzes, your study time by class will appear here.\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Class</TableHead>\n                  <TableHead>Quizzes Completed</TableHead>\n                  <TableHead>Quizzes Assigned</TableHead>\n                  <TableHead className=\"text-right\">Time Spent</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {data.classPerformanceBreakdown.map((classData) => (\n                  <TableRow key={classData.classId}>\n                    <TableCell className=\"font-medium\">{classData.className}</TableCell>\n                    <TableCell>{classData.quizzesCompletedByStudent}</TableCell>\n                    <TableCell>{classData.quizzesAssigned}</TableCell>\n                    <TableCell className=\"text-right\">\n                      <Badge variant=\"outline\">\n                        <Clock className=\"h-3 w-3 mr-1\" />\n                        {formatTimeSpent(classData.timeSpentInClassSeconds)}\n                      </Badge>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2293, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root> & {\n    variant?: \"default\" | \"muted\" | \"accent\" | \"gradient\"\n  }\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, variant = \"default\", ...props },\n    ref\n  ) => {\n    const variantClasses = {\n      default: \"bg-border\",\n      muted: \"bg-muted\",\n      accent: \"bg-accent/30\",\n      gradient: \"bg-gradient-to-r from-transparent via-border/70 to-transparent\"\n    }\n\n    return (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n          \"shrink-0\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n          variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  )\n  }\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAM/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,UAAU,SAAS,EAAE,GAAG,OAAO,EAC3F;IAEA,MAAM,iBAAiB;QACrB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IAEA,qBACA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,YACF,gBAAgB,eAAe,mBAAmB,kBAChD,cAAc,CAAC,QAAQ,EACzB;QAED,GAAG,KAAK;;;;;;AAGb;;AAEF,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":["file:///F:/Github%20Project/quizmaker/my-project/components/dashboard/student/analytics/test-api.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nexport function TestClassParticipationAPI() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [responseData, setResponseData] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [timeFrame, setTimeFrame] = useState<string>(\"last30days\");\r\n\r\n  const testAPI = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/users/me/class-participation-analytics?timeFrame=${timeFrame}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      setResponseData(result);\r\n    } catch (err) {\r\n      console.error(\"API test error:\", err);\r\n      setError(err instanceof Error ? err.message : \"An unknown error occurred\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mt-4\">\r\n      <CardHeader>\r\n        <CardTitle className=\"text-lg\">Test Class Participation API</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"flex gap-4 mb-4\">\r\n          <Select value={timeFrame} onValueChange={setTimeFrame}>\r\n            <SelectTrigger className=\"w-[180px]\">\r\n              <SelectValue placeholder=\"Select time frame\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"last7days\">Last 7 Days</SelectItem>\r\n              <SelectItem value=\"last30days\">Last 30 Days</SelectItem>\r\n              <SelectItem value=\"last90days\">Last 90 Days</SelectItem>\r\n              <SelectItem value=\"allTime\">All Time</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n          \r\n          <Button onClick={testAPI} disabled={isLoading}>\r\n            {isLoading ? (\r\n              <>\r\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                Testing...\r\n              </>\r\n            ) : (\r\n              \"Test API\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"bg-destructive/10 p-4 rounded-md text-destructive mb-4\">\r\n            <p className=\"font-medium\">Error:</p>\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n        \r\n        {responseData && (\r\n          <div>\r\n            <h3 className=\"font-medium mb-2\">API Response:</h3>\r\n            <Separator className=\"my-2\" />\r\n            <div className=\"overflow-auto max-h-96 bg-muted/50 p-2 rounded-md\">\r\n              <pre className=\"text-xs whitespace-pre-wrap\">\r\n                {JSON.stringify(responseData, null, 2)}\r\n              </pre>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASO,SAAS;;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACtD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAEnD,MAAM,UAAU;QACd,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,sDAAsD,EAAE,WAAW;YAEjG,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,OAAO,EAAE,SAAS,MAAM,EAAE;YAChE;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAClC,gBAAgB;QAClB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,mBAAmB;YACjC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,4HAAA,CAAA,aAAU;0BACT,cAAA,6LAAC,4HAAA,CAAA,YAAS;oBAAC,WAAU;8BAAU;;;;;;;;;;;0BAEjC,6LAAC,4HAAA,CAAA,cAAW;;kCACV,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,8HAAA,CAAA,SAAM;gCAAC,OAAO;gCAAW,eAAe;;kDACvC,6LAAC,8HAAA,CAAA,gBAAa;wCAAC,WAAU;kDACvB,cAAA,6LAAC,8HAAA,CAAA,cAAW;4CAAC,aAAY;;;;;;;;;;;kDAE3B,6LAAC,8HAAA,CAAA,gBAAa;;0DACZ,6LAAC,8HAAA,CAAA,aAAU;gDAAC,OAAM;0DAAY;;;;;;0DAC9B,6LAAC,8HAAA,CAAA,aAAU;gDAAC,OAAM;0DAAa;;;;;;0DAC/B,6LAAC,8HAAA,CAAA,aAAU;gDAAC,OAAM;0DAAa;;;;;;0DAC/B,6LAAC,8HAAA,CAAA,aAAU;gDAAC,OAAM;0DAAU;;;;;;;;;;;;;;;;;;0CAIhC,6LAAC,8HAAA,CAAA,SAAM;gCAAC,SAAS;gCAAS,UAAU;0CACjC,0BACC;;sDACE,6LAAC,+MAAA,CAAA,UAAO;4CAAC,WAAU;;;;;;wCAA8B;;mDAInD;;;;;;;;;;;;oBAKL,uBACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAAc;;;;;;0CAC3B,6LAAC;0CAAG;;;;;;;;;;;;oBAIP,8BACC,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAmB;;;;;;0CACjC,6LAAC,iIAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;8CACZ,KAAK,SAAS,CAAC,cAAc,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpD;GAhFgB;KAAA","debugId":null}}]
}